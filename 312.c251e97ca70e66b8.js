"use strict";
(self.webpackChunkrubic = self.webpackChunkrubic || []).push([
  [312],
  {
    87312: (Fg, Un, p) => {
      p.r(Un), p.d(Un, { SwapsModule: () => Ig });
      var At = p(19132),
        O = p(49671),
        ae = p(25302),
        S = p(37522),
        E = p(45950),
        nt = p(83905),
        q = p(54750),
        U = p(57990),
        Wn = p(50590),
        Z = p(39300),
        fe = p(18505),
        N = p(63900),
        A = p(61135),
        j = p(39841),
        o = p(83428),
        e = p(94650);
      let Oe = (() => {
        class n {
          constructor(t) {
            (this.swapFormService = t),
              (this._address$ = new A.X(null)),
              (this.address$ = this._address$.asObservable()),
              (this._isAddressRequired$ = new A.X(!1)),
              (this.isAddressRequired$ =
                this._isAddressRequired$.asObservable()),
              (this._isAddressValid$ = new A.X(!1)),
              (this.isAddressValid$ = this._isAddressValid$.asObservable()),
              this.watchIsAddressRequired();
          }
          get address() {
            return this._address$.getValue();
          }
          watchIsAddressRequired() {
            (0, j.a)([
              this.swapFormService.fromBlockchain$,
              this.swapFormService.toBlockchain$,
            ]).subscribe(([t, i]) => {
              let r, s;
              try {
                r = o.BlockchainsInfo.getChainType(t);
              } catch {}
              try {
                s = o.BlockchainsInfo.getChainType(i);
              } catch {}
              this._isAddressRequired$.next(
                t && i && t !== i && (!s || r !== s)
              );
            });
          }
          setAddress(t) {
            this._address$.next(t);
          }
          setIsAddressValid(t) {
            this._isAddressValid$.next(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵinject(E.q));
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var L = p(35628),
        m = p(36895),
        se = p(68031),
        H = p(33112),
        R = p(89383);
      const gr = function (n) {
        return { slippage: n };
      };
      function hr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 9),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelement(3, "img", 10),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind2(
                2,
                2,
                "modals.warningModal.slippageAmount",
                e.ɵɵpureFunction1(7, gr, t.highSlippage)
              ),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "tuiHint",
              e.ɵɵpipeBind1(4, 5, "modals.warningModal.highSlippage")
            );
        }
      }
      const fr = function (n) {
        return { priceImpact: n };
      };
      function vr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 9),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelement(3, "img", 10),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind2(
                2,
                2,
                "modals.warningModal.priceImpactAmount",
                e.ɵɵpureFunction1(7, fr, t.highPriceImpact)
              ),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "tuiHint",
              e.ɵɵpipeBind1(4, 5, "modals.warningModal.highPriceImpact")
            );
        }
      }
      let Cr = (() => {
        class n {
          constructor(t) {
            (this.context = t),
              (this.highSlippage = this.context.data.highSlippage),
              (this.highPriceImpact = this.context.data.highPriceImpact);
          }
          confirm() {
            this.context.completeWith(!0);
          }
          cancel() {
            this.context.completeWith(!1);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(L.yf));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-settings-warning-modal"]],
            decls: 14,
            vars: 8,
            consts: [
              [1, "modal"],
              [1, "modal__content"],
              [1, "modal__body"],
              [
                "src",
                "assets/images/bridge/warning-image.svg",
                "alt",
                "Success",
                1,
                "modal__warning-image",
              ],
              [1, "modal__footer"],
              ["class", "modal__footer-text", 4, "ngIf"],
              [1, "modal__footer-actions"],
              ["appearance", "secondary", 3, "onClick"],
              ["appearance", "primary", 3, "onClick"],
              [1, "modal__footer-text"],
              [
                "src",
                "assets/images/swaps/swaps-info/question-icon.svg",
                "alt",
                "question",
                3,
                "tuiHint",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "main", 2),
                e.ɵɵelement(3, "img", 3),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(4, "div", 4),
                e.ɵɵtemplate(5, hr, 5, 9, "div", 5),
                e.ɵɵtemplate(6, vr, 5, 9, "div", 5),
                e.ɵɵelementStart(7, "div", 6)(8, "app-rubic-button", 7),
                e.ɵɵlistener("onClick", function () {
                  return r.confirm();
                }),
                e.ɵɵtext(9),
                e.ɵɵpipe(10, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(11, "app-rubic-button", 8),
                e.ɵɵlistener("onClick", function () {
                  return r.cancel();
                }),
                e.ɵɵtext(12),
                e.ɵɵpipe(13, "translate"),
                e.ɵɵelementEnd()()()()()),
                2 & i &&
                  (e.ɵɵadvance(5),
                  e.ɵɵproperty("ngIf", r.highSlippage),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.highPriceImpact),
                  e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(10, 4, "common.complete"),
                    " "
                  ),
                  e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(13, 6, "common.cancel"),
                    " "
                  ));
            },
            dependencies: [m.O5, se.j, H.D, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{display:block;padding-bottom:32px}html.iframe-horizontal   [_nghost-%COMP%]{padding-bottom:0}.modal__content[_ngcontent-%COMP%]{padding:35px 20px 0;text-align:center}@media (max-width: 768px){.modal__content[_ngcontent-%COMP%]{padding:10px}}.modal__footer[_ngcontent-%COMP%]{margin-top:20px}.modal__footer-text[_ngcontent-%COMP%]{color:var(--primary-text);font-weight:500;font-size:24px;line-height:32px;letter-spacing:normal;display:flex;align-items:center;justify-content:center;margin-bottom:18px}@media (max-width: 768px){.modal__footer-text[_ngcontent-%COMP%]{font-size:16px;line-height:24px}}.modal__footer-text[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:8px}.modal__footer-actions[_ngcontent-%COMP%]{display:flex;gap:16px;padding-top:16px}.modal__footer-actions[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]{width:100%}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]{display:flex;align-items:center}html.iframe-horizontal[_nghost-%COMP%]   .modal__content[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__content[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:center;padding-top:0}html.iframe-horizontal[_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]{margin-right:80px;height:100%;display:flex;align-items:center}html.iframe-horizontal[_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:120px}html.iframe-horizontal[_nghost-%COMP%]   .modal__footer-text[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__footer-text[_ngcontent-%COMP%]{color:var(--primary-text);font-weight:500;font-size:20px;line-height:32px;letter-spacing:normal}html.iframe-horizontal[_nghost-%COMP%]   .modal__footer-text[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__footer-text[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:4px}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{text-align:left;font-size:18px}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%]     app-rubic-button button, html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]     app-rubic-button button{width:150px;float:left}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var M = p(50404);
      let xr = (() => {
        class n {
          constructor() {
            (this._priceImpact$ = new A.X(void 0)),
              (this.priceImpact$ = this._priceImpact$.asObservable());
          }
          get priceImpact() {
            return this._priceImpact$.getValue();
          }
          static calculatePriceImpact(t, i, r, s) {
            if (!(t && i && r?.isFinite() && s?.isFinite())) return null;
            const c = r.multipliedBy(t),
              l = s.multipliedBy(i);
            return c
              .minus(l)
              .dividedBy(c)
              .multipliedBy(100)
              .dp(2, M.Z.ROUND_HALF_UP)
              .toNumber();
          }
          setPriceImpact(t) {
            this._priceImpact$.next(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          }));
        }
        return n;
      })();
      var De = p(22307),
        v = p(24006),
        Ae = p(64234),
        br = p(57156),
        Q = p(68151);
      let ve = (() => {
        class n {
          constructor(t, i, r, s, c, l) {
            (this.storeService = t),
              (this.iframeService = i),
              (this.authService = r),
              (this.targetNetworkAddressService = s),
              (this.queryParamsService = c),
              (this.dialogService = l),
              (this.defaultSlippageTolerance = {
                instantTrades: 1,
                crossChain: 4,
              }),
              (this.defaultItSettings = this.getDefaultITSettings()),
              (this.defaultCcrSettings = this.getDefaultCCRSettings()),
              this.createForm(),
              this.initSubscriptions(),
              this.subscribeOnQueryParams();
          }
          get instantTrade() {
            return this.settingsForm.controls[S.V.INSTANT_TRADE];
          }
          get instantTradeValue() {
            return this.settingsForm.get(S.V.INSTANT_TRADE).value;
          }
          get instantTradeValueChanges() {
            return this.settingsForm.get(S.V.INSTANT_TRADE).valueChanges;
          }
          get crossChainRouting() {
            return this.settingsForm.controls[S.V.CROSS_CHAIN_ROUTING];
          }
          get crossChainRoutingValue() {
            return this.settingsForm.get(S.V.CROSS_CHAIN_ROUTING).value;
          }
          get crossChainRoutingValueChanges() {
            return this.settingsForm.get(S.V.CROSS_CHAIN_ROUTING).valueChanges;
          }
          subscribeOnQueryParams() {
            this.queryParamsService.queryParams$
              .pipe((0, Wn.P)(Boolean))
              .subscribe((t) => {
                if (t.iframe) {
                  const i = {
                    slippageIt: t.slippageIt ? parseFloat(t.slippageIt) : null,
                    slippageCcr: t.slippageCcr
                      ? parseFloat(t.slippageCcr)
                      : null,
                  };
                  (this.defaultItSettings = this.getDefaultITSettings(
                    i.slippageIt
                  )),
                    (this.defaultCcrSettings = this.getDefaultCCRSettings(
                      i.slippageCcr
                    )),
                    this.instantTrade.patchValue({
                      slippageTolerance:
                        this.defaultItSettings.slippageTolerance,
                    }),
                    this.crossChainRouting.patchValue({
                      slippageTolerance:
                        this.defaultCcrSettings.slippageTolerance,
                    });
                }
              });
          }
          getDefaultITSettings(t) {
            return {
              autoSlippageTolerance: !0,
              slippageTolerance:
                this.parseSlippage(t) ??
                this.defaultSlippageTolerance.instantTrades,
              deadline: 20,
              disableMultihops: !1,
              autoRefresh: Boolean(this.authService?.user?.address),
              showReceiverAddress: !1,
            };
          }
          getDefaultCCRSettings(t) {
            return {
              autoSlippageTolerance: !0,
              slippageTolerance:
                this.parseSlippage(t) ??
                this.defaultSlippageTolerance.crossChain,
              showReceiverAddress: !1,
            };
          }
          parseSlippage(t) {
            return !t || isNaN(t) ? null : Math.min(Math.max(t, 0.1), 50);
          }
          createForm() {
            this.settingsForm = new v.FormGroup({
              [S.V.INSTANT_TRADE]: new v.FormGroup({
                autoSlippageTolerance: new v.FormControl(
                  this.defaultItSettings.autoSlippageTolerance
                ),
                slippageTolerance: new v.FormControl(
                  this.defaultItSettings.slippageTolerance
                ),
                deadline: new v.FormControl(this.defaultItSettings.deadline),
                disableMultihops: new v.FormControl(
                  this.defaultItSettings.disableMultihops
                ),
                autoRefresh: new v.FormControl(
                  this.defaultItSettings.autoRefresh
                ),
                showReceiverAddress: new v.FormControl(
                  this.defaultItSettings.showReceiverAddress
                ),
              }),
              [S.V.CROSS_CHAIN_ROUTING]: new v.FormGroup({
                autoSlippageTolerance: new v.FormControl(
                  this.defaultItSettings.autoSlippageTolerance
                ),
                slippageTolerance: new v.FormControl(
                  this.defaultCcrSettings.slippageTolerance
                ),
                showReceiverAddress: new v.FormControl(
                  this.defaultCcrSettings.showReceiverAddress
                ),
              }),
            });
          }
          initSubscriptions() {
            this.authService.currentUser$
              .pipe(
                (0, Z.h)((t) => Boolean(t?.address)),
                (0, fe.b)(() => {
                  const t = this.storeService.getItem("settings");
                  t &&
                    !this.iframeService.isIframe &&
                    this.settingsForm.patchValue({ ...JSON.parse(t) });
                }),
                (0, N.w)(() => this.settingsForm.valueChanges)
              )
              .subscribe(() => this.saveSettingsToLocalStorage()),
              this.targetNetworkAddressService.isAddressRequired$.subscribe(
                (t) => {
                  t
                    ? ((this.ccrShowReceiverAddressUserValue =
                        this.crossChainRoutingValue.showReceiverAddress),
                      this.crossChainRouting.patchValue({
                        showReceiverAddress: !0,
                      }))
                    : void 0 !== this.ccrShowReceiverAddressUserValue &&
                      this.crossChainRouting.patchValue({
                        showReceiverAddress:
                          this.ccrShowReceiverAddressUserValue,
                      });
                }
              );
          }
          serializeForm(t) {
            const i = (0, q.Zw)(t);
            return JSON.stringify(i);
          }
          checkSlippageAndPriceImpact(t, i) {
            var r = this;
            return (0, O.Z)(function* () {
              const s =
                t === S.V.CROSS_CHAIN_ROUTING
                  ? r.crossChainRoutingValue.slippageTolerance
                  : r.instantTradeValue.slippageTolerance;
              (!i.from.price.toNumber() || !i.to.price.toNumber()) &&
                (yield i.from.getAndUpdateTokenPrice(),
                yield i.to.getAndUpdateTokenPrice());
              const c = xr.calculatePriceImpact(
                  i.from.price.toNumber(),
                  i.to.price.toNumber(),
                  i.from.tokenAmount,
                  i.to.tokenAmount
                ),
                l = { highSlippage: s > 5 && s, highPriceImpact: c > 30 && c };
              return (
                (!l.highSlippage && !l.highPriceImpact) ||
                (0, nt.z)(
                  r.dialogService.open(new L.Al(Cr), { data: l, size: "l" })
                )
              );
            })();
          }
          saveSettingsToLocalStorage(t = this.settingsForm.getRawValue()) {
            this.storeService.setItem("settings", this.serializeForm(t));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(br.d),
              e.ɵɵinject(Q.b),
              e.ɵɵinject(U.e),
              e.ɵɵinject(Oe),
              e.ɵɵinject(Ae.E),
              e.ɵɵinject(De.RO)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var ce = p(71884),
        P = p(82722),
        x = p(54004),
        yr = p(11365),
        w = p(19014),
        Ue = p(49218),
        de = p(17459),
        z = p(90714),
        Ce = p(77579),
        _e = (() => {
          return (
            ((n = _e || (_e = {})).REFRESHING = "refreshing"),
            (n.IN_PROGRESS = "in progress"),
            (n.STOPPED = "stopped"),
            _e
          );
          var n;
        })();
      let pt = (() => {
        class n {
          constructor(t, i) {
            (this.swapFormService = t),
              (this.settingsService = i),
              (this._status$ = new A.X(_e.STOPPED)),
              (this.status$ = this._status$.asObservable()),
              (this._onRefresh$ = new Ce.x()),
              (this.onRefresh$ = this._onRefresh$.asObservable()),
              (this.timeout = 3e4),
              (this.isRefreshing = !1),
              (this.isForcedRefresh = !1),
              (this.isRefreshRotating$ = this.status$.pipe(
                (0, x.U)((r, s) => {
                  const c = 1 === s,
                    l =
                      this.isForcedRefresh ||
                      this.settingsService.instantTradeValue.autoRefresh;
                  return (
                    this.isForcedRefresh && (this.isForcedRefresh = !1),
                    c || (l && r !== _e.STOPPED)
                  );
                })
              )),
              this.swapFormService.isFilled$
                .pipe((0, ce.x)())
                .subscribe((r) => {
                  r ||
                    (this._status$.next(_e.STOPPED),
                    clearTimeout(this.timeoutId));
                });
          }
          get status() {
            return this._status$.getValue();
          }
          onButtonClick() {
            this._onRefresh$.next({ isForced: !0 }),
              (this.isForcedRefresh = !0);
          }
          setRefreshing() {
            clearTimeout(this.timeoutId),
              (this.isRefreshing = !0),
              this.status !== _e.IN_PROGRESS &&
                this._status$.next(_e.REFRESHING);
          }
          setStopped() {
            (this.isRefreshing = !1),
              this.status !== _e.IN_PROGRESS && this._status$.next(_e.STOPPED),
              this.setupTimer();
          }
          setupTimer() {
            clearTimeout(this.timeoutId),
              (this.timeoutId = setTimeout(() => {
                this._onRefresh$.next({ isForced: !1 });
              }, this.timeout));
          }
          startInProgress() {
            this._status$.next(_e.IN_PROGRESS);
          }
          stopInProgress() {
            this._status$.next(this.isRefreshing ? _e.REFRESHING : _e.STOPPED);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵinject(E.q), e.ɵɵinject(ve));
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var Mt = p(61241),
        dt = p(637);
      let mt = (() => {
        class n {
          constructor() {
            (this._widgetOpened$ = new A.X(!1)),
              (this.widgetOpened$ = this._widgetOpened$.asObservable());
          }
          set widgetOpened(t) {
            this._widgetOpened$.next(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var nn = p(19835);
      let Gn = (() => {
        class n {
          constructor(t) {
            (this.elementRef = t),
              (this.amountChange = new e.EventEmitter()),
              (this.amountRegex = /^([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)?$/),
              (this.prevValue = ""),
              (this.prevCaretPosition = 0),
              (this.isFocused = !1);
          }
          set decimals(t) {
            (this._decimals = t), setTimeout(() => this.onChange());
          }
          onChange() {
            const t = this.elementRef.nativeElement.value || "";
            let i = t.replaceAll(",", ""),
              r = this.elementRef.nativeElement.selectionStart;
            t && "," === t[t.length - 1] && (i += "."),
              "." === i &&
                ("" === this.prevValue
                  ? ((i = "0."), (r = 2))
                  : ((i = ""), (r = 0))),
              this.amountRegex.test(i)
                ? ((i = this.getNewValue(i)),
                  (r =
                    i === this.prevValue
                      ? this.prevCaretPosition
                      : this.getNewCaretPosition(i, r)))
                : ((i = this.prevValue), (r = this.prevCaretPosition)),
              (this.elementRef.nativeElement.value = i),
              this.isFocused &&
                this.elementRef.nativeElement.setSelectionRange(r, r),
              this.amountChange.emit(i),
              (this.prevValue = i),
              (this.prevCaretPosition = r);
          }
          getNewValue(t) {
            if (t.includes(".")) {
              const s = t.indexOf(".") + 1;
              t = t.slice(0, s + this._decimals);
            }
            const [i, r] = t.split(".");
            return (
              i.length &&
                (t =
                  new M.Z(i).toFormat(nn.f) +
                  (t.includes(".") ? "." : "") +
                  (r || "")),
              t
            );
          }
          getNewCaretPosition(t, i) {
            const s =
              this.prevValue
                .substring(0, i - (this.prevValue.length < t.length ? 1 : 0))
                .split(",").length - 1;
            let l = i + (t.substring(0, i).split(",").length - 1 - s);
            return l && t.length && "," === t[l - 1] && l--, l;
          }
          onCaretPositionChange() {
            this.prevCaretPosition =
              this.elementRef.nativeElement.selectionStart;
          }
          onFocus() {
            this.isFocused = !0;
          }
          onFocusOut() {
            this.isFocused = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(e.ElementRef));
          });
          static #t = (this.ɵdir = e.ɵɵdefineDirective({
            type: n,
            selectors: [["", "appTokenAmount", ""]],
            hostBindings: function (i, r) {
              1 & i &&
                e.ɵɵlistener("ngModelChange", function () {
                  return r.onChange();
                })("keyup", function () {
                  return r.onCaretPositionChange();
                })("click", function () {
                  return r.onCaretPositionChange();
                })("focus", function () {
                  return r.onFocus();
                })("focusout", function () {
                  return r.onFocusOut();
                });
            },
            inputs: { decimals: "decimals" },
            outputs: { amountChange: "amountChange" },
          }));
        }
        return n;
      })();
      var me = p(25397),
        Me = p(48653),
        Ee = p(15719),
        _t = p(42801),
        Kn = p(66193);
      let ue = (() => {
          class n {
            constructor(t, i, r, s) {
              (this.tokensStoreService = t),
                (this.tokensNetworkService = i),
                (this.swapFormService = r),
                (this.destroy$ = s),
                (this._assetType$ = new A.X(void 0)),
                (this.assetType$ = this._assetType$.asObservable()),
                (this._assetSelected$ = new Ce.x()),
                (this.assetSelected$ = this._assetSelected$.asObservable()),
                (this._selectorListType$ = new A.X(void 0)),
                (this.selectorListType$ =
                  this._selectorListType$.asObservable()),
                this.subscribeOnAssetChange();
            }
            get formType() {
              return this._formType;
            }
            get assetType() {
              return this._assetType$.value;
            }
            set assetType(t) {
              this._assetType$.next(t);
            }
            get selectorListType() {
              return this._selectorListType$.value;
            }
            set selectorListType(t) {
              this._selectorListType$.next(t);
            }
            initParameters(t) {
              this._formType = t.formType;
              const r =
                this.swapFormService.inputValue[
                  "from" === this.formType ? "fromAssetType" : "toBlockchain"
                ];
              (this.assetType = r),
                (this.selectorListType = "fiat" === r ? "fiats" : "tokens");
            }
            subscribeOnAssetChange() {
              this.assetType$
                .pipe((0, Z.h)(Boolean), (0, ce.x)(), (0, P.R)(this.destroy$))
                .subscribe((t) => {
                  if (
                    !this.swapFormService.inputValue[
                      "from" === this.formType ? "fromAsset" : "toToken"
                    ]
                  ) {
                    const r =
                      "from" === this.formType
                        ? "fromAssetType"
                        : "toBlockchain";
                    this.swapFormService.inputValue[r] !== t &&
                      this.swapFormService.inputControl.patchValue({
                        [r]: this.assetType,
                      });
                  }
                  this.checkAndRefetchTokenList();
                });
            }
            checkAndRefetchTokenList() {
              this.tokensNetworkService.needRefetchTokens &&
                (this.tokensNetworkService.tokensRequestParameters = void 0);
            }
            setSelectorListTypeByAssetType() {
              this.selectorListType =
                "fiat" === this.assetType ? "fiats" : "tokens";
            }
            openFiatsList() {
              (this.assetType = "fiat"), (this.selectorListType = "fiats");
            }
            openBlockchainsList() {
              this.selectorListType = "blockchains";
            }
            onBlockchainSelect(t) {
              (this.assetType = t),
                this.tokensStoreService.startBalanceCalculating(t),
                (this.selectorListType = "tokens");
            }
            onAssetSelect(t) {
              this._assetSelected$.next(t);
            }
            getAssetType(t) {
              return this.swapFormService.inputValue[
                "from" === t ? "fromAssetType" : "toBlockchain"
              ];
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(_t.Z),
                e.ɵɵinject(Kn.I),
                e.ɵɵinject(E.q),
                e.ɵɵinject(w.a3)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        We = (() => {
          class n {
            constructor(t, i) {
              (this.assetsSelectorService = t),
                (this.destroy$ = i),
                (this._query$ = new A.X("")),
                (this.query$ = this._query$.asObservable()),
                this.subscribeOnSelectorListTypeChange();
            }
            get query() {
              return this._query$.value;
            }
            set query(t) {
              this._query$.next(t);
            }
            subscribeOnSelectorListTypeChange() {
              this.assetsSelectorService.selectorListType$
                .pipe((0, ce.x)(), (0, P.R)(this.destroy$))
                .subscribe(() => {
                  this.query = "";
                });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(ue), e.ɵɵinject(w.a3));
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      var Et = p(68873);
      const Xn = {
          [o.BLOCKCHAIN_NAME.ICP]: o.BLOCKCHAIN_NAME.ICP,
          [o.BLOCKCHAIN_NAME.CARDANO]: o.BLOCKCHAIN_NAME.CARDANO,
          [o.BLOCKCHAIN_NAME.ALGORAND]: o.BLOCKCHAIN_NAME.ALGORAND,
          [o.BLOCKCHAIN_NAME.DOGECOIN]: o.BLOCKCHAIN_NAME.DOGECOIN,
          [o.BLOCKCHAIN_NAME.POLKADOT]: o.BLOCKCHAIN_NAME.POLKADOT,
          [o.BLOCKCHAIN_NAME.LITECOIN]: o.BLOCKCHAIN_NAME.LITECOIN,
          [o.BLOCKCHAIN_NAME.MONERO]: o.BLOCKCHAIN_NAME.MONERO,
          [o.BLOCKCHAIN_NAME.RIPPLE]: o.BLOCKCHAIN_NAME.RIPPLE,
          [o.BLOCKCHAIN_NAME.ZILLIQA]: o.BLOCKCHAIN_NAME.ZILLIQA,
          [o.BLOCKCHAIN_NAME.DASH]: o.BLOCKCHAIN_NAME.DASH,
          [o.BLOCKCHAIN_NAME.TEZOS]: o.BLOCKCHAIN_NAME.TEZOS,
        },
        Sr = [
          o.BLOCKCHAIN_NAME.ETHEREUM,
          o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN,
          o.BLOCKCHAIN_NAME.POLYGON,
          o.BLOCKCHAIN_NAME.AVALANCHE,
          o.BLOCKCHAIN_NAME.ARBITRUM,
          o.BLOCKCHAIN_NAME.FANTOM,
          o.BLOCKCHAIN_NAME.BOBA,
          o.BLOCKCHAIN_NAME.BOBA_BSC,
          o.BLOCKCHAIN_NAME.BOBA_AVALANCHE,
          o.BLOCKCHAIN_NAME.TELOS,
          o.BLOCKCHAIN_NAME.KAVA,
          o.BLOCKCHAIN_NAME.OPTIMISM,
          o.BLOCKCHAIN_NAME.AURORA,
          o.BLOCKCHAIN_NAME.OASIS,
          o.BLOCKCHAIN_NAME.METIS,
          o.BLOCKCHAIN_NAME.KLAYTN,
          o.BLOCKCHAIN_NAME.VELAS,
          o.BLOCKCHAIN_NAME.SYSCOIN,
          o.BLOCKCHAIN_NAME.MOONRIVER,
          o.BLOCKCHAIN_NAME.TRON,
          o.BLOCKCHAIN_NAME.MOONBEAM,
          o.BLOCKCHAIN_NAME.FUSE,
          o.BLOCKCHAIN_NAME.CELO,
          o.BLOCKCHAIN_NAME.OKE_X_CHAIN,
          o.BLOCKCHAIN_NAME.GNOSIS,
          o.BLOCKCHAIN_NAME.CRONOS,
          o.BLOCKCHAIN_NAME.BITCOIN,
          o.BLOCKCHAIN_NAME.NEAR,
          o.BLOCKCHAIN_NAME.SOLANA,
          ...Object.values(Xn),
        ],
        Zn = [];
      var rn = p(55404),
        ge = p(65869),
        Ge = p(22519);
      const Qn = {
        [o.BLOCKCHAIN_NAME.ETHEREUM]: "ETH",
        [o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN]: "BNB_BEP20",
        [o.BLOCKCHAIN_NAME.POLYGON]: "MATIC",
        [o.BLOCKCHAIN_NAME.AVALANCHE]: "AVAX_CCHAIN",
      };
      var Jn = p(48170);
      const Tr = [
        o.BLOCKCHAIN_NAME.ETHEREUM,
        o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN,
        o.BLOCKCHAIN_NAME.POLYGON,
        o.BLOCKCHAIN_NAME.AVALANCHE,
      ];
      var It = p(50866),
        qn = p(30268),
        Nt = p(80529);
      let Rt = (() => {
          class n {
            constructor(t, i, r, s, c) {
              (this.httpClient = t),
                (this.sdkService = i),
                (this.gasService = r),
                (this.onramperService = s),
                (this.platformConfigurationService = c);
            }
            static isSupportedBlockchain(t) {
              return Tr.some((i) => i === t);
            }
            getOutputTokenAmount(t) {
              var i = this;
              return (0, O.Z)(function* () {
                const r = yield i.getOutputNativeAmount(t);
                if (o.EvmWeb3Pure.isNativeAddress(t.toToken.address)) return r;
                const s = i.platformConfigurationService.useOnChainProxy,
                  c = yield i.sdkService.instantTrade.calculateTrade(
                    {
                      address: o.EvmWeb3Pure.nativeTokenAddress,
                      blockchain: t.toToken.blockchain,
                    },
                    r.toFixed(),
                    t.toToken.address,
                    { gasCalculation: "disabled", useProxy: s }
                  ),
                  l = c[c.length - 1];
                if (l instanceof o.OnChainTrade) return l.to.tokenAmount;
                throw l.error;
              })();
            }
            getOutputNativeAmount(t) {
              var i = this;
              return (0, O.Z)(function* () {
                const r = t.fromFiat.symbol,
                  s = Qn[t.toToken.blockchain],
                  c = t.fromAmount.toFixed(),
                  l = yield (0, nt.z)(
                    i.httpClient.get(
                      `https://onramper.tech/rate/${r}/${s}/creditCard/${c}`,
                      { headers: { Authorization: `Basic ${Jn.d}` } }
                    )
                  ),
                  d = l
                    .filter((_) => _.available)
                    .sort((_, g) =>
                      _.receivedCrypto === g.receivedCrypto
                        ? 0
                        : _.receivedCrypto > g.receivedCrypto
                        ? -1
                        : 1
                    )[0];
                if (!d?.receivedCrypto)
                  throw (
                    (i.checkMinMaxError(l, t),
                    new z.q("Trade is not available"))
                  );
                return new M.Z(d.receivedCrypto);
              })();
            }
            checkMinMaxError(t, i) {
              const r = t
                .filter(
                  (c) =>
                    "MIN" === c.error?.type &&
                    c.error.message?.includes(i.fromFiat.symbol)
                )
                .sort((c, l) =>
                  new M.Z(c.error.limit).comparedTo(l.error.limit)
                )[0]?.error?.limit;
              if (r)
                throw new o.MinAmountError(
                  new M.Z(r + 0.01),
                  i.fromFiat.symbol
                );
              const s = t
                .filter((c) => "MAX" === c.error?.type)
                .sort((c, l) =>
                  new M.Z(l.error.limit).comparedTo(c.error.limit)
                )[0]?.error?.limit;
              if (s) throw new o.MaxAmountError(new M.Z(s), i.fromFiat.symbol);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(Nt.eN),
                e.ɵɵinject(Ge.w),
                e.ɵɵinject(It.Q),
                e.ɵɵinject(qn.i),
                e.ɵɵinject(Et.L)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        on = (() => {
          class n {
            constructor(t, i, r, s, c, l, d) {
              (this.queryParamsService = t),
                (this.platformConfigurationService = i),
                (this.assetsSelectorService = r),
                (this.searchQueryService = s),
                (this.swapTypeService = c),
                (this.swapFormService = l),
                (this.destroy$ = d),
                (this._blockchainsToShow$ = new A.X([])),
                (this.blockchainsToShow$ =
                  this._blockchainsToShow$.asObservable()),
                this.setAvailableBlockchains(),
                (this.blockchainsToShow = this._availableBlockchains),
                this.subscribeOnSearchQuery();
            }
            get availableBlockchains() {
              return this._availableBlockchains;
            }
            set blockchainsToShow(t) {
              this._blockchainsToShow$.next(t);
            }
            setAvailableBlockchains() {
              const t = this.swapTypeService.swapMode === S.V.LIMIT_ORDER;
              let i = t ? o.limitOrderSupportedBlockchains : Sr;
              this.queryParamsService.enabledBlockchains &&
                (i = i.filter((l) =>
                  this.queryParamsService.enabledBlockchains.includes(l)
                ));
              const { formType: r } = this.assetsSelectorService,
                { fromAsset: s } = this.swapFormService.inputValue,
                c = t && "to" === r && (0, de.$v)(s) && s.blockchain;
              this._availableBlockchains = i.map((l) => {
                const d =
                    !this.platformConfigurationService.isAvailableBlockchain(l),
                  _ = Zn.includes(l);
                return {
                  name: l,
                  icon: rn.v[l],
                  label: ge.h[l],
                  disabledConfiguration: d,
                  disabledFrom: _,
                  disabledLimitOrder: c && l !== c,
                };
              });
            }
            subscribeOnSearchQuery() {
              (0, j.a)([
                this.searchQueryService.query$,
                this.assetsSelectorService.selectorListType$,
              ])
                .pipe(
                  (0, Z.h)(([t, i]) => "blockchains" === i),
                  (0, x.U)(([t]) => t),
                  (0, P.R)(this.destroy$)
                )
                .subscribe((t) => {
                  this.blockchainsToShow = this.availableBlockchains.filter(
                    (i) => i.name.toLowerCase().includes(t.toLowerCase())
                  );
                });
            }
            isDisabled(t) {
              return (
                t.disabledConfiguration ||
                t.disabledLimitOrder ||
                this.isDisabledFrom(t) ||
                this.isDisabledTo(t)
              );
            }
            isDisabledFrom(t) {
              return (
                "from" === this.assetsSelectorService.formType && t.disabledFrom
              );
            }
            isDisabledTo(t) {
              return (
                "to" === this.assetsSelectorService.formType &&
                "fiat" === this.assetsSelectorService.getAssetType("from") &&
                !Rt.isSupportedBlockchain(t.name)
              );
            }
            getHintText(t) {
              return this.isDisabledFrom(t)
                ? "Select as target network"
                : this.isDisabledTo(t)
                ? "Cannot trade with fiats"
                : t.disabledConfiguration
                ? "Temporary disabled"
                : t.disabledLimitOrder
                ? "Change selected source token"
                : null;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(Ae.E),
                e.ɵɵinject(Et.L),
                e.ɵɵinject(ue),
                e.ɵɵinject(We),
                e.ɵɵinject(ae.H),
                e.ɵɵinject(E.q),
                e.ɵɵinject(w.a3)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      var V = p(39646),
        Fe = p(82805),
        Dt = p(70262),
        Or = p(59751);
      const Pr = {
        ...Object.values(o.BLOCKCHAIN_NAME).reduce(
          (n, a) => ({ ...n, [a]: null }),
          {}
        ),
        [o.BLOCKCHAIN_NAME.ETHEREUM]: "ethereum",
        [o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN]: "smartchain",
        [o.BLOCKCHAIN_NAME.POLYGON]: "polygon",
        [o.BLOCKCHAIN_NAME.AVALANCHE]: "avalanche",
        [o.BLOCKCHAIN_NAME.MOONRIVER]: "moonriver",
        [o.BLOCKCHAIN_NAME.FANTOM]: "fantom",
        [o.BLOCKCHAIN_NAME.ARBITRUM]: "arbitrum",
        [o.BLOCKCHAIN_NAME.AURORA]: "aurora",
        [o.BLOCKCHAIN_NAME.TELOS]: "telos",
        [o.BLOCKCHAIN_NAME.HARMONY]: "harmony",
        [o.BLOCKCHAIN_NAME.SOLANA]: "solana",
        [o.BLOCKCHAIN_NAME.NEAR]: "near",
        [o.BLOCKCHAIN_NAME.OPTIMISM]: "optimism",
        [o.BLOCKCHAIN_NAME.CRONOS]: "cronos",
        [o.BLOCKCHAIN_NAME.GNOSIS]: "xdai",
        [o.BLOCKCHAIN_NAME.MOONBEAM]: "moonbeam",
        [o.BLOCKCHAIN_NAME.CELO]: "celo",
        [o.BLOCKCHAIN_NAME.BOBA]: "boba",
        [o.BLOCKCHAIN_NAME.ASTAR]: "astar",
        [o.BLOCKCHAIN_NAME.BITCOIN]: "bitcoin",
        [o.BLOCKCHAIN_NAME.ETHEREUM_POW]: "ethereum-pow",
        [o.BLOCKCHAIN_NAME.TRON]: "tron",
        [o.BLOCKCHAIN_NAME.KAVA]: "kava",
        [o.BLOCKCHAIN_NAME.BITGERT]: "bitgert",
        [o.BLOCKCHAIN_NAME.OASIS]: "oasis",
        [o.BLOCKCHAIN_NAME.METIS]: "metis",
        [o.BLOCKCHAIN_NAME.DFK]: "defi-kingdoms",
        [o.BLOCKCHAIN_NAME.KLAYTN]: "klaytn",
        [o.BLOCKCHAIN_NAME.VELAS]: "velas",
        [o.BLOCKCHAIN_NAME.SYSCOIN]: "syscoin",
      };
      var ut = p(9907);
      let it = (() => {
          class n {
            constructor() {
              (this._listType$ = new A.X("default")),
                (this.listType$ = this._listType$.asObservable());
            }
            get listType() {
              return this._listType$.value;
            }
            set listType(t) {
              this._listType$.next(t);
            }
            switchListType() {
              this.listType =
                "default" === this.listType ? "favorite" : "default";
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Ft = (() => {
          class n {
            constructor(t, i, r, s, c, l, d, _, g) {
              (this.tokensListTypeService = t),
                (this.searchQueryService = i),
                (this.tokensService = r),
                (this.tokensStoreService = s),
                (this.assetsSelectorService = c),
                (this.httpClient = l),
                (this.swapFormService = d),
                (this.swapTypeService = _),
                (this.destroy$ = g),
                (this.updateTokens$ = new Ce.x()),
                (this._searchLoading$ = new A.X(!1)),
                (this.searchLoading$ = this._searchLoading$.asObservable()),
                (this._tokensToShow$ = new A.X([])),
                (this.tokensToShow$ = this._tokensToShow$.asObservable()),
                (this._customToken$ = new A.X(void 0)),
                (this.customToken$ = this._customToken$.asObservable()),
                this.subscribeOnUpdateTokens(),
                this.subscribeOnTokensChange(),
                this.subscribeOnSearchQueryChange(),
                this.subscribeOnBlockchainChange(),
                this.subscribeOnListType();
            }
            get searchLoading() {
              return this._searchLoading$.value;
            }
            set searchLoading(t) {
              this._searchLoading$.next(t);
            }
            get tokensToShow() {
              return this._tokensToShow$.value;
            }
            set tokensToShow(t) {
              this._tokensToShow$.next(t);
            }
            get customToken() {
              return this._customToken$.value;
            }
            set customToken(t) {
              this._customToken$.next(t);
            }
            get searchQuery() {
              return this.searchQueryService.query;
            }
            get blockchain() {
              const t = this.assetsSelectorService.assetType;
              return o.BlockchainsInfo.isBlockchainName(t) ? t : null;
            }
            get listType() {
              return this.tokensListTypeService.listType;
            }
            subscribeOnTokensChange() {
              (0, j.a)([
                this.tokensStoreService.tokens$,
                this.tokensStoreService.favoriteTokens$,
              ])
                .pipe((0, P.R)(this.destroy$))
                .subscribe(() => {
                  this.searchQuery || this.updateTokens();
                });
            }
            subscribeOnSearchQueryChange() {
              (0, j.a)([
                this.searchQueryService.query$,
                this.assetsSelectorService.selectorListType$,
              ])
                .pipe(
                  (0, Z.h)(([t, i]) => "tokens" === i),
                  (0, P.R)(this.destroy$)
                )
                .subscribe(() => {
                  this.updateTokens();
                });
            }
            subscribeOnBlockchainChange() {
              this.assetsSelectorService.assetType$
                .pipe(
                  (0, ce.x)(),
                  (0, Z.h)((t) => o.BlockchainsInfo.isBlockchainName(t)),
                  (0, P.R)(this.destroy$)
                )
                .subscribe(() => {
                  this.updateTokens();
                });
            }
            subscribeOnListType() {
              this.tokensListTypeService.listType$
                .pipe((0, P.R)(this.destroy$))
                .subscribe(() => {
                  this.updateTokens();
                });
            }
            updateTokens() {
              this.updateTokens$.next();
            }
            subscribeOnUpdateTokens() {
              this.updateTokens$
                .pipe(
                  (0, N.w)(() =>
                    this.searchQuery.length
                      ? "default" === this.listType
                        ? this.getDefaultTokensByQuery()
                        : (0, V.of)({
                            tokensToShow: this.getFilteredFavoriteTokens(),
                          })
                      : (0, V.of)({ tokensToShow: this.getSortedTokens() })
                  ),
                  (0, P.R)(this.destroy$)
                )
                .subscribe((t) => {
                  "tokensToShow" in t
                    ? ((this.tokensToShow =
                        this.swapTypeService.getSwapProviderType() !==
                        S.V.LIMIT_ORDER
                          ? t.tokensToShow
                          : t.tokensToShow.filter(
                              (i) => !o.EvmWeb3Pure.isNativeAddress(i.address)
                            )),
                      (this.customToken = null))
                    : ((this.tokensToShow = []),
                      (this.customToken = t.customToken)),
                    (this.searchLoading = !1);
                });
            }
            getDefaultTokensByQuery() {
              var t = this;
              return (0, Fe.H)(300).pipe(
                (0, fe.b)(() => (this.searchLoading = !0)),
                (0, N.w)(() => this.tryParseQueryAsBackendTokens()),
                (0, N.w)(
                  (function () {
                    var i = (0, O.Z)(function* (r) {
                      if (r?.length) return { tokensToShow: r };
                      const s = yield t.tryParseQueryAsCustomToken();
                      return s ? { customToken: s } : { tokensToShow: [] };
                    });
                    return function (r) {
                      return i.apply(this, arguments);
                    };
                  })()
                )
              );
            }
            tryParseQueryAsBackendTokens() {
              return this.searchQuery && this.blockchain
                ? this.tokensService
                    .fetchQueryTokens(this.searchQuery, this.blockchain)
                    .pipe(
                      (0, x.U)((t) =>
                        t.size
                          ? t
                              .map((i) => ({
                                ...i,
                                available: this.isTokenAvailable(i),
                                favorite: this.isTokenFavorite(i),
                              }))
                              .toArray()
                          : []
                      )
                    )
                : (0, V.of)([]);
            }
            tryParseQueryAsCustomToken() {
              var t = this;
              return (0, O.Z)(function* () {
                try {
                  if (t.searchQuery && t.blockchain) {
                    const i = yield Or.Token.createToken({
                      blockchain: t.blockchain,
                      address: t.searchQuery.toLowerCase(),
                    });
                    if (i?.name && i?.symbol && i?.decimals) {
                      const r = yield t.fetchTokenImage(i);
                      return {
                        ...i,
                        image: r,
                        rank: 0,
                        amount: new M.Z(NaN),
                        price: 0,
                        available: t.isTokenAvailable(i),
                        favorite: t.isTokenFavorite(i),
                        tokenSecurity: yield t.getTokenSecurity(i),
                      };
                    }
                  }
                } catch {}
                return null;
              })();
            }
            fetchTokenImage(t) {
              var i = this;
              return (0, O.Z)(function* () {
                const r = Pr[t.blockchain];
                if (!r) return ut.k;
                const c = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/${r}/assets/${
                  o.BlockchainsInfo.isEvmBlockchainName(t.blockchain)
                    ? o.EvmWeb3Pure.toChecksumAddress(t.address)
                    : t.address
                }/logo.png`;
                return (0,
                nt.z)(i.httpClient.get(c).pipe((0, Dt.K)((l) => (0, V.of)(200 === l?.status ? c : ut.k))));
              })();
            }
            getFilteredFavoriteTokens() {
              const t = this.tokensStoreService.favoriteTokens.toArray(),
                i = this.searchQuery.toLowerCase(),
                r = t
                  .filter((s) => s.blockchain === this.blockchain)
                  .map((s) => ({
                    ...s,
                    available: this.isTokenAvailable(s),
                    favorite: !0,
                  }));
              if (i.startsWith("0x"))
                return r.filter((s) => s.address.toLowerCase().includes(i));
              {
                const s = r.filter((l) => l.symbol.toLowerCase().includes(i)),
                  c = r.filter((l) => l.name.toLowerCase().includes(i));
                return s.concat(
                  c.filter((l) =>
                    s.every((d) => !(0, q.IL)(l.address, d.address))
                  )
                );
              }
            }
            getSortedTokens() {
              if ("default" === this.listType) {
                const i = this.tokensStoreService.tokens
                  .toArray()
                  .filter(
                    (r) =>
                      r.blockchain === this.blockchain &&
                      this.isTokenAvailable(r)
                  )
                  .map((r) => ({
                    ...r,
                    available: !0,
                    favorite: this.isTokenFavorite(r),
                  }));
                return this.sortTokensByComparator(i);
              }
              {
                const i = this.tokensStoreService.favoriteTokens
                  .toArray()
                  .filter((r) => r.blockchain === this.blockchain)
                  .map((r) => ({
                    ...r,
                    available: this.isTokenAvailable(r),
                    favorite: !0,
                  }));
                return this.sortTokensByComparator(i);
              }
            }
            sortTokensByComparator(t) {
              return t.sort((r, s) => {
                const c = r.amount.isFinite() ? r.amount : new M.Z(0),
                  d = (s.amount.isFinite() ? s.amount : new M.Z(0))
                    .minus(c)
                    .toNumber();
                return (
                  Number(s.available) - Number(r.available) ||
                  d ||
                  s.rank - r.rank
                );
              });
            }
            isTokenFavorite(t) {
              return this.tokensStoreService.favoriteTokens.some((i) =>
                (0, q.tb)(i, t)
              );
            }
            isTokenAvailable(t) {
              const i = this.oppositeToken();
              return !i || !(0, q.tb)(i, t);
            }
            oppositeToken() {
              const i =
                this.swapFormService.inputValue[
                  "from" === this.assetsSelectorService.formType
                    ? "toToken"
                    : "fromAsset"
                ];
              return (0, de.$v)(i) ? i : null;
            }
            getTokenSecurity(t) {
              return this.tokensService.fetchTokenSecurity(
                t.address,
                t.blockchain
              );
            }
            isBalanceLoading$(t) {
              return this.tokensStoreService.isBalanceLoading$(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(it),
                e.ɵɵinject(We),
                e.ɵɵinject(Ee.H),
                e.ɵɵinject(_t.Z),
                e.ɵɵinject(ue),
                e.ɵɵinject(Nt.eN),
                e.ɵɵinject(E.q),
                e.ɵɵinject(ae.H),
                e.ɵɵinject(w.a3)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      var an = p(11520);
      let ei = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _) {
            (this.tokensListStoreService = t),
              (this.tokensListTypeService = i),
              (this.tokensStoreService = r),
              (this.tokensNetworkService = s),
              (this.assetsSelectorService = c),
              (this.searchQueryService = l),
              (this.iframeService = d),
              (this.destroy$ = _),
              (this._listUpdating$ = new A.X(!1)),
              (this.loading$ = (0, j.a)([
                this._listUpdating$,
                this.tokensListStoreService.searchLoading$,
              ]).pipe((0, x.U)(([g, C]) => g || C))),
              (this.listScrollSubject$ = new A.X(void 0)),
              (this._listAnimationType$ = new A.X("shown")),
              (this.listAnimationType$ =
                this._listAnimationType$.asObservable()),
              this.subscribeOnScroll(),
              this.subscribeOnTokensToShow();
          }
          get loading() {
            return (
              this._listUpdating$.value ||
              this.tokensListStoreService.searchLoading
            );
          }
          set listAnimationType(t) {
            this._listAnimationType$.next(t);
          }
          get listType() {
            return this.tokensListTypeService.listType;
          }
          get tokensToShow() {
            return this.tokensListStoreService.tokensToShow;
          }
          setListScrollSubject(t) {
            t && this.listScrollSubject$.next(t);
          }
          resetScrollToTop() {
            this.listScrollSubject$.value &&
              this.listScrollSubject$.value.scrollToIndex(0);
          }
          subscribeOnScroll() {
            this.listScrollSubject$
              .pipe(
                (0, Z.h)((t) => Boolean(t)),
                (0, N.w)((t) =>
                  t.renderedRangeStream.pipe(
                    (0, Z.h)((i) => {
                      const r = this.assetsSelectorService.assetType;
                      if (!o.BlockchainsInfo.isBlockchainName(r)) return !1;
                      const s = this.tokensNetworkService.tokensNetworkState[r];
                      return (
                        !(
                          this.loading ||
                          this.searchQueryService.query ||
                          "favorite" === this.listType ||
                          !s ||
                          s.maxPage === s.page ||
                          this.iframeService.isIframe
                        ) &&
                        this.tokensToShow.length > 3 &&
                        i.end > this.tokensToShow.length - 3
                      );
                    })
                  )
                ),
                (0, P.R)(this.destroy$)
              )
              .subscribe((t) => {
                t &&
                  (this._listUpdating$.next(!0),
                  this.tokensNetworkService.fetchNetworkTokens(
                    this.assetsSelectorService.assetType,
                    () => {
                      this._listUpdating$.next(!1);
                    }
                  ));
              });
          }
          subscribeOnTokensToShow() {
            let t = this.searchQueryService.query,
              i = this.listType;
            this.tokensListStoreService.tokensToShow$
              .pipe((0, an.G)(), (0, P.R)(this.destroy$))
              .subscribe(([r, s]) => {
                if (r?.length && s?.length) {
                  let d = r[0].blockchain !== s[0].blockchain;
                  (d ||= i !== this.listType),
                    (i = this.listType),
                    d &&
                      ((this.listAnimationType = "hidden"),
                      setTimeout(() => {
                        this.listAnimationType = "shown";
                      }));
                }
                (r?.[0]?.blockchain !== s?.[0]?.blockchain ||
                  t !== this.searchQueryService.query) &&
                  (this.resetScrollToTop(),
                  (t = this.searchQueryService.query));
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(Ft),
              e.ɵɵinject(it),
              e.ɵɵinject(_t.Z),
              e.ɵɵinject(Kn.I),
              e.ɵɵinject(ue),
              e.ɵɵinject(We),
              e.ɵɵinject(Q.b),
              e.ɵɵinject(w.a3)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var wr = p(32698);
      let sn = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.fiatsService = t),
              (this.assetsSelectorService = i),
              (this.searchQueryService = r),
              (this.destroy$ = s),
              (this._fiatsToShow$ = new A.X(this.fiatsService.fiats)),
              (this.fiatsToShow$ = this._fiatsToShow$.asObservable()),
              this.subscribeOnSearchQuery();
          }
          set fiatsToShow(t) {
            this._fiatsToShow$.next(t);
          }
          subscribeOnSearchQuery() {
            (0, j.a)([
              this.searchQueryService.query$,
              this.assetsSelectorService.selectorListType$,
            ])
              .pipe(
                (0, Z.h)(([t, i]) => "fiats" === i),
                (0, x.U)(([t]) => t),
                (0, P.R)(this.destroy$)
              )
              .subscribe((t) => {
                this.fiatsToShow = this.fiatsService.fiats.filter(
                  (i) =>
                    i.symbol.toLowerCase().includes(t.toLowerCase()) ||
                    i.name.toLowerCase().includes(t.toLowerCase())
                );
              });
          }
          isDisabled() {
            const t = this.assetsSelectorService.getAssetType("to");
            return t && !Rt.isSupportedBlockchain(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(wr.G),
              e.ɵɵinject(ue),
              e.ɵɵinject(We),
              e.ɵɵinject(w.a3)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      const kr = [ue, We, on, sn, it, Ft, ei, w.a3];
      var F = p(55517),
        xe = p(65063),
        Bt = p(86988),
        Te = p(35137);
      const Ar = { ...ge.h, [o.BLOCKCHAIN_NAME.BOBA_AVALANCHE]: "Boba AVX" };
      var cn = p(78557),
        ln = p(3155),
        Ie = p(61279),
        pn = p(54255);
      const ti = function (n) {
        return { disabled: n };
      };
      function Mr(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "li", 7),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵelementStart(3, "app-icon-button", 8),
            e.ɵɵlistener("iconButtonClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext().$implicit,
                s = e.ɵɵnextContext(4);
              return e.ɵɵresetView(s.onBlockchainSelect(r.name));
            }),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext().$implicit,
            r = e.ɵɵnextContext(3).ngLet,
            s = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("id", s.idPrefix + "Network_" + i.name)(
              "ngClass",
              e.ɵɵpureFunction1(12, ti, t)
            )("tuiHint", e.ɵɵpipeBind3(2, 8, i, s.getBlockchainHintText, s)),
            e.ɵɵadvance(2),
            e.ɵɵproperty("icon", i.icon)("disabled", r === i.name || t)(
              "border",
              r === i.name
            )("borderRadiusPercent", 50)("label", i.label);
        }
      }
      function Er(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Mr, 4, 14, "ng-container", 4),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.$implicit,
            i = e.ɵɵnextContext(4);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind3(2, 1, t, i.isBlockchainDisabled, i)
            );
        }
      }
      function Ir(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Er, 3, 5, "ng-container", 6),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet;
          e.ɵɵadvance(1), e.ɵɵproperty("ngForOf", t);
        }
      }
      function Nr(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "li", 9)(2, "app-icon-button", 10),
            e.ɵɵlistener("iconButtonClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.onBlockchainSelect(r.ethereum));
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "div", 11),
            e.ɵɵtext(4, "Soon"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(4, ti, i.fiatsDisabled))(
              "tuiHint",
              i.fiatsDisabled ? "Cannot trade with selected blockchain" : null
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("disabled", "fiat" === t || i.fiatsDisabled)(
              "border",
              "fiat" === t
            );
        }
      }
      function Rr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Ir, 2, 1, "ng-container", 4),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵtemplate(3, Nr, 5, 6, "ng-container", 5),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind3(2, 2, t, i.getBlockchainsList, i)
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("noFrame", "horizontal");
        }
      }
      function Dr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "ul", 3),
            e.ɵɵtemplate(1, Rr, 4, 6, "ng-container", 4),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind1(2, 1, t.shownBlockchainsAmount$)
            );
        }
      }
      let Fr = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _) {
            (this.blockchainsListService = t),
              (this.fiatsListService = i),
              (this.assetsSelectorService = r),
              (this.windowWidthService = s),
              (this.iframeService = c),
              (this.swapTypeService = l),
              (this.window = d),
              (this.isMobile = _),
              (this.blockchainsAmount =
                this.blockchainsListService.availableBlockchains.length),
              (this.selectedAssetType$ = this.assetsSelectorService.assetType$),
              (this.formType = this.assetsSelectorService.formType),
              (this.ethereum = "ETH"),
              (this.shownBlockchainsAmount$ =
                this.windowWidthService.windowSize$.pipe(
                  (0, x.U)((g) => {
                    if (this.iframeService.isIframe)
                      return this.blockchainsAmount;
                    const C = this.showFiats ? 1 : 0;
                    if (g >= Bt.G.MOBILE_MD) return 9 - C;
                    const b = this.window.innerHeight - 135;
                    return g === Bt.G.MOBILE_MD_MINUS
                      ? Math.floor(b / 82) - 1 - C
                      : Math.floor(b / 66) - 1 - C;
                  })
                )),
              (this.fiatsDisabled = this.fiatsListService.isDisabled()),
              (this.availableChain = [
                "ETH",
                "BSC",
                "POLYGON",
                "AVALANCHE",
                "ARBITRUM",
              ]);
          }
          get showFiats() {
            return (
              "from" === this.formType &&
              this.swapTypeService.swapMode !== S.V.LIMIT_ORDER
            );
          }
          getBlockchainsList(t) {
            let i = this.blockchainsListService.availableBlockchains.slice();
            console.log("getBlockchainsList", i);
            for (let l = i.length - 1; l >= 0; l--) {
              let d = !1;
              for (let _ in this.availableChain)
                if (i[l].name == this.availableChain[_]) {
                  d = !0;
                  break;
                }
              d ||
                this.blockchainsListService.availableBlockchains.splice(l, 1);
            }
            const r = this.blockchainsListService.availableBlockchains.slice(
              0,
              t
            );
            r.find((l) => l.name === this.assetsSelectorService.assetType) ||
              (this.blockchainsListService.lastSelectedHiddenBlockchain =
                this.blockchainsListService.availableBlockchains.find(
                  (l) => l.name === this.assetsSelectorService.assetType
                ));
            const c = this.blockchainsListService.lastSelectedHiddenBlockchain;
            return (
              c && (r[r.length - 1] = c),
              r.map((l) => ({ ...l, label: Ar[l.name] }))
            );
          }
          isBlockchainDisabled(t) {
            return this.blockchainsListService.isDisabled(t);
          }
          getBlockchainHintText(t) {
            return this.blockchainsListService.getHintText(t);
          }
          onBlockchainSelect(t) {
            this.assetsSelectorService.onBlockchainSelect(t);
          }
          openBlockchainsList() {
            this.assetsSelectorService.openBlockchainsList();
          }
          openFiatsList() {
            this.assetsSelectorService.openFiatsList();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(on),
              e.ɵɵdirectiveInject(sn),
              e.ɵɵdirectiveInject(ue),
              e.ɵɵdirectiveInject(cn.R),
              e.ɵɵdirectiveInject(Q.b),
              e.ɵɵdirectiveInject(ae.H),
              e.ɵɵdirectiveInject(xe.m9),
              e.ɵɵdirectiveInject(Te.fL)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-asset-types-aside"]],
            inputs: { idPrefix: "idPrefix" },
            decls: 4,
            vars: 3,
            consts: [
              [1, "asset-types-aside"],
              [1, "asset-types-aside__scroll"],
              ["class", "asset-types-aside__list", 4, "ngLet"],
              [1, "asset-types-aside__list"],
              [4, "ngLet"],
              [4, "noFrame"],
              [4, "ngFor", "ngForOf"],
              ["tuiHintMode", "error", 3, "id", "ngClass", "tuiHint"],
              [
                "appearance",
                "secondary",
                3,
                "icon",
                "disabled",
                "border",
                "borderRadiusPercent",
                "label",
                "iconButtonClick",
              ],
              [
                "tuiHintMode",
                "error",
                1,
                "asset-types-aside__fiats",
                2,
                "position",
                "relative",
                3,
                "ngClass",
                "tuiHint",
              ],
              [
                "appearance",
                "secondary",
                "icon",
                "assets/images/icons/coins/tron.png",
                "label",
                "Tron",
                3,
                "disabled",
                "border",
                "iconButtonClick",
              ],
              [1, "soon-label"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "aside", 0)(1, "tui-scrollbar", 1),
                e.ɵɵtemplate(2, Dr, 3, 3, "ul", 2),
                e.ɵɵpipe(3, "async"),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "ngLet",
                    e.ɵɵpipeBind1(3, 1, r.selectedAssetType$)
                  ));
            },
            dependencies: [m.mk, m.sg, ln.r, F.e, me.a, Ie.IB, H.D, m.Ov, pn.g],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.asset-types-aside[_ngcontent-%COMP%]{display:flex;align-items:center;width:194px;height:100%;width:100%;background:#2d2e2f;border-radius:10px;padding:10px 15px;justify-content:center;width:-moz-fit-content;width:fit-content;margin:auto}html.iframe[_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]{left:unset;width:100%;height:unset;padding:0 0 14px;background:unset;border-radius:unset;box-shadow:unset}html.iframe-vertical[_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]{padding-bottom:0}.asset-types-aside__scroll[_ngcontent-%COMP%]{max-height:100%}html.iframe[_nghost-%COMP%]   .asset-types-aside__scroll[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .asset-types-aside__scroll[_ngcontent-%COMP%]{height:76px}.asset-types-aside__list[_ngcontent-%COMP%]{display:flex;grid-row-gap:14px}html.iframe[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]{flex-direction:row}html.iframe-vertical[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]{flex-wrap:nowrap;margin-bottom:20px}html.iframe-vertical[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]     app-icon-button .image, html.iframe-vertical   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]     app-icon-button .image{max-height:20px}html.iframe-horizontal[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]{flex-wrap:nowrap}.asset-types-aside__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin:0 5px}html.iframe[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{margin:0 15px 0 0}.asset-types-aside__list[_ngcontent-%COMP%]   li.disabled[_ngcontent-%COMP%]{cursor:not-allowed!important;opacity:.5}.asset-types-aside__fiats[_ngcontent-%COMP%]     app-icon-button svg path{fill:var(--form-background-transparent)}html.iframe[_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]     app-icon-button button, html.iframe   [_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]     app-icon-button button{width:70px!important;height:56px!important}.asset-types-aside[_ngcontent-%COMP%]     app-icon-button button .content{justify-content:unset}.asset-types-aside[_ngcontent-%COMP%]     app-icon-button button .content .image{margin:5px 0 2px}.open-selector[_ngcontent-%COMP%]{width:77px}.open-selector[_ngcontent-%COMP%]     app-rubic-button [tuiButton]{height:68px;border-radius:var(--tui-radius-m)}.open-selector[_ngcontent-%COMP%]     app-rubic-button [tuiButton]._pressed, .open-selector[_ngcontent-%COMP%]     app-rubic-button [tuiButton]:focus, .open-selector[_ngcontent-%COMP%]     app-rubic-button [tuiButton]:hover{background:transparent;box-shadow:none}.open-selector[_ngcontent-%COMP%]     app-rubic-button tui-wrapper{padding:0!important}@media (max-width: 768px){.asset-types-aside[_ngcontent-%COMP%]{border-radius:0 10px 0 0}}@media (max-width: 599px){.asset-types-aside[_ngcontent-%COMP%]{display:flex;align-items:unset;justify-content:center;width:100%;height:100%;overflow:none;border-radius:unset}.asset-types-aside__list[_ngcontent-%COMP%]{display:flex;align-items:center}html.iframe[_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:not(:last-child), html.iframe   [_nghost-%COMP%]   .asset-types-aside__list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:not(:last-child){margin-right:15px;margin-bottom:unset}}@media (max-width: 500px){.asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button{width:57px!important;height:52px!important}.asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button .content{justify-content:center}.asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button .content .image{margin:0}.asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button .content .label-container{display:none}html.iframe[_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button .content .label-container, html.iframe   [_nghost-%COMP%]   .asset-types-aside[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]     app-icon-button button .content .label-container{display:block}.open-selector[_ngcontent-%COMP%]{width:57px}.open-selector[_ngcontent-%COMP%]     app-rubic-button [tuiButton]{height:52px}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Be = p(25635),
        W = p(46907);
      function Br(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "tui-input", 3),
            e.ɵɵlistener("ngModelChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(2);
              return e.ɵɵresetView(s.onQueryChanges(r));
            }),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵpipe(3, "async"),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵproperty("ngModel", t),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 2, e.ɵɵpipeBind1(3, 4, i.searchBarText$)),
              " "
            );
        }
      }
      function Hr(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 4),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.expand());
            }),
            e.ɵɵelementStart(1, "tui-input", 5),
            e.ɵɵlistener("ngModelChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(2);
              return e.ɵɵresetView(s.onQueryChanges(r));
            }),
            e.ɵɵtext(2),
            e.ɵɵpipe(3, "translate"),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵclassProp("expandable-input_expanded", i.isExpanded),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngModel", t)("tuiTextfieldCleaner", !0),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(3, 5, "modals.tokensListModal.searchPlaceholder"),
              " "
            );
        }
      }
      function Lr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Br, 4, 6, "tui-input", 1),
            e.ɵɵtemplate(
              2,
              Hr,
              4,
              7,
              "ng-template",
              null,
              2,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(3),
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !i.expandableField)("ngIfElse", t);
        }
      }
      let $r = (() => {
        class n {
          constructor(t, i) {
            (this.searchQueryService = t),
              (this.assetsSelectorService = i),
              (this.expandableField = !1),
              (this.isExpanded = !1),
              (this.searchQuery$ = this.searchQueryService.query$),
              (this.searchBarText$ =
                this.assetsSelectorService.selectorListType$.pipe(
                  (0, x.U)((r) =>
                    "tokens" === r
                      ? "modals.tokensListModal.searchPlaceholder"
                      : "Search name"
                  )
                ));
          }
          onQueryChanges(t) {
            this.searchQueryService.query = t;
          }
          expand() {
            this.isExpanded = !this.isExpanded;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(We),
              e.ɵɵdirectiveInject(ue)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-search-bar"]],
            inputs: { expandableField: "expandableField" },
            decls: 2,
            vars: 3,
            consts: [
              [4, "ngLet"],
              [
                "iconAlign",
                "left",
                "icon",
                "tuiIconSearch",
                "tuiTextfieldSize",
                "s",
                3,
                "ngModel",
                "ngModelChange",
                4,
                "ngIf",
                "ngIfElse",
              ],
              ["expandableInputTpl", ""],
              [
                "iconAlign",
                "left",
                "icon",
                "tuiIconSearch",
                "tuiTextfieldSize",
                "s",
                3,
                "ngModel",
                "ngModelChange",
              ],
              [1, "expandable-input", 3, "click"],
              [
                "iconAlign",
                "left",
                "icon",
                "tuiIconSearch",
                "tuiTextfieldSize",
                "l",
                3,
                "ngModel",
                "tuiTextfieldCleaner",
                "ngModelChange",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, Lr, 4, 2, "ng-container", 0),
                e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.searchQuery$));
            },
            dependencies: [
              m.O5,
              F.e,
              Be.K3,
              Be.wU,
              v.NgControlStatus,
              v.NgModel,
              W.be,
              W.sz,
              m.Ov,
              R.X$,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{--tui-font-text-s: normal 16px/20px var(--tui-font-text)}.placeholder[_ngcontent-%COMP%]{color:var(--secondary-text);font-size:16px}@media (max-width: 500px){tui-input[_ngcontent-%COMP%]     input{font-size:14px!important}}tui-input[_ngcontent-%COMP%]     .placeholder{color:var(--secondary-text);font-size:16px}@media (max-width: 500px){tui-input[_ngcontent-%COMP%]     .placeholder{font-size:14px}}tui-input[_ngcontent-%COMP%]     .wrapper{z-index:auto}.expandable-input[_ngcontent-%COMP%]{width:50px;transition:.2s width ease-in-out}.expandable-input[_ngcontent-%COMP%]   tui-input[_ngcontent-%COMP%]    {--tui-height-l: 54px}.expandable-input[_ngcontent-%COMP%]   tui-input[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{background:#282828}.expandable-input[_ngcontent-%COMP%]   tui-input[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield][data-appearance=textfield]:after{border:0}.expandable-input_expanded[_ngcontent-%COMP%]{width:300px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var He = p(38118),
        J = p(37340);
      const ni = (0, J.X$)("listAnimation", [
        (0, J.eR)(":enter", [
          (0, J.oB)({ opacity: 0.4 }),
          (0, J.jt)("0.28s", (0, J.oB)({ opacity: 1 })),
        ]),
        (0, J.SB)("hidden", (0, J.oB)({ opacity: "0.4" })),
        (0, J.SB)("shown", (0, J.oB)({ opacity: "1" })),
        (0, J.eR)("hidden => shown", (0, J.jt)("0.28s ease-in-out")),
      ]);
      var dn = p(50665),
        Ht = p(11569),
        Le = p(22079),
        Vr = p(6838),
        mn = p(41953),
        ee = (() => {
          return (
            ((n = ee || (ee = {})).TRUST_LIST = "trust-list"),
            (n.SECURED = "safe"),
            (n.LOW_RISK = "low-risk"),
            (n.HIGH_RISK = "high-risk"),
            (n.NO_INFO = "no-info"),
            (n.UNSUPPORTED_BLOCKCHAIN = "unsupported"),
            (n.SCAM_LIST = "scam-list"),
            (n.PLATFORM_TOKEN = "platform-token"),
            ee
          );
          var n;
        })();
      const zr = [
        o.BLOCKCHAIN_NAME.ETHEREUM,
        o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN,
        o.BLOCKCHAIN_NAME.POLYGON,
        o.BLOCKCHAIN_NAME.ARBITRUM,
        o.BLOCKCHAIN_NAME.OPTIMISM,
        o.BLOCKCHAIN_NAME.AVALANCHE,
        o.BLOCKCHAIN_NAME.FANTOM,
        o.BLOCKCHAIN_NAME.OKE_X_CHAIN,
        o.BLOCKCHAIN_NAME.CRONOS,
        o.BLOCKCHAIN_NAME.GNOSIS,
        o.BLOCKCHAIN_NAME.TRON,
      ];
      var ii = p(50112),
        gt = p(2830),
        G = p(44619),
        be = p(68376);
      let Yr = (() => {
        class n {
          transform(t, i = 9, r = 4, s = !1) {
            const c = t.split(".")[0],
              l = t.split(".")[1]?.slice(0, r),
              d = c + (l ? `.${l}` : "");
            if (new M.Z(d).eq(0))
              return s ? "0" : `${d.slice(0, d.length - 1)}...`;
            let g = d.replaceAll(",", "").replaceAll(".", "").length - i;
            if (g <= 0) return d;
            if (l?.length > g) return `${c}.${l.slice(0, -g)}`;
            if (l?.length === g) return c;
            l && (g -= l.length);
            let C = `${c.slice(0, -10)}b`;
            if (
              (g <= 3 && (C = `${c.slice(0, -4)}k`),
              g <= 6 && (C = `${c.slice(0, -7)}m`),
              "," === C[C.length - 2] || "." === C[C.length - 2])
            ) {
              const b = C[C.length - 1];
              C = C.slice(0, C.length - 2) + b;
            }
            return C;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵpipe = e.ɵɵdefinePipe({
            name: "shortenAmount",
            type: n,
            pure: !0,
          }));
        }
        return n;
      })();
      function Ur(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "span", 13),
            e.ɵɵlistener("click", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(2);
              return e.ɵɵresetView(s.copyToClipboard(r));
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          e.ɵɵnextContext();
          const t = e.ɵɵreference(3);
          e.ɵɵproperty(
            "inlineSVG",
            "assets/images/swaps/swaps-info/copy-icon.svg"
          )("tuiHint", t)("tuiHintShowDelay", 50)("tuiHintHideDelay", 100);
        }
      }
      function Wr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 14), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1), e.ɵɵtextInterpolate(t.token.address);
        }
      }
      function Gr(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span", 15),
          e.ɵɵelement(1, "span", 16),
          e.ɵɵelementStart(2, "span", 17),
          e.ɵɵtext(3, " Copied "),
          e.ɵɵelementEnd()()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵproperty(
              "inlineSVG",
              "assets/images/swaps/swaps-info/tick.svg"
            ));
      }
      function Kr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Ur, 1, 4, "span", 10),
            e.ɵɵtemplate(
              2,
              Wr,
              2,
              1,
              "ng-template",
              null,
              11,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵtemplate(4, Gr, 4, 1, "span", 12),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.hintShown),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngIf", !t.hintShown);
        }
      }
      function Xr(n, a) {
        if ((1 & n && (e.ɵɵtext(0), e.ɵɵpipe(1, "bigNumberFormat")), 2 & n)) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵtextInterpolate(e.ɵɵpipeBind1(1, 1, t.token.amount));
        }
      }
      function Zr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 18)(1, "span", 19),
            e.ɵɵtext(2),
            e.ɵɵpipe(3, "shortenAmount"),
            e.ɵɵpipe(4, "bigNumberFormat"),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(
              5,
              Xr,
              2,
              3,
              "ng-template",
              null,
              20,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(6),
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("tuiHint", t),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind3(3, 2, e.ɵɵpipeBind1(4, 6, i.token.amount), 6, 4)
            );
        }
      }
      function Qr(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵelementStart(1, "span", 25),
          e.ɵɵtext(2, "Powered by Go+"),
          e.ɵɵelementEnd(),
          e.ɵɵelementContainerEnd());
      }
      function Jr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 24),
            e.ɵɵtext(1),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(2, Qr, 3, 0, "ng-container", 6)),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t.securityMessages[t.securityStatus],
              " "
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              t.securityStatus !== t.TokenSecurityStatus.PLATFORM_TOKEN
            );
        }
      }
      function qr(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 21)(2, "a", 22),
            e.ɵɵlistener("click", function (i) {
              return i.stopPropagation();
            }),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(
              3,
              Jr,
              3,
              2,
              "ng-template",
              null,
              23,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(4),
            i = e.ɵɵnextContext();
          e.ɵɵadvance(2),
            e.ɵɵproperty(
              "inlineSVG",
              "assets/images/swaps/swaps-info/token-security-" +
                i.securityStatus +
                "-icon.svg"
            )("tuiHint", t)("tuiHintShowDelay", 50)("tuiHintHideDelay", 100)(
              "href",
              i.goPlusLabsLink,
              e.ɵɵsanitizeUrl
            );
        }
      }
      const eo = function (n) {
        return { "token-card__favorite_active": n };
      };
      function to(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "tui-loader", 26)(1, "div", 27),
            e.ɵɵlistener("click.stop", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.toggleFavorite());
            }),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("showLoader", t.loadingFavoriteToken)("overlay", !0),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(
                4,
                eo,
                null == t.token ? null : t.token.favorite
              )
            )("inlineSVG", "assets/images/icons/star2.svg");
        }
      }
      let ri = (() => {
          class n {
            constructor(t, i, r, s, c, l, d, _) {
              (this.iframeService = t),
                (this.tokensService = i),
                (this.tokensStoreService = r),
                (this.cdr = s),
                (this.errorsService = c),
                (this.authService = l),
                (this.navigator = d),
                (this.isMobile = _),
                (this.balanceLoading = !1),
                (this.toggleFavoriteToken = new e.EventEmitter()),
                (this.DEFAULT_TOKEN_IMAGE = ut.k),
                (this.isHorizontalFrame =
                  "horizontal" === this.iframeService.iframeAppearance),
                (this.TokenSecurityStatus = ee),
                (this.securityMessages = {
                  [ee.TRUST_LIST]: "Token is in the Go+ Trust List",
                  [ee.SCAM_LIST]: "Token is in the Scam List",
                  [ee.SECURED]: "Token code has no elements of concern",
                  [ee.LOW_RISK]:
                    "Token code contains some low risk elements of concern",
                  [ee.HIGH_RISK]:
                    "Token code contains some high risk elements of concern",
                  [ee.NO_INFO]: "No information",
                  [ee.PLATFORM_TOKEN]: "Platform Token",
                }),
                (this.hintShown = !0),
                (this.loadingFavoriteToken = !1);
            }
            ngOnInit() {
              this.allowCopy =
                "0x0000000000000000000000000000000000000000" !==
                  this.token.address && "" !== this.token.address;
            }
            onImageError(t) {
              this.tokensService.onTokenImageError(t);
            }
            toggleFavorite() {
              if (this.loadingFavoriteToken) return;
              if (!this.authService.userAddress)
                return void this.errorsService.catch(new ii.l());
              this.loadingFavoriteToken = !0;
              const t = this.token.favorite
                ? this.tokensStoreService.removeFavoriteToken(this.token)
                : this.tokensStoreService.addFavoriteToken(this.token);
              (this.token.favorite = !this.token.favorite),
                t.subscribe({
                  error: () => {
                    this.errorsService.catch(new ii.l());
                  },
                  complete: () => {
                    (this.loadingFavoriteToken = !1),
                      this.cdr.markForCheck(),
                      this.toggleFavoriteToken.emit();
                  },
                });
            }
            copyToClipboard(t) {
              t.stopPropagation(),
                this.showHint(),
                this.navigator.clipboard.writeText(this.token.address);
            }
            showHint() {
              (this.hintShown = !1),
                setTimeout(() => {
                  (this.hintShown = !0), this.cdr.markForCheck();
                }, 1500);
            }
            get isNativeToken() {
              return this.token.address === mn.K8;
            }
            get isPlatformToken() {
              return (
                "0x8eDc6F7d2F23C10653972E611f707ce0562d61B1" ===
                this.token.address
              );
            }
            get securityStatus() {
              return !1 === zr.includes(this.token.blockchain)
                ? ee.UNSUPPORTED_BLOCKCHAIN
                : this.isPlatformToken
                ? ee.PLATFORM_TOKEN
                : this.isNativeToken ||
                  (this.token.tokenSecurity &&
                    this.token.tokenSecurity.trust_list)
                ? ee.TRUST_LIST
                : !this.token.tokenSecurity ||
                  (this.token.tokenSecurity &&
                    !1 === this.token.tokenSecurity.has_info)
                ? ee.NO_INFO
                : this.token.tokenSecurity.fake_token ||
                  this.token.tokenSecurity.is_airdrop_scam
                ? ee.SCAM_LIST
                : 0 === this.token.tokenSecurity.risky_security_items &&
                  0 === this.token.tokenSecurity.attention_security_items
                ? ee.SECURED
                : this.token.tokenSecurity.risky_security_items > 0
                ? ee.HIGH_RISK
                : ee.LOW_RISK;
            }
            get goPlusLabsLink() {
              return `${Vr.L.GO_PLUS_LABS}/${
                this.token.blockchain === o.BLOCKCHAIN_NAME.TRON
                  ? "tron"
                  : o.blockchainId[this.token.blockchain]
              }/${
                (this.isNativeToken
                  ? o.wrappedNativeTokensList[this.token.blockchain]?.address
                  : this.token.address) || ""
              }`;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(Q.b),
                e.ɵɵdirectiveInject(Ee.H),
                e.ɵɵdirectiveInject(_t.Z),
                e.ɵɵdirectiveInject(e.ChangeDetectorRef),
                e.ɵɵdirectiveInject(gt.r),
                e.ɵɵdirectiveInject(U.e),
                e.ɵɵdirectiveInject(xe.s5),
                e.ɵɵdirectiveInject(Te.fL)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-tokens-list-element"]],
              inputs: { token: "token", balanceLoading: "balanceLoading" },
              outputs: { toggleFavoriteToken: "toggleFavoriteToken" },
              decls: 14,
              vars: 9,
              consts: [
                [1, "token-card"],
                [1, "token-card__image-container"],
                ["loading", "lazy", 3, "src", "alt", "error"],
                [1, "token-card__name-amount-container"],
                [1, "token-card__name-container"],
                [1, "token-card__name-container-symbol"],
                [4, "ngIf"],
                [1, "token-card__amount-container"],
                ["class", "token-card__amount", 4, "ngIf"],
                [
                  "class",
                  "token-card__favorite-container",
                  3,
                  "showLoader",
                  "overlay",
                  4,
                  "noFrame",
                ],
                [
                  "class",
                  "token-card__name-container-copy-icon",
                  "tuiHintMode",
                  "onDark",
                  "tuiHintDirection",
                  "top-right",
                  3,
                  "inlineSVG",
                  "tuiHint",
                  "tuiHintShowDelay",
                  "tuiHintHideDelay",
                  "click",
                  4,
                  "ngIf",
                ],
                ["tokenAddressHint", ""],
                [
                  "class",
                  "token-card__name-container-copied-container",
                  4,
                  "ngIf",
                ],
                [
                  "tuiHintMode",
                  "onDark",
                  "tuiHintDirection",
                  "top-right",
                  1,
                  "token-card__name-container-copy-icon",
                  3,
                  "inlineSVG",
                  "tuiHint",
                  "tuiHintShowDelay",
                  "tuiHintHideDelay",
                  "click",
                ],
                [1, "token-card__name-container-address-hint"],
                [1, "token-card__name-container-copied-container"],
                [1, "token-card__name-container-copied-icon", 3, "inlineSVG"],
                [1, "token-card__name-container-copied-text"],
                [1, "token-card__amount"],
                [
                  "tuiHintDirection",
                  "top-left",
                  "tuiHintMode",
                  "onDark",
                  3,
                  "tuiHint",
                ],
                ["tokenAmountTooltip", ""],
                [1, "token-card__security-container"],
                [
                  "tuiHintMode",
                  "onDark",
                  "tuiHintDirection",
                  "top-right",
                  "rel",
                  "noopener noreferrer",
                  "target",
                  "_blank",
                  1,
                  "token-card__security-container-security-icon",
                  3,
                  "inlineSVG",
                  "tuiHint",
                  "tuiHintShowDelay",
                  "tuiHintHideDelay",
                  "href",
                  "click",
                ],
                ["tokenSecurityHint", ""],
                [1, "token-card__security-container-security-hint"],
                [1, "token-card__security-container-security-hint-powered-by"],
                [
                  1,
                  "token-card__favorite-container",
                  3,
                  "showLoader",
                  "overlay",
                ],
                [
                  1,
                  "token-card__favorite",
                  3,
                  "ngClass",
                  "inlineSVG",
                  "click.stop",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "img", 2),
                  e.ɵɵlistener("error", function (c) {
                    return r.onImageError(c);
                  }),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(3, "div", 3)(4, "div", 4)(5, "div", 5),
                  e.ɵɵtext(6),
                  e.ɵɵtemplate(7, Kr, 5, 2, "ng-container", 6),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(8, "small"),
                  e.ɵɵtext(9),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(10, "div", 7),
                  e.ɵɵtemplate(11, Zr, 7, 8, "div", 8),
                  e.ɵɵelementEnd()(),
                  e.ɵɵtemplate(12, qr, 5, 5, "ng-container", 6),
                  e.ɵɵtemplate(13, to, 2, 6, "tui-loader", 9),
                  e.ɵɵelementEnd()),
                  2 & i &&
                    (e.ɵɵadvance(2),
                    e.ɵɵproperty(
                      "src",
                      r.token.image || r.DEFAULT_TOKEN_IMAGE,
                      e.ɵɵsanitizeUrl
                    )("alt", r.token.name),
                    e.ɵɵadvance(4),
                    e.ɵɵtextInterpolate1(
                      " ",
                      r.token.symbol.length > 10 && r.isMobile
                        ? r.token.symbol.slice(0, 10) + "..."
                        : r.token.symbol,
                      " "
                    ),
                    e.ɵɵadvance(1),
                    e.ɵɵproperty("ngIf", r.allowCopy),
                    e.ɵɵadvance(2),
                    e.ɵɵtextInterpolate(r.token.name),
                    e.ɵɵadvance(1),
                    e.ɵɵclassProp("tui-skeleton", r.balanceLoading),
                    e.ɵɵadvance(1),
                    e.ɵɵproperty("ngIf", r.token.amount.gt(0)),
                    e.ɵɵadvance(1),
                    e.ɵɵproperty(
                      "ngIf",
                      r.securityStatus !==
                        r.TokenSecurityStatus.UNSUPPORTED_BLOCKCHAIN
                    ));
              },
              dependencies: [m.mk, m.O5, me.a, H.D, Le.kM, G.d$, be.N, Yr],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.token-card[_ngcontent-%COMP%]{display:flex;align-items:center;height:42px;color:var(--primary-text)}html.iframe[_nghost-%COMP%]   .token-card[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .token-card[_ngcontent-%COMP%]{height:unset}html.iframe-horizontal[_nghost-%COMP%]   .token-card[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card[_ngcontent-%COMP%]{height:100%}.token-card__name-amount-container[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}@media (max-width: 500px){.token-card__name-amount-container[_ngcontent-%COMP%]{flex-direction:column;align-items:unset}html.iframe[_nghost-%COMP%]   .token-card__name-amount-container[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .token-card__name-amount-container[_ngcontent-%COMP%]{flex-direction:row;align-items:center}}.token-card__name-container[_ngcontent-%COMP%]{max-width:150px;margin-right:auto}@media (max-width: 651px){.token-card__name-container[_ngcontent-%COMP%]{max-width:125px}}@media (max-width: 420px){.token-card__name-container[_ngcontent-%COMP%]{max-width:93px}}html.iframe-horizontal[_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%]{width:60px;margin-right:0}.token-card__name-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .token-card__name-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.token-card__name-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:16px;line-height:20px}html.iframe[_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:14px;line-height:16px}.token-card__name-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:block;font-size:13px;line-height:18px}html.iframe[_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .token-card__name-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:block!important;font-size:12px;line-height:14px}@media (max-width: 500px){.token-card__name-container[_ngcontent-%COMP%]   small[_ngcontent-%COMP%]{display:none}}.token-card__name-container-address-hint[_ngcontent-%COMP%]{display:block}.token-card__name-container-address-hint[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:13px!important}.token-card__name-container-copy-icon[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:2px;margin-left:10px;cursor:pointer}html.iframe-vertical[_nghost-%COMP%]   .token-card__name-container-copy-icon[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .token-card__name-container-copy-icon[_ngcontent-%COMP%]{margin-bottom:0}.token-card__name-container-copy-icon[_ngcontent-%COMP%]     svg{width:13px;height:17px}.token-card__name-container-copy-icon[_ngcontent-%COMP%]     svg path{fill:var(--primary-text)}.token-card__name-container-copied-container[_ngcontent-%COMP%]{display:flex;gap:5px;align-items:center;margin-top:-2px}.token-card__name-container-copied-icon[_ngcontent-%COMP%]{display:flex;margin-bottom:1px;margin-left:10px}.token-card__name-container-copied-icon[_ngcontent-%COMP%]     svg{width:13px;height:17px;margin-bottom:0!important}.token-card__name-container-copied-icon[_ngcontent-%COMP%]     svg path{fill:var(--primary-text)}.token-card__name-container-copied-text[_ngcontent-%COMP%]{margin-bottom:0!important}@media (max-width: 420px){.token-card__name-container-copied-text[_ngcontent-%COMP%]{display:none!important}}html.iframe-horizontal[_nghost-%COMP%]   .token-card__name-container-copied-text[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__name-container-copied-text[_ngcontent-%COMP%]{display:none!important}.token-card__name-container-symbol[_ngcontent-%COMP%]{display:flex;align-items:center;width:-moz-fit-content;width:fit-content;white-space:nowrap}html.iframe[_nghost-%COMP%]   .token-card__name-container-symbol[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .token-card__name-container-symbol[_ngcontent-%COMP%]{font-size:14px;line-height:16px}.token-card__favorite-container[_ngcontent-%COMP%], .token-card__security-container[_ngcontent-%COMP%]{flex-shrink:0;width:24px;height:24px;margin-left:20px}html.iframe-horizontal[_nghost-%COMP%]   .token-card__favorite-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__favorite-container[_ngcontent-%COMP%], html.iframe-horizontal[_nghost-%COMP%]   .token-card__security-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__security-container[_ngcontent-%COMP%]{margin-left:-35px}  .token-card__favorite{display:flex;align-items:center;cursor:pointer}  .token-card__favorite svg{width:24px;height:24px}  .token-card__favorite svg path{transition:.2s ease-in-out;stroke:var(--secondary-text)}  .token-card__favorite_active svg path{fill:#dfcb5f;stroke:none}  .token-card__favorite:hover:not(  .token-card__favorite_active) svg path{stroke:var(--primary-color)}.token-card__security-container-security-hint[_ngcontent-%COMP%]{display:block;max-width:200px;font-size:13px!important}.token-card__security-container-security-hint-powered-by[_ngcontent-%COMP%]{font-size:10px!important}.token-card__image-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;min-width:38px;height:38px;margin-right:20px}html.iframe-horizontal[_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]{min-width:30px;height:30px;margin-right:10px}html.iframe-vertical[_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]{min-width:24px;height:24px}.token-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:38px;max-height:38px;border-radius:25%}html.iframe-horizontal[_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:30px;max-height:30px}html.iframe-vertical[_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .token-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:24px;max-height:24px}.token-card__amount-container[_ngcontent-%COMP%]{width:70px;height:24px}@media (max-width: 500px){.token-card__amount[_ngcontent-%COMP%]{font-size:14px}}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        no = (() => {
          class n {
            constructor(t) {
              (this.context = t), (this.token = t.data.token);
            }
            onAccept() {
              this.context.completeWith(!0);
            }
            onDecline() {
              this.context.completeWith(!1);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(L.yf));
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["polymorpheus-custom-token-warning-modal"]],
              decls: 11,
              vars: 9,
              consts: [
                [1, "buttons-container"],
                ["fullWidth", "", "appearance", "secondary", 3, "click"],
                ["fullWidth", "", "bordered", "", 3, "click"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementContainerStart(0),
                  e.ɵɵelementStart(1, "span"),
                  e.ɵɵtext(2),
                  e.ɵɵpipe(3, "translate"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(4, "div", 0)(5, "app-rubic-button", 1),
                  e.ɵɵlistener("click", function () {
                    return r.onDecline();
                  }),
                  e.ɵɵtext(6),
                  e.ɵɵpipe(7, "translate"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(8, "app-rubic-button", 2),
                  e.ɵɵlistener("click", function () {
                    return r.onAccept();
                  }),
                  e.ɵɵtext(9),
                  e.ɵɵpipe(10, "translate"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementContainerEnd()),
                  2 & i &&
                    (e.ɵɵadvance(2),
                    e.ɵɵtextInterpolate(
                      e.ɵɵpipeBind1(3, 3, "modals.confirmImportModal.text")
                    ),
                    e.ɵɵadvance(4),
                    e.ɵɵtextInterpolate(e.ɵɵpipeBind1(7, 5, "common.cancel")),
                    e.ɵɵadvance(3),
                    e.ɵɵtextInterpolate(e.ɵɵpipeBind1(10, 7, "common.OK")));
              },
              dependencies: [se.j, R.X$],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}html.iframe   [_nghost-%COMP%]{display:block;padding:0 1rem}.buttons-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:15px}.buttons-container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]{width:150px}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      var io = p(41313);
      let oi = (() => {
        class n {
          constructor(t, i, r, s, c) {
            (this.dialogService = t),
              (this.injector = i),
              (this.translateService = r),
              (this.authService = s),
              (this.assetsSelectorService = c);
          }
          openModal(t) {
            var i = this;
            this.dialogService
              .open(new L.Al(no, this.injector), {
                data: { token: t },
                dismissible: !0,
                label: this.translateService.instant(
                  "modals.confirmImportModal.title"
                ),
                size: "s",
              })
              .pipe(
                (0, N.w)(
                  (function () {
                    var r = (0, O.Z)(function* (s) {
                      if (s) {
                        try {
                          if (
                            i.authService.userAddress &&
                            i.authService.userChainType ===
                              o.BlockchainsInfo.getChainType(t.blockchain)
                          ) {
                            const c = yield io.Injector.web3PublicService
                              .getWeb3Public(t.blockchain)
                              .getTokenBalance(
                                i.authService.userAddress,
                                t.address
                              );
                            return {
                              ...t,
                              amount: o.Web3Pure.fromWei(c, t.decimals),
                            };
                          }
                        } catch {}
                        return t;
                      }
                    });
                    return function (s) {
                      return r.apply(this, arguments);
                    };
                  })()
                )
              )
              .subscribe((r) => {
                r && this.assetsSelectorService.onAssetSelect(r);
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(De.RO),
              e.ɵɵinject(e.Injector),
              e.ɵɵinject(R.sK),
              e.ɵɵinject(U.e),
              e.ɵɵinject(ue)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      function ro(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-rubic-button", 5),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onImportClick());
            }),
            e.ɵɵtext(1),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("disabled", !t.token.available),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" Import ", t.token.symbol, " ");
        }
      }
      function oo(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div"),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                2,
                1,
                "modals.tokensListModal.unsupportedPairsHint"
              ),
              " "
            ));
      }
      const ao = function (n) {
        return { "custom-token__element_disabled": n };
      };
      let so = (() => {
        class n {
          constructor(t, i) {
            (this.customTokenService = t),
              (this.tokensListStoreService = i),
              (this.token = this.tokensListStoreService.customToken);
          }
          onImportClick() {
            this.customTokenService.openModal(this.token);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(oi),
              e.ɵɵdirectiveInject(Ft)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-custom-token"]],
            features: [e.ɵɵProvidersFeature([oi])],
            decls: 6,
            vars: 6,
            consts: [
              [1, "custom-token"],
              [1, "custom-token__element", 3, "ngClass"],
              [
                "tuiHintMode",
                "error",
                "tuiHintDirection",
                "bottom-right",
                3,
                "token",
                "tuiHint",
              ],
              [
                "class",
                "custom-token__button",
                "appearance",
                "secondary",
                "fullWidth",
                "",
                3,
                "disabled",
                "onClick",
                4,
                "ngIf",
              ],
              ["disabledTokenHint", ""],
              [
                "appearance",
                "secondary",
                "fullWidth",
                "",
                1,
                "custom-token__button",
                3,
                "disabled",
                "onClick",
              ],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "div", 1),
                  e.ɵɵelement(2, "app-tokens-list-element", 2),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(3, ro, 2, 2, "app-rubic-button", 3),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(
                    4,
                    oo,
                    3,
                    3,
                    "ng-template",
                    null,
                    4,
                    e.ɵɵtemplateRefExtractor
                  )),
                2 & i)
              ) {
                const s = e.ɵɵreference(5);
                e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(4, ao, !r.token.available)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("token", r.token)(
                    "tuiHint",
                    r.token.available ? null : s
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.token.available);
              }
            },
            dependencies: [m.mk, m.O5, se.j, H.D, ri, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{width:100%}.custom-token[_ngcontent-%COMP%]{padding-left:24px}html.iframe[_nghost-%COMP%]   .custom-token[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .custom-token[_ngcontent-%COMP%]{padding-left:0}html.iframe-horizontal[_nghost-%COMP%]   .custom-token[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .custom-token[_ngcontent-%COMP%]{display:flex;align-items:center}.custom-token__element[_ngcontent-%COMP%]{padding:5px 10px;border-radius:15px;cursor:default}.custom-token__element_disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.4}.custom-token__element_disabled[_ngcontent-%COMP%]:hover{background-color:unset}.custom-token__button[_ngcontent-%COMP%]{display:block;margin-top:15px}html.iframe-horizontal[_nghost-%COMP%]   .custom-token__button[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .custom-token__button[_ngcontent-%COMP%]{margin-top:0}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var ai = p(84651);
      function co(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 1, "modals.tokensListModal.noSearchData"),
              " "
            ));
      }
      function lo(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelementStart(3, "button", 4),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.switchToDefaultList());
            }),
            e.ɵɵtext(4),
            e.ɵɵpipe(5, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
        2 & n &&
          (e.ɵɵadvance(1),
          e.ɵɵtextInterpolate1(
            " ",
            e.ɵɵpipeBind1(2, 2, "modals.tokensListModal.noFavoriteData"),
            " "
          ),
          e.ɵɵadvance(3),
          e.ɵɵtextInterpolate1(
            " ",
            e.ɵɵpipeBind1(5, 4, "modals.tokensListModal.backToTokens"),
            " "
          ));
      }
      function po(n, a) {
        if (
          (1 & n &&
            (e.ɵɵtemplate(0, lo, 6, 6, "ng-container", 1),
            e.ɵɵpipe(1, "async")),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(),
            i = e.ɵɵreference(7);
          e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(1, 2, t.user$))("ngIfElse", i);
        }
      }
      function mo(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵtext(0),
            e.ɵɵpipe(1, "translate"),
            e.ɵɵelementStart(2, "button", 4),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.openAuthModal());
            }),
            e.ɵɵtext(3),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵelementEnd();
        }
        2 & n &&
          (e.ɵɵtextInterpolate1(
            " ",
            e.ɵɵpipeBind1(1, 2, "modals.tokensListModal.unauthorized"),
            " "
          ),
          e.ɵɵadvance(3),
          e.ɵɵtextInterpolate1(
            " ",
            e.ɵɵpipeBind1(4, 4, "navigation.login"),
            " "
          ));
      }
      let _o = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.tokensListTypeService = t),
              (this.searchQueryService = i),
              (this.authService = r),
              (this.walletsModalService = s),
              (this.user$ = this.authService.currentUser$),
              (this.hasSearchQuery$ = this.searchQueryService.query$.pipe(
                (0, x.U)((c) => Boolean(c.length))
              )),
              (this.listType$ = this.tokensListTypeService.listType$);
          }
          switchToDefaultList() {
            this.tokensListTypeService.switchListType();
          }
          openAuthModal() {
            this.walletsModalService.open$();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(it),
              e.ɵɵdirectiveInject(We),
              e.ɵɵdirectiveInject(U.e),
              e.ɵɵdirectiveInject(ai.u)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-empty-list"]],
            decls: 8,
            vars: 6,
            consts: [
              [1, "nothing-to-show-message"],
              [4, "ngIf", "ngIfElse"],
              ["noFavoriteTokens", ""],
              ["noAuth", ""],
              [1, "nothing-to-show-message__link", 3, "click"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "div", 0),
                  e.ɵɵtemplate(1, co, 3, 3, "ng-container", 1),
                  e.ɵɵpipe(2, "async"),
                  e.ɵɵpipe(3, "async"),
                  e.ɵɵtemplate(
                    4,
                    po,
                    2,
                    4,
                    "ng-template",
                    null,
                    2,
                    e.ɵɵtemplateRefExtractor
                  ),
                  e.ɵɵtemplate(
                    6,
                    mo,
                    5,
                    6,
                    "ng-template",
                    null,
                    3,
                    e.ɵɵtemplateRefExtractor
                  ),
                  e.ɵɵelementEnd()),
                2 & i)
              ) {
                const s = e.ɵɵreference(5);
                e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    e.ɵɵpipeBind1(2, 2, r.hasSearchQuery$) ||
                      "default" === e.ɵɵpipeBind1(3, 4, r.listType$)
                  )("ngIfElse", s);
              }
            },
            dependencies: [m.O5, m.Ov, R.X$],
            styles: [
              ".nothing-to-show-message[_ngcontent-%COMP%]{padding-left:24px;font-size:16px;text-align:center;opacity:.6}.nothing-to-show-message__link[_ngcontent-%COMP%]{color:var(--primary-color);cursor:pointer}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function uo(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 12),
          e.ɵɵelement(1, "app-empty-list"),
          e.ɵɵelementEnd());
      }
      const si = function (n) {
        return { "tokens-list__item_disabled": n };
      };
      function go(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "li", 16),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(6);
              return e.ɵɵresetView(c.onTokenSelect(s));
            }),
            e.ɵɵelement(1, "app-tokens-list-element", 17),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = e.ɵɵnextContext(6),
            r = e.ɵɵreference(3);
          e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(6, si, !t.available))(
            "tuiHint",
            t.available ? null : r
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("token", t)(
              "balanceLoading",
              e.ɵɵpipeBind1(2, 4, i.isBalanceLoading$)
            );
        }
      }
      const ho = function (n) {
        return { "tokens-scrollbar__empty": n };
      };
      function fo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "ul", 13),
            e.ɵɵpipe(1, "async"),
            e.ɵɵelementStart(2, "cdk-virtual-scroll-viewport", 14),
            e.ɵɵtemplate(3, go, 3, 8, "li", 15),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3).ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext();
          e.ɵɵproperty(
            "@listAnimation",
            e.ɵɵpipeBind1(1, 7, r.listAnimationState$)
          ),
            e.ɵɵadvance(2),
            e.ɵɵstyleProp("overflow", t ? "hidden" : "auto"),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(9, ho, !(null != i && i.length))
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("cdkVirtualForOf", i)(
              "cdkVirtualForTemplateCacheSize",
              0
            )("cdkVirtualForTrackBy", r.trackByFn);
        }
      }
      function vo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, uo, 2, 0, "div", 10),
            e.ɵɵtemplate(
              2,
              fo,
              4,
              11,
              "ng-template",
              null,
              11,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(3),
            i = e.ɵɵnextContext(3).ngLet;
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !(null != i && i.length))("ngIfElse", t);
        }
      }
      const Co = function (n) {
        return { "tokens-list-horizontal-iframe__item_disabled": n };
      };
      function xo(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "li", 22),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(5);
              return e.ɵɵresetView(c.onTokenSelect(s));
            }),
            e.ɵɵelement(1, "app-tokens-list-element", 23),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.$implicit;
          e.ɵɵnextContext(5);
          const i = e.ɵɵreference(3);
          e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(3, Co, !t.available))(
            "tuiHint",
            t.available ? null : i
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("token", t);
        }
      }
      function bo(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "li", 24),
          e.ɵɵtext(1, " Nothing to show "),
          e.ɵɵelementEnd());
      }
      function yo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "li", 25)(1, "div", 26)(2, "a", 27),
            e.ɵɵtext(3),
            e.ɵɵelementEnd()()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(5);
          e.ɵɵadvance(2),
            e.ɵɵproperty("safetyLink", t.noFrameLink),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("More on ", t.rubicDomain, "");
        }
      }
      function So(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "ul", 18),
            e.ɵɵtemplate(1, xo, 2, 5, "li", 19),
            e.ɵɵtemplate(2, bo, 2, 0, "li", 20),
            e.ɵɵtemplate(3, yo, 4, 2, "li", 21),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngForOf", t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 === t.length),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.iframeRubicLink);
        }
      }
      function To(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "li", 31),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(5);
              return e.ɵɵresetView(c.onTokenSelect(s));
            }),
            e.ɵɵelement(1, "app-tokens-list-element", 23),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.$implicit;
          e.ɵɵnextContext(5);
          const i = e.ɵɵreference(3);
          e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(3, si, !t.available))(
            "tuiManualHint",
            i
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("token", t);
        }
      }
      function Oo(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "li", 32),
          e.ɵɵtext(1, " Nothing to show "),
          e.ɵɵelementEnd());
      }
      function Po(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "li", 33)(1, "a", 27),
            e.ɵɵtext(2),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(5);
          e.ɵɵadvance(1),
            e.ɵɵproperty("safetyLink", t.noFrameLink),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("More on ", t.rubicDomain, "");
        }
      }
      function wo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "ul", 13),
            e.ɵɵtemplate(1, To, 2, 5, "li", 28),
            e.ɵɵtemplate(2, Oo, 2, 0, "li", 29),
            e.ɵɵtemplate(3, Po, 3, 2, "li", 30),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngForOf", t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 === t.length),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.iframeRubicLink);
        }
      }
      function ko(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, vo, 4, 2, "ng-container", 7),
          e.ɵɵtemplate(2, So, 4, 3, "ul", 8),
          e.ɵɵtemplate(3, wo, 4, 3, "ul", 9),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(2),
            e.ɵɵproperty("onlyFrame", "horizontal"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("onlyFrame", "vertical"));
      }
      function Ao(n, a) {
        1 & n && e.ɵɵelement(0, "app-custom-token");
      }
      function Mo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "tui-loader", 4),
            e.ɵɵtemplate(1, ko, 4, 2, "ng-container", 5),
            e.ɵɵpipe(2, "async"),
            e.ɵɵtemplate(
              3,
              Ao,
              1,
              0,
              "ng-template",
              null,
              6,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵreference(4),
            r = e.ɵɵnextContext(2);
          e.ɵɵproperty("showLoader", t)("overlay", !0),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", null === e.ɵɵpipeBind1(2, 4, r.customToken$))(
              "ngIfElse",
              i
            );
        }
      }
      function Eo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "tui-scrollbar", 2),
            e.ɵɵtemplate(2, Mo, 5, 6, "tui-loader", 3),
            e.ɵɵpipe(3, "async"),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(2),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(3, 1, t.loading$));
        }
      }
      function Io(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div"),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 1, "modals.tokensListModal.clearParamsHint"),
              " "
            ));
      }
      let No = (() => {
          class n {
            constructor(t, i, r, s, c) {
              (this.queryParamsService = t),
                (this.iframeService = i),
                (this.assetsSelectorService = r),
                (this.tokensListService = s),
                (this.tokensListStoreService = c),
                (this.loading$ = this.tokensListService.loading$),
                (this.listAnimationState$ =
                  this.tokensListService.listAnimationType$),
                (this.tokensToShow$ =
                  this.tokensListStoreService.tokensToShow$),
                (this.customToken$ = this.tokensListStoreService.customToken$),
                (this.isBalanceLoading$ =
                  this.tokensListStoreService.tokensToShow$.pipe(
                    (0, N.w)((l) =>
                      l.length
                        ? this.tokensListStoreService.isBalanceLoading$(
                            l[0].blockchain
                          )
                        : (0, V.of)(!1)
                    )
                  )),
                (this.rubicDomain = "app.rubic.exchange"),
                (this.noFrameLink = `https://${this.rubicDomain}${this.queryParamsService.noFrameLink}`),
                (this.iframeRubicLink = this.iframeService.rubicLink);
            }
            set virtualScroll(t) {
              this.tokensListService.setListScrollSubject(t);
            }
            trackByFn(t, i) {
              return `${i.blockchain}_${i.address}`;
            }
            onTokenSelect(t) {
              t.available && this.assetsSelectorService.onAssetSelect(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(Ae.E),
                e.ɵɵdirectiveInject(Q.b),
                e.ɵɵdirectiveInject(ue),
                e.ɵɵdirectiveInject(ei),
                e.ɵɵdirectiveInject(Ft)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-tokens-list"]],
              viewQuery: function (i, r) {
                if ((1 & i && e.ɵɵviewQuery(He.N7, 5), 2 & i)) {
                  let s;
                  e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                    (r.virtualScroll = s.first);
                }
              },
              decls: 4,
              vars: 3,
              consts: [
                [4, "ngLet"],
                ["disabledTokenHint", ""],
                [1, "tokens-container"],
                [3, "showLoader", "overlay", 4, "ngLet"],
                [3, "showLoader", "overlay"],
                [4, "ngIf", "ngIfElse"],
                ["customTokenTmpl", ""],
                [4, "noFrame"],
                ["class", "tokens-list-horizontal-iframe", 4, "onlyFrame"],
                ["class", "tokens-list", 4, "onlyFrame"],
                [
                  "class",
                  "tokens-container__empty-list",
                  4,
                  "ngIf",
                  "ngIfElse",
                ],
                ["tokenList", ""],
                [1, "tokens-container__empty-list"],
                [1, "tokens-list"],
                [
                  "tuiScrollable",
                  "",
                  "itemSize",
                  "67",
                  1,
                  "tokens-scrollbar",
                  "tui-zero-scrollbar",
                  3,
                  "ngClass",
                ],
                [
                  "class",
                  "tokens-list__item",
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  3,
                  "ngClass",
                  "tuiHint",
                  "click",
                  4,
                  "cdkVirtualFor",
                  "cdkVirtualForOf",
                  "cdkVirtualForTemplateCacheSize",
                  "cdkVirtualForTrackBy",
                ],
                [
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  1,
                  "tokens-list__item",
                  3,
                  "ngClass",
                  "tuiHint",
                  "click",
                ],
                [3, "token", "balanceLoading"],
                [1, "tokens-list-horizontal-iframe"],
                [
                  "class",
                  "tokens-list-horizontal-iframe__item",
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  3,
                  "ngClass",
                  "tuiHint",
                  "click",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "class",
                  "tokens-list-horizontal-iframe__item tokens-list-horizontal-iframe__item_empty",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "tokens-list-horizontal-iframe__item-container",
                  4,
                  "ngIf",
                ],
                [
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  1,
                  "tokens-list-horizontal-iframe__item",
                  3,
                  "ngClass",
                  "tuiHint",
                  "click",
                ],
                [3, "token"],
                [
                  1,
                  "tokens-list-horizontal-iframe__item",
                  "tokens-list-horizontal-iframe__item_empty",
                ],
                [1, "tokens-list-horizontal-iframe__item-container"],
                [
                  1,
                  "tokens-list-horizontal-iframe__item",
                  "tokens-list-horizontal-iframe__item-link",
                ],
                [3, "safetyLink"],
                [
                  "class",
                  "tokens-list__item",
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  3,
                  "ngClass",
                  "tuiManualHint",
                  "click",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                [
                  "class",
                  "tokens-list__item tokens-list__item_empty",
                  4,
                  "ngIf",
                ],
                ["class", "tokens-list__item vertical-frame-link", 4, "ngIf"],
                [
                  "tuiHintMode",
                  "error",
                  "tuiHintDirection",
                  "bottom-right",
                  1,
                  "tokens-list__item",
                  3,
                  "ngClass",
                  "tuiManualHint",
                  "click",
                ],
                [1, "tokens-list__item", "tokens-list__item_empty"],
                [1, "tokens-list__item", "vertical-frame-link"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, Eo, 4, 3, "ng-container", 0),
                  e.ɵɵpipe(1, "async"),
                  e.ɵɵtemplate(
                    2,
                    Io,
                    3,
                    3,
                    "ng-template",
                    null,
                    1,
                    e.ɵɵtemplateRefExtractor
                  )),
                  2 & i &&
                    e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.tokensToShow$));
              },
              dependencies: [
                m.mk,
                m.sg,
                m.O5,
                dn.x,
                F.e,
                me.a,
                Me.T,
                Ie.IB,
                Ie.Rm,
                He.xd,
                He.x0,
                He.N7,
                H.D,
                Ht.vZ,
                Le.kM,
                ri,
                so,
                _o,
                m.Ov,
                R.X$,
              ],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{width:100%}.tokens-container[_ngcontent-%COMP%]{position:relative;height:calc(100% - 15px);margin-top:10px}@media (max-width: 599px){.tokens-container[_ngcontent-%COMP%]{height:calc(100% - 20px);margin-top:15px}}html.iframe[_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%]{position:static;left:unset;width:100%;margin-top:15px;padding-top:0}html.iframe-vertical[_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%]{height:350px}html.iframe-horizontal[_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .tokens-container[_ngcontent-%COMP%]{height:75px}.tokens-container__empty-list[_ngcontent-%COMP%]{position:relative;margin-top:20px}.tokens-container[_ngcontent-%COMP%]     .content{height:100%}tui-loader[_ngcontent-%COMP%]{height:100%}.tokens-list[_ngcontent-%COMP%]{height:100%;padding-right:15px}.tokens-list__item[_ngcontent-%COMP%]{padding:5px 10px;border-radius:15px;cursor:pointer}.tokens-list__item[_ngcontent-%COMP%]:not(:last-child){margin-bottom:15px}html.iframe-vertical[_nghost-%COMP%]   .tokens-list__item[_ngcontent-%COMP%]:not(:last-child), html.iframe-vertical   [_nghost-%COMP%]   .tokens-list__item[_ngcontent-%COMP%]:not(:last-child){margin-bottom:2px}.tokens-list__item[_ngcontent-%COMP%]:hover{background-color:var(--transparent-line)}.tokens-list__item_disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.4}.tokens-list__item_disabled[_ngcontent-%COMP%]:hover{background-color:unset}.tokens-list__item_empty[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px;font-size:18px}.tokens-list__item_empty[_ngcontent-%COMP%]:hover{background-color:unset}.tokens-list-horizontal-iframe[_ngcontent-%COMP%]{display:flex}.tokens-list-horizontal-iframe__item-container[_ngcontent-%COMP%]{min-width:206px;max-width:206px}.tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]{min-width:191px;max-width:191px;height:55px;padding:5px 10px;border:2px solid #626262;border-radius:15px;cursor:pointer}html.iframe-horizontal[_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]{padding:4px}html.iframe:not(.dark)[_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]{border:1px solid #e9e9e9}html.iframe:not(.dark)[_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]:hover, html.iframe:not(.dark)   [_nghost-%COMP%]   .tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]:hover{background-color:var(--rubic-base-14)}.tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]:not(:last-child){margin-right:15px}.tokens-list-horizontal-iframe__item[_ngcontent-%COMP%]:hover{background-color:var(--primary-background)}.tokens-list-horizontal-iframe__item_disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.4}.tokens-list-horizontal-iframe__item_disabled[_ngcontent-%COMP%]:hover{background-color:unset}.tokens-list-horizontal-iframe__item_empty[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;font-size:18px;border:0;cursor:default}.tokens-list-horizontal-iframe__item_empty[_ngcontent-%COMP%]:hover{background-color:unset}.tokens-list-horizontal-iframe__item-link[_ngcontent-%COMP%]{border-color:var(--primary-color)}.tokens-list-horizontal-iframe__item-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;width:100%;height:100%;line-height:40px;text-align:center}html.iframe[_nghost-%COMP%]   .tokens-list-horizontal-iframe__item-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .tokens-list-horizontal-iframe__item-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{line-height:1.4}.tokens-list-horizontal-iframe__item-link[_ngcontent-%COMP%]:hover{background-color:unset}.tokens-scrollbar[_ngcontent-%COMP%]{height:100%;overflow-x:hidden!important}.tokens-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{width:100%;padding:0 0 5px 24px}@media (max-width: 500px){.tokens-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{padding-left:10px}}.vertical-frame-link[_ngcontent-%COMP%]{border:2px solid var(--primary-color)}.vertical-frame-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:block;width:100%;height:100%;line-height:30px;text-align:center}.vertical-frame-link[_ngcontent-%COMP%]:hover{background-color:unset}",
              ],
              data: { animation: [ni] },
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        _n = (() => {
          class n {
            constructor() {
              this.onClick = new e.EventEmitter();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-back-button"]],
              outputs: { onClick: "onClick" },
              decls: 3,
              vars: 0,
              consts: [
                [1, "back-button"],
                ["appearance", "secondary", "size", "s", 3, "onClick"],
                [
                  "inlineSVG",
                  "assets/images/icons/arrow/long-arrow-left.svg",
                  1,
                  "back-button__arrow",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "app-rubic-button", 1),
                  e.ɵɵlistener("onClick", function () {
                    return r.onClick.emit();
                  }),
                  e.ɵɵelement(2, "div", 2),
                  e.ɵɵelementEnd()());
              },
              dependencies: [G.d$, se.j],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.back-button[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]     button{border-radius:15px}.back-button__arrow[_ngcontent-%COMP%]{width:16px;height:15px}.back-button__arrow[_ngcontent-%COMP%]     svg{width:100%;height:100%}.back-button__arrow[_ngcontent-%COMP%]     svg path{fill:var(--primary-text)}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      const Ro = function (n) {
        return { item_disabled: n };
      };
      function Do(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 8),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).ngLet,
                c = e.ɵɵnextContext().$implicit,
                l = e.ɵɵnextContext(2);
              return e.ɵɵresetView(!s && l.onBlockchainSelect(c.name));
            }),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵelementStart(3, "div", 9),
            e.ɵɵelement(4, "img", 10),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "span", 11),
            e.ɵɵtext(6),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext().$implicit,
            r = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(9, Ro, t))(
              "tuiHint",
              e.ɵɵpipeBind3(2, 5, i, r.getHintText, r)
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty("src", i.icon, e.ɵɵsanitizeUrl)("alt", i.label),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.label);
        }
      }
      function Fo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Do, 7, 11, "ng-container", 7),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.$implicit,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind3(2, 1, t, i.isDisabled, i));
        }
      }
      function Bo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 5),
            e.ɵɵtemplate(1, Fo, 3, 5, "ng-container", 6),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet;
          e.ɵɵadvance(1), e.ɵɵproperty("ngForOf", t);
        }
      }
      let Ho = (() => {
        class n {
          constructor(t, i) {
            (this.blockchainsListService = t),
              (this.assetsSelectorService = i),
              (this.blockchainsToShow$ =
                this.blockchainsListService.blockchainsToShow$);
          }
          isDisabled(t) {
            return this.blockchainsListService.isDisabled(t);
          }
          getHintText(t) {
            return this.blockchainsListService.getHintText(t);
          }
          closeBlockchainsList() {
            this.assetsSelectorService.setSelectorListTypeByAssetType();
          }
          onBlockchainSelect(t) {
            this.assetsSelectorService.onBlockchainSelect(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(on),
              e.ɵɵdirectiveInject(ue)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-blockchains-list"]],
            decls: 6,
            vars: 3,
            consts: [
              [1, "list-container"],
              [1, "list-container__back-button"],
              [3, "onClick"],
              [1, "scrollbar"],
              ["class", "list", 4, "ngLet"],
              [1, "list"],
              [4, "ngFor", "ngForOf"],
              [4, "ngLet"],
              [
                "tuiHintMode",
                "error",
                "tuiHintDirection",
                "right",
                1,
                "list__item",
                "item",
                3,
                "ngClass",
                "tuiHint",
                "click",
              ],
              [1, "item__image-container"],
              [3, "src", "alt"],
              [1, "item__label"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(
                  2,
                  "app-back-button",
                  2
                ),
                e.ɵɵlistener("onClick", function () {
                  return r.closeBlockchainsList();
                }),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(3, "tui-scrollbar", 3),
                e.ɵɵtemplate(4, Bo, 2, 1, "div", 4),
                e.ɵɵpipe(5, "async"),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(4),
                  e.ɵɵproperty(
                    "ngLet",
                    e.ɵɵpipeBind1(5, 1, r.blockchainsToShow$)
                  ));
            },
            dependencies: [m.mk, m.sg, F.e, _n, Ie.IB, H.D, m.Ov, pn.g],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.list-container[_ngcontent-%COMP%]{display:flex;height:100%}.list-container__back-button[_ngcontent-%COMP%]{margin:16px 0 0 23px}@media (max-width: 599px){.list-container__back-button[_ngcontent-%COMP%]{margin-top:21px}}@media (max-width: 500px){.list-container__back-button[_ngcontent-%COMP%]{margin-left:10px}}.scrollbar[_ngcontent-%COMP%]{width:100%;height:calc(100% - 15px);margin-top:10px;padding:0 0 10px 15px}@media (max-width: 599px){.scrollbar[_ngcontent-%COMP%]{height:calc(100% - 20px);margin-top:15px}}.list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;grid-gap:15px}.list__item[_ngcontent-%COMP%]{display:flex;grid-gap:20px;align-items:center;width:calc(33% - 15px);padding:5px 10px}@media (max-width: 768px){.list__item[_ngcontent-%COMP%]{width:calc(50% - 15px)}}@media (max-width: 560px){.list__item[_ngcontent-%COMP%]{width:calc(100% - 15px)}}.item[_ngcontent-%COMP%]{border-radius:15px;cursor:pointer}.item[_ngcontent-%COMP%]:hover{background-color:var(--transparent-line)}.item_disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.5}.item__image-container[_ngcontent-%COMP%]{width:38px;height:38px}.item__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-height:38px;border-radius:50%}.item__label[_ngcontent-%COMP%]{font-size:16px;line-height:20px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Lo(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-icon-button", 1),
            e.ɵɵlistener("iconButtonClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.switchMode());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.ngLet;
          e.ɵɵproperty("icon", "assets/images/icons/" + t.icon)(
            "tuiHint",
            t.hintText
          )("tuiHintShowDelay", 1100)("border", !1);
        }
      }
      let $o = (() => {
          class n {
            constructor(t) {
              (this.tokensListTypeService = t),
                (this.buttonData$ = this.tokensListTypeService.listType$.pipe(
                  (0, x.U)((i) => ({
                    icon: "default" === i ? "star.svg" : "back.svg",
                    hintText:
                      "default" === i
                        ? "List of favorite tokens"
                        : "Back to whole tokens list",
                  }))
                ));
            }
            switchMode() {
              this.tokensListTypeService.switchListType();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(it));
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-switch-list-type-button"]],
              decls: 2,
              vars: 3,
              consts: [
                [
                  "buttonSize",
                  "s",
                  "appearance",
                  "secondary",
                  3,
                  "icon",
                  "tuiHint",
                  "tuiHintShowDelay",
                  "border",
                  "iconButtonClick",
                  4,
                  "ngLet",
                ],
                [
                  "buttonSize",
                  "s",
                  "appearance",
                  "secondary",
                  3,
                  "icon",
                  "tuiHint",
                  "tuiHintShowDelay",
                  "border",
                  "iconButtonClick",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, Lo, 1, 4, "app-icon-button", 0),
                  e.ɵɵpipe(1, "async")),
                  2 & i &&
                    e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.buttonData$));
              },
              dependencies: [ln.r, F.e, H.D, m.Ov],
              styles: [
                "app-icon-button[_ngcontent-%COMP%]{flex-shrink:0;width:32px;height:32px}app-icon-button[_ngcontent-%COMP%]     tui-wrapper{border-radius:0}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Vo = (() => {
          class n {
            constructor() {}
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-fiats-list-element"]],
              inputs: { fiat: "fiat" },
              decls: 8,
              vars: 4,
              consts: [
                [1, "fiat-card"],
                [1, "fiat-card__image-container"],
                [3, "src", "alt"],
                [1, "fiat-card__name-container", "name-container"],
                [1, "name-container__symbol"],
                [1, "name-container__name"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "div", 1),
                  e.ɵɵelement(2, "img", 2),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(3, "div", 3)(4, "div", 4),
                  e.ɵɵtext(5),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(6, "div", 5),
                  e.ɵɵtext(7),
                  e.ɵɵelementEnd()()()),
                  2 & i &&
                    (e.ɵɵadvance(2),
                    e.ɵɵproperty(
                      "src",
                      r.fiat.image,
                      e.ɵɵsanitizeUrl
                    )("alt", r.fiat.symbol),
                    e.ɵɵadvance(3),
                    e.ɵɵtextInterpolate(r.fiat.symbol),
                    e.ɵɵadvance(2),
                    e.ɵɵtextInterpolate(r.fiat.name));
              },
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.fiat-card[_ngcontent-%COMP%]{display:flex;align-items:center;height:42px;color:var(--form-bright-text-color)}html.iframe[_nghost-%COMP%]   .fiat-card[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .fiat-card[_ngcontent-%COMP%]{height:unset}.fiat-card__name-container[_ngcontent-%COMP%]{max-width:150px;margin-right:auto}.fiat-card__image-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:38px;height:38px;margin-right:20px}html.iframe-vertical[_nghost-%COMP%]   .fiat-card__image-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .fiat-card__image-container[_ngcontent-%COMP%]{width:24px;height:24px}.fiat-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-width:38px;max-height:38px;border-radius:25%}html.iframe-vertical[_nghost-%COMP%]   .fiat-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .fiat-card__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:24px;max-height:24px}.name-container__symbol[_ngcontent-%COMP%]{display:flex;align-items:center;width:-moz-fit-content;width:fit-content;line-height:24px}html.iframe[_nghost-%COMP%]   .name-container__symbol[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .name-container__symbol[_ngcontent-%COMP%]{font-size:14px;line-height:16px}.name-container__name[_ngcontent-%COMP%]{font-size:13px;line-height:18px}html.iframe[_nghost-%COMP%]   .name-container__name[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .name-container__name[_ngcontent-%COMP%]{font-size:12px;line-height:14px}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      function jo(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 4),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 1, "modals.tokensListModal.noSearchData"),
              " "
            ));
      }
      function zo(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "li", 8),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(3);
              return e.ɵɵresetView(c.onFiatSelect(s));
            }),
            e.ɵɵelement(1, "app-fiats-list-element", 9),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.$implicit;
          e.ɵɵadvance(1), e.ɵɵproperty("fiat", t);
        }
      }
      const Yo = function (n) {
        return { "fiats-scrollbar__empty": n };
      };
      function Uo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "ul", 5)(1, "cdk-virtual-scroll-viewport", 6),
            e.ɵɵtemplate(2, zo, 2, 1, "li", 7),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵproperty("@listAnimation", void 0),
            e.ɵɵadvance(1),
            e.ɵɵproperty("itemSize", i.isIframe ? 42 : 67)(
              "ngClass",
              e.ɵɵpureFunction1(5, Yo, !(null != t && t.length))
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("cdkVirtualForOf", t)(
              "cdkVirtualForTemplateCacheSize",
              0
            );
        }
      }
      function Wo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "tui-scrollbar", 1),
            e.ɵɵtemplate(1, jo, 3, 3, "div", 2),
            e.ɵɵtemplate(
              2,
              Uo,
              3,
              7,
              "ng-template",
              null,
              3,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵreference(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !(null != t && t.length))("ngIfElse", i);
        }
      }
      let Go = (() => {
        class n {
          constructor(t, i, r) {
            (this.assetsSelectorService = t),
              (this.fiatsListService = i),
              (this.iframeService = r),
              (this.fiats$ = this.fiatsListService.fiatsToShow$),
              (this.isIframe = this.iframeService.isIframe);
          }
          onFiatSelect(t) {
            this.assetsSelectorService.onAssetSelect(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(ue),
              e.ɵɵdirectiveInject(sn),
              e.ɵɵdirectiveInject(Q.b)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-fiats-list"]],
            decls: 3,
            vars: 3,
            consts: [
              ["class", "fiats-container", 4, "ngLet"],
              [1, "fiats-container"],
              ["class", "nothing-to-show-message", 4, "ngIf", "ngIfElse"],
              ["fiatsList", ""],
              [1, "nothing-to-show-message"],
              [1, "fiats-list"],
              [
                "tuiScrollable",
                "",
                1,
                "fiats-scrollbar",
                "tui-zero-scrollbar",
                3,
                "itemSize",
                "ngClass",
              ],
              [
                "class",
                "fiats-list__item",
                3,
                "click",
                4,
                "cdkVirtualFor",
                "cdkVirtualForOf",
                "cdkVirtualForTemplateCacheSize",
              ],
              [1, "fiats-list__item", 3, "click"],
              [3, "fiat"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementContainerStart(0),
                e.ɵɵtemplate(1, Wo, 4, 2, "tui-scrollbar", 0),
                e.ɵɵpipe(2, "async"),
                e.ɵɵelementContainerEnd()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, r.fiats$)));
            },
            dependencies: [
              m.mk,
              m.O5,
              F.e,
              Ie.IB,
              Ie.Rm,
              He.xd,
              He.x0,
              He.N7,
              Vo,
              m.Ov,
              R.X$,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{width:100%}.fiats-container[_ngcontent-%COMP%]{height:calc(100% - 15px);margin-top:10px}@media (max-width: 599px){.fiats-container[_ngcontent-%COMP%]{height:calc(100% - 20px);margin-top:15px}}html.iframe-vertical[_nghost-%COMP%]   .fiats-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .fiats-container[_ngcontent-%COMP%]{position:static;left:unset;width:100%;height:350px;margin-top:15px;padding-top:0}.fiats-container[_ngcontent-%COMP%]     .content{height:100%}.fiats-list[_ngcontent-%COMP%]{height:100%;padding-right:15px}.fiats-list__item[_ngcontent-%COMP%]{padding:5px 10px;border-radius:15px;cursor:pointer}.fiats-list__item[_ngcontent-%COMP%]:not(:last-child){margin-bottom:15px}html.iframe-vertical[_nghost-%COMP%]   .fiats-list__item[_ngcontent-%COMP%]:not(:last-child), html.iframe-vertical   [_nghost-%COMP%]   .fiats-list__item[_ngcontent-%COMP%]:not(:last-child){margin-bottom:2px}.fiats-list__item[_ngcontent-%COMP%]:hover{background-color:#4aa95626}.fiats-list__item_disabled[_ngcontent-%COMP%]{cursor:not-allowed;opacity:.4}.fiats-list__item_disabled[_ngcontent-%COMP%]:hover{background-color:unset}.fiats-list__item_empty[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px;font-size:18px}.fiats-list__item_empty[_ngcontent-%COMP%]:hover{background-color:unset}.nothing-to-show-message[_ngcontent-%COMP%]{position:relative;display:block;margin-top:20px;font-size:16px;text-align:center;opacity:.6}.nothing-to-show-message__link[_ngcontent-%COMP%]{color:var(--primary-color);cursor:pointer}.fiats-scrollbar[_ngcontent-%COMP%]{height:100%;overflow-x:hidden!important}.fiats-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{width:100%;padding:0 0 5px 24px}@media (max-width: 500px){.fiats-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{padding-left:10px}}html.iframe-vertical[_nghost-%COMP%]   .fiats-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper, html.iframe-vertical   [_nghost-%COMP%]   .fiats-scrollbar[_ngcontent-%COMP%]     .cdk-virtual-scroll-content-wrapper{padding:0}",
            ],
            data: { animation: [ni] },
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Ko(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "header", 4)(1, "h2", 5),
          e.ɵɵtext(2, "Select a Chain"),
          e.ɵɵelementEnd()());
      }
      function Xo(n, a) {
        1 & n && e.ɵɵelement(0, "app-switch-list-type-button");
      }
      function Zo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 10),
            e.ɵɵelement(1, "app-search-bar"),
            e.ɵɵtemplate(2, Xo, 1, 0, "app-switch-list-type-button", 9),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(2), e.ɵɵproperty("ngIf", "tokens" === t);
        }
      }
      function Qo(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵelementStart(1, "div", 11),
          e.ɵɵelement(2, "app-blockchains-list"),
          e.ɵɵelementEnd(),
          e.ɵɵelementContainerEnd());
      }
      function Jo(n, a) {
        1 & n && e.ɵɵelement(0, "app-search-bar", 16);
      }
      function qo(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Jo, 1, 0, "app-search-bar", 15),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.iframeTokenSearch || "fiats" === t);
        }
      }
      function ea(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 17),
          e.ɵɵelement(1, "app-fiats-list"),
          e.ɵɵelementEnd());
      }
      function ta(n, a) {
        1 & n && e.ɵɵelement(0, "app-search-bar", 21),
          2 & n && e.ɵɵproperty("expandableField", !0);
      }
      function na(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, ta, 1, 1, "app-search-bar", 20),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵadvance(1), e.ɵɵproperty("ngIf", t.iframeTokenSearch);
        }
      }
      function ia(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 18),
          e.ɵɵtemplate(1, na, 2, 1, "ng-container", 12),
          e.ɵɵelementStart(2, "div", 19),
          e.ɵɵelement(3, "app-tokens-list"),
          e.ɵɵelementEnd()()),
          2 & n && (e.ɵɵadvance(1), e.ɵɵproperty("onlyFrame", "horizontal"));
      }
      function ra(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, qo, 2, 1, "ng-container", 12),
            e.ɵɵtemplate(2, ea, 2, 0, "div", 13),
            e.ɵɵtemplate(3, ia, 4, 1, "div", 14),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1),
            e.ɵɵproperty("onlyFrame", "vertical"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "fiats" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "tokens" === t);
        }
      }
      function oa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "h2", 6),
            e.ɵɵtext(2, " Select a Token "),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(3, Zo, 3, 1, "div", 7),
            e.ɵɵelementStart(4, "div", 8),
            e.ɵɵtemplate(5, Qo, 3, 0, "ng-container", 9),
            e.ɵɵtemplate(6, ra, 4, 3, "ng-container", 9),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet;
          e.ɵɵadvance(5),
            e.ɵɵproperty("ngIf", "blockchains" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "blockchains" !== t);
        }
      }
      let aa = (() => {
          class n {
            constructor(t, i, r, s, c, l, d) {
              (this.context = t),
                (this.tokensService = i),
                (this.tokensStoreService = r),
                (this.iframeService = s),
                (this.assetsSelectorService = c),
                (this.tokensListTypeService = l),
                (this.document = d),
                (this.iframeTokenSearch = this.iframeService.tokenSearch),
                (this.headerText$ = (0, j.a)([
                  this.assetsSelectorService.selectorListType$,
                  this.tokensListTypeService.listType$,
                ]).pipe(
                  (0, x.U)(([_, g]) =>
                    "blockchains" === _
                      ? "Blockchains List"
                      : "fiats" === _
                      ? "Fiats List"
                      : "default" === g
                      ? "modals.tokensListModal.defaultTitle"
                      : "modals.tokensListModal.favoriteTokensTitle"
                  )
                )),
                (this.selectorListType$ =
                  this.assetsSelectorService.selectorListType$),
                this.initiateContextParams(t.data),
                this.assetsSelectorService.assetSelected$.subscribe((_) => {
                  (0, de.$v)(_) && this.tokensStoreService.addToken(_),
                    this.context.completeWith(_);
                });
            }
            ngOnInit() {
              this.setWindowHeight();
            }
            ngOnDestroy() {
              this.resetWindowHeight();
            }
            initiateContextParams(t) {
              (this.idPrefix = t.idPrefix),
                this.assetsSelectorService.initParameters(t);
            }
            setWindowHeight() {
              this.document.documentElement.style.setProperty(
                "--window-inner-height",
                `${window.innerHeight}px`
              ),
                this.document.documentElement.classList.add("is-locked");
            }
            resetWindowHeight() {
              this.document.documentElement.classList.remove("is-locked");
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(L.yf),
                e.ɵɵdirectiveInject(Ee.H),
                e.ɵɵdirectiveInject(_t.Z),
                e.ɵɵdirectiveInject(Q.b),
                e.ɵɵdirectiveInject(ue),
                e.ɵɵdirectiveInject(it),
                e.ɵɵdirectiveInject(m.K0)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["polymorpheus-assets-selector"]],
              features: [e.ɵɵProvidersFeature(kr)],
              decls: 6,
              vars: 4,
              consts: [
                [1, "assets-selector"],
                ["class", "assets-selector__header", 4, "noFrame"],
                [3, "idPrefix"],
                [4, "ngLet"],
                [1, "assets-selector__header"],
                [2, "font-size", "18px"],
                [
                  2,
                  "color",
                  "#808080",
                  "font-weight",
                  "300",
                  "font-size",
                  "18px",
                  "line-height",
                  "29px",
                ],
                ["class", "assets-selector__row", 4, "noFrame"],
                [1, "assets-selector__content"],
                [4, "ngIf"],
                [1, "assets-selector__row"],
                [1, "blockchains-list-container"],
                [4, "onlyFrame"],
                ["class", "fiats-list-container", 4, "ngIf"],
                ["class", "token-list-container", 4, "ngIf"],
                ["class", "vertical-iframe-token-search", 4, "ngIf"],
                [1, "vertical-iframe-token-search"],
                [1, "fiats-list-container"],
                [1, "token-list-container"],
                [1, "token-list-container__list"],
                [
                  "class",
                  "token-list-container__search",
                  3,
                  "expandableField",
                  4,
                  "ngIf",
                ],
                [1, "token-list-container__search", 3, "expandableField"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "section", 0),
                  e.ɵɵtemplate(1, Ko, 3, 0, "header", 1),
                  e.ɵɵelementStart(2, "div"),
                  e.ɵɵelement(3, "app-asset-types-aside", 2),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(4, oa, 7, 2, "ng-container", 3),
                  e.ɵɵpipe(5, "async"),
                  e.ɵɵelementEnd()),
                  2 & i &&
                    (e.ɵɵadvance(3),
                    e.ɵɵproperty("idPrefix", r.idPrefix),
                    e.ɵɵadvance(1),
                    e.ɵɵproperty(
                      "ngLet",
                      e.ɵɵpipeBind1(5, 2, r.selectorListType$)
                    ));
              },
              dependencies: [
                m.O5,
                F.e,
                me.a,
                Me.T,
                Fr,
                $r,
                No,
                Ho,
                $o,
                Go,
                m.Ov,
              ],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.assets-selector[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}html.iframe-horizontal[_nghost-%COMP%]   .assets-selector[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .assets-selector[_ngcontent-%COMP%]{flex-direction:column;justify-content:center;width:1180px;height:100vh;margin:0 auto}html.iframe-vertical[_nghost-%COMP%]   .assets-selector[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .assets-selector[_ngcontent-%COMP%]{flex-direction:column;justify-content:center;width:350px;height:100vh;margin:0 auto}.assets-selector__row[_ngcontent-%COMP%]{display:flex;grid-gap:20px;justify-content:space-between}.assets-selector__row[_ngcontent-%COMP%]     tui-wrapper img{max-width:20px;max-height:20px;filter:grayscale(1)}.assets-selector__header[_ngcontent-%COMP%]{position:relative;margin-right:40px}.assets-selector__header[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-top:0;color:gray;font-weight:300;font-size:24px;line-height:29px}.assets-selector__content[_ngcontent-%COMP%]{position:relative;left:-24px;display:flex;flex:1;width:calc(100% + 24px);min-height:443px;max-height:443px}html.iframe[_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%]{left:0}html.iframe-horizontal[_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%]{flex-direction:column;justify-content:center;width:100%;height:180px;max-height:180px;padding:0 30px 0 0}html.iframe-vertical[_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .assets-selector__content[_ngcontent-%COMP%]{flex-direction:column;width:350px;height:500px;max-height:500px;padding:20px}app-search-bar[_ngcontent-%COMP%]{width:100%;margin-bottom:14px}app-search-bar.vertical-iframe-token-search[_ngcontent-%COMP%]{margin-top:10px;margin-bottom:0}tui-loader[_ngcontent-%COMP%]{position:relative;left:-6px;width:100%}.token-list-container[_ngcontent-%COMP%]{width:100%}html.iframe-horizontal[_nghost-%COMP%]   .token-list-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-list-container[_ngcontent-%COMP%]{display:flex;align-items:center;height:90px;overflow:hidden}html.iframe-horizontal[_nghost-%COMP%]   .token-list-container__search[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-list-container__search[_ngcontent-%COMP%]{position:relative;top:-2px;width:auto;margin-right:15px;margin-bottom:0;border:2px solid #626262;border-radius:15px}html.iframe-horizontal[_nghost-%COMP%]   .token-list-container__list[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-list-container__list[_ngcontent-%COMP%]{display:flex;width:100%;height:90px;overflow:hidden}.token-list-container__list[_ngcontent-%COMP%]{height:100%}.blockchains-list-container[_ngcontent-%COMP%], .fiats-list-container[_ngcontent-%COMP%]{width:100%}@media (max-width: 599px){.assets-selector[_ngcontent-%COMP%]{height:100%}.assets-selector__content[_ngcontent-%COMP%]{height:calc(100% - 100px);max-height:calc(100vh - 117.5px)}}@media (max-width: 500px){.assets-selector[_ngcontent-%COMP%]{padding:1.5em 0 0 10px}.assets-selector__row[_ngcontent-%COMP%]{padding-right:10px}.assets-selector__content[_ngcontent-%COMP%]{left:-10px;width:calc(100% + 10px)}}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        ci = (() => {
          class n {
            constructor(t, i, r) {
              (this.dialogService = t),
                (this.injector = i),
                (this.iframeService = r);
            }
            showDialog(t, i = "") {
              const r = this.iframeService.isIframe ? "fullscreen" : "l";
              return this.dialogService.open(new L.Al(aa, this.injector), {
                size: r,
                data: { formType: t, idPrefix: i },
              });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(De.RO),
                e.ɵɵinject(e.Injector),
                e.ɵɵinject(Q.b)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      var li = p(56822);
      function sa(n, a) {
        1 & n && e.ɵɵelement(0, "div", 10);
      }
      function ca(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 5)(2, "div", 6)(3, "img", 7),
            e.ɵɵlistener("error", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onImageError(r));
            }),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(4, "div", 8),
            e.ɵɵtext(5),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(6, sa, 1, 0, "div", 9),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty(
              "src",
              t.selectedAsset.image || t.DEFAULT_TOKEN_IMAGE,
              e.ɵɵsanitizeUrl
            )("alt", t.selectedAsset.symbol),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", t.selectedAsset.symbol, " "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("noFrame", "vertical");
        }
      }
      function la(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span", 11),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate(e.ɵɵpipeBind1(2, 1, "common.chooseToken")));
      }
      const pa = function (n) {
        return { tokens_disabled: n };
      };
      let ht = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _, g) {
            (this.cdr = t),
              (this.assetsSelectorModalService = i),
              (this.queryParamsService = r),
              (this.tokensService = s),
              (this.gtmService = c),
              (this.swapFormService = l),
              (this.swapFormQueryService = d),
              (this.destroy$ = _),
              (this.document = g),
              (this.disabled = !1),
              (this.idPrefix = ""),
              (this.DEFAULT_TOKEN_IMAGE = ut.k),
              (this.buttonHovered = null),
              (this.iframeForceDisabled = !1),
              (this.loading$ = this.swapFormQueryService.initialLoading$);
          }
          ngOnInit() {
            this.setFormValues(this.swapFormService.inputValue),
              this.swapFormService.inputValue$
                .pipe((0, P.R)(this.destroy$))
                .subscribe((t) => {
                  this.setFormValues(t);
                }),
              this.queryParamsService.tokensSelectionDisabled$
                .pipe((0, P.R)(this.destroy$))
                .subscribe(([t, i]) => {
                  (this.iframeForceDisabled = "from" === this.formType ? t : i),
                    this.cdr.markForCheck();
                });
          }
          setFormValues(t) {
            (this.selectedAsset =
              t["from" === this.formType ? "fromAsset" : "toToken"]),
              this.cdr.detectChanges();
          }
          openTokensSelect(t) {
            this.gtmService.reloadGtmSession(),
              this.assetsSelectorModalService
                .showDialog(this.formType, t)
                .subscribe((i) => {
                  if (i) {
                    this.selectedAsset = i;
                    const r = this.document.getElementById(
                        "token-amount-input-element"
                      ),
                      s =
                        !this.swapFormService.inputValue.fromAmount?.isFinite();
                    r &&
                      s &&
                      setTimeout(() => {
                        r.focus();
                      }, 0),
                      this.swapFormService.inputControl.patchValue(
                        "from" === this.formType
                          ? {
                              fromAssetType: (0, de.$v)(i)
                                ? i.blockchain
                                : "fiat",
                              fromAsset: i,
                            }
                          : { toToken: i, toBlockchain: i.blockchain }
                      );
                  }
                });
          }
          onImageError(t) {
            this.tokensService.onTokenImageError(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(ci),
              e.ɵɵdirectiveInject(Ae.E),
              e.ɵɵdirectiveInject(Ee.H),
              e.ɵɵdirectiveInject(Ue.k),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(li.B),
              e.ɵɵdirectiveInject(w.a3, 2),
              e.ɵɵdirectiveInject(m.K0)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-select-asset-button-tokens"]],
            inputs: {
              formType: "formType",
              disabled: "disabled",
              idPrefix: "idPrefix",
            },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 6,
            vars: 13,
            consts: [
              [1, "tokens", 3, "ngClass"],
              [1, "tokens__container"],
              [
                1,
                "tokens__btn",
                3,
                "id",
                "size",
                "loading",
                "disabled",
                "appearance",
                "pseudoHovered",
                "onClick",
                "mouseleave",
              ],
              [4, "ngIf"],
              ["class", "tokens__inner-text", 4, "ngIf"],
              [1, "tokens__inner"],
              [1, "tokens__image-container"],
              ["width", "18px", "height", "18px", 3, "src", "alt", "error"],
              [1, "tokens__symbol"],
              [
                "inlineSVG",
                "assets/images/icons/arrow-down.svg",
                "class",
                "arrow",
                4,
                "noFrame",
              ],
              ["inlineSVG", "assets/images/icons/arrow-down.svg", 1, "arrow"],
              [1, "tokens__inner-text"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(
                  2,
                  "app-rubic-button",
                  2
                ),
                e.ɵɵlistener("onClick", function () {
                  return r.openTokensSelect(r.idPrefix);
                })("mouseleave", function () {
                  return (r.buttonHovered = null);
                }),
                e.ɵɵpipe(3, "async"),
                e.ɵɵtemplate(4, ca, 7, 4, "ng-container", 3),
                e.ɵɵtemplate(5, la, 3, 3, "span", 4),
                e.ɵɵelementEnd()()()),
                2 & i &&
                  (e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(
                      11,
                      pa,
                      r.disabled || r.iframeForceDisabled
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "id",
                    "from" === r.formType
                      ? r.idPrefix + "token1"
                      : r.idPrefix + "token2"
                  )("size", "s")("loading", e.ɵɵpipeBind1(3, 9, r.loading$))(
                    "disabled",
                    r.disabled || r.iframeForceDisabled
                  )("appearance", r.selectedAsset ? "secondary" : "primary")(
                    "pseudoHovered",
                    r.buttonHovered
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngIf", r.selectedAsset),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.selectedAsset));
            },
            dependencies: [m.mk, m.O5, se.j, me.a, G.d$, m.Ov, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}html.iframe-vertical   [_nghost-%COMP%]{width:100%}.tokens[_ngcontent-%COMP%]{font-size:16px}html.iframe-horizontal[_nghost-%COMP%]   .tokens[_ngcontent-%COMP%]     app-rubic-button button, html.iframe-horizontal   [_nghost-%COMP%]   .tokens[_ngcontent-%COMP%]     app-rubic-button button, html.iframe-horizontal[_nghost-%COMP%]   .tokens[_ngcontent-%COMP%]     app-rubic-button tui-wrapper, html.iframe-horizontal   [_nghost-%COMP%]   .tokens[_ngcontent-%COMP%]     app-rubic-button tui-wrapper{box-shadow:none!important}html.iframe-vertical[_nghost-%COMP%]   .tokens[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;width:100%}html.iframe-vertical[_nghost-%COMP%]   .tokens__symbol[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens__symbol[_ngcontent-%COMP%], html.iframe-vertical[_nghost-%COMP%]   .tokens__inner-text[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens__inner-text[_ngcontent-%COMP%]{font-size:18px}html.iframe-vertical[_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__symbol[_ngcontent-%COMP%]:after, html.iframe-vertical   [_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__symbol[_ngcontent-%COMP%]:after, html.iframe-vertical[_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__inner-text[_ngcontent-%COMP%]:after, html.iframe-vertical   [_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__inner-text[_ngcontent-%COMP%]:after{display:none}html.iframe-vertical[_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__inner[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens_disabled[_ngcontent-%COMP%]   .tokens__inner[_ngcontent-%COMP%]{opacity:.5}html.iframe-vertical[_nghost-%COMP%]   .tokens__clear[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens__clear[_ngcontent-%COMP%]{display:none}html.iframe-vertical[_nghost-%COMP%]   .tokens__clear-mobile[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens__clear-mobile[_ngcontent-%COMP%]{position:relative;top:2px;display:block!important}.tokens__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:25%}.tokens__inner[_ngcontent-%COMP%]{display:flex;grid-gap:8px;align-items:center;padding-bottom:1px}.tokens__inner-text[_ngcontent-%COMP%]{white-space:nowrap}.tokens__image-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:18px;height:18px}.tokens__image-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:initial;max-width:18px;height:initial;max-height:18px}.tokens__symbol[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}html.iframe-vertical[_nghost-%COMP%]   .tokens__symbol[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .tokens__symbol[_ngcontent-%COMP%]{text-overflow:inherit}.tokens__clear-container[_ngcontent-%COMP%]{display:flex;align-items:center;cursor:pointer}.tokens__clear-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{margin-right:10px}.tokens__container[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;flex-direction:row-reverse}.tokens__container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{display:block}.tokens__container[_ngcontent-%COMP%]     [tuiButton]{font-weight:500}@media (max-width: 651px){.tokens[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;border-radius:0}.tokens__clear[_ngcontent-%COMP%]{display:none}.tokens__clear-mobile[_ngcontent-%COMP%]{display:block;margin-left:10px}}.arrow[_ngcontent-%COMP%]     svg path{fill:var(--secondary-text)}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var ye = p(95972);
      const da = function () {
        return { decimals: 6 };
      };
      function ma(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 4),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵpipe(3, "withRound"),
            e.ɵɵpipe(4, "bigNumberFormat"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              "",
              e.ɵɵpipeBind1(2, 2, "common.have"),
              " ",
              e.ɵɵpipeBind3(
                3,
                4,
                e.ɵɵpipeBind1(4, 8, null == t.token ? null : t.token.amount),
                "fixedValue",
                e.ɵɵpureFunction0(10, da)
              ),
              " "
            );
        }
      }
      function _a(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "button", 5),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.maxButtonClick());
            }),
            e.ɵɵtext(1, " MAX "),
            e.ɵɵelementEnd();
        }
      }
      function ua(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 1),
            e.ɵɵtemplate(1, ma, 5, 11, "span", 2),
            e.ɵɵtemplate(2, _a, 2, 0, "button", 3),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "balance" !== t.hide),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "maxButton" !== t.hide);
        }
      }
      let pi = (() => {
        class n {
          constructor() {
            this.maxButtonClickEvent = new e.EventEmitter();
          }
          maxButtonClick() {
            this.maxButtonClickEvent.emit();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-user-balance-container"]],
            inputs: { token: "token", hide: "hide" },
            outputs: { maxButtonClickEvent: "maxButtonClickEvent" },
            decls: 1,
            vars: 1,
            consts: [
              ["class", "user-balance-container", 4, "ngIf"],
              [1, "user-balance-container"],
              ["class", "user-balance-container__balance", 4, "ngIf"],
              [
                "class",
                "user-balance-container__max-button",
                3,
                "click",
                4,
                "ngIf",
              ],
              [1, "user-balance-container__balance"],
              [1, "user-balance-container__max-button", 3, "click"],
            ],
            template: function (i, r) {
              1 & i && e.ɵɵtemplate(0, ua, 3, 2, "div", 0),
                2 & i &&
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.token ? null : r.token.amount.gt(0)
                  );
            },
            dependencies: [m.O5, be.N, R.X$, ye.f],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.user-balance-container[_ngcontent-%COMP%]{margin-top:10px}body.hide-unused-ui[_nghost-%COMP%]   .user-balance-container[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .user-balance-container[_ngcontent-%COMP%]{margin-top:0;margin-right:10px;white-space:nowrap}html.iframe[_nghost-%COMP%]   .user-balance-container[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .user-balance-container[_ngcontent-%COMP%]{margin-top:0}.user-balance-container__balance[_ngcontent-%COMP%]{margin-right:10px;color:var(--secondary-text);font-size:14px;line-height:17px}html.iframe[_nghost-%COMP%]   .user-balance-container__balance[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .user-balance-container__balance[_ngcontent-%COMP%]{display:block;height:27px;padding:5px 10px;color:var(--tui-text-02);font-size:12px;line-height:17px;background-color:var(--primary-background);border-radius:10px}html.iframe:not(.dark)[_nghost-%COMP%]   .user-balance-container__balance[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .user-balance-container__balance[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.user-balance-container__max-button[_ngcontent-%COMP%]{padding:0;color:var(--primary-color);font-size:14px;line-height:17px;letter-spacing:.1em;text-transform:uppercase;background-color:transparent}@media (max-width: 420px){.user-balance-container__max-button[_ngcontent-%COMP%]{font-size:18px}}.user-balance-container__max-button_disabled[_ngcontent-%COMP%]{color:var(--secondary-text);cursor:default}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var di = p(58436),
        ga = p(84581);
      let ft = (() => {
          class n {
            constructor(t, i) {
              (this.swapFormService = t),
                (this.limitOrdersService = i),
                (this._rate$ = new A.X({ value: new M.Z(0), percentDiff: 0 })),
                (this.rate$ = this._rate$.asObservable()),
                (this.decimalPoints = 6),
                this.subscribeOnTokensChange(),
                this.subscribeOnAmountsChange();
            }
            get marketRate() {
              return this._rate$.value.value;
            }
            subscribeOnTokensChange() {
              var t = this;
              this.swapFormService.inputValueDistinct$
                .pipe(
                  (0, ce.x)(
                    (i, r) =>
                      (0, di.l)(i.fromAsset, r.fromAsset) &&
                      (0, q.tb)(i.toToken, r.toToken)
                  )
                )
                .subscribe(
                  (function () {
                    var i = (0, O.Z)(function* ({ fromAsset: r, toToken: s }) {
                      if ((0, de.$v)(r) && s) {
                        const c =
                          r.blockchain === s.blockchain
                            ? (yield t.limitOrdersService.getMarketRate(
                                r,
                                s
                              )).dp(t.decimalPoints)
                            : new M.Z(NaN);
                        t._rate$.next({
                          value: c,
                          percentDiff: t.getPercentDiff(c),
                        });
                      } else t._rate$.next({ value: new M.Z(0), percentDiff: 0 });
                    });
                    return function (r) {
                      return i.apply(this, arguments);
                    };
                  })()
                );
            }
            subscribeOnAmountsChange() {
              (0, j.a)([
                this.swapFormService.fromAmount$,
                this.swapFormService.toAmount$,
              ]).subscribe(() => {
                const t = this.marketRate;
                this._rate$.next({
                  value: t,
                  percentDiff: this.getPercentDiff(t),
                });
              });
            }
            getPercentDiff(t) {
              if (!t.isFinite() || t.eq(0)) return 0;
              const { fromAmount: i } = this.swapFormService.inputValue,
                { toAmount: r } = this.swapFormService.outputValue,
                s = i?.isFinite() && r?.isFinite() ? r.div(i) : null;
              return s?.isFinite()
                ? Math.min(
                    s.minus(t).div(t).multipliedBy(100).dp(2).toNumber(),
                    999
                  )
                : 0;
            }
            setRateToMarket() {
              const { fromAmount: t } = this.swapFormService.inputValue,
                { toAmount: i } = this.swapFormService.outputValue;
              t?.isFinite() || i?.isFinite()
                ? t?.isFinite()
                  ? this.swapFormService.outputControl.patchValue({
                      toAmount: t.multipliedBy(this.marketRate),
                    })
                  : this.swapFormService.inputControl.patchValue({
                      fromAmount: i.dividedBy(this.marketRate).dp(6),
                    })
                : (this.swapFormService.inputControl.patchValue({
                    fromAmount: new M.Z(1),
                  }),
                  this.swapFormService.outputControl.patchValue({
                    toAmount: new M.Z(this.marketRate),
                  }));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(E.q), e.ɵɵinject(ga.Z));
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        ha = (() => {
          class n {
            constructor(t) {
              this.orderRateService = t;
            }
            onClick() {
              this.orderRateService.setRateToMarket();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(ft));
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-set-to-market-button"]],
              features: [e.ɵɵProvidersFeature([w.a3])],
              decls: 2,
              vars: 0,
              consts: [[1, "button", 3, "click"]],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "button", 0),
                  e.ɵɵlistener("click", function () {
                    return r.onClick();
                  }),
                  e.ɵɵtext(1, "Set to market"),
                  e.ɵɵelementEnd());
              },
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.button[_ngcontent-%COMP%]{color:var(--primary-color);font-size:14px;line-height:17px;letter-spacing:.1em}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      const fa = ["tokenAmount"];
      function va(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "input", 7, 8),
            e.ɵɵlistener("amountChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onAmountChange(r));
            }),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("placeholder", e.ɵɵpipeBind1(2, 3, t.placeholder$))(
            "formControl",
            t.amount
          )(
            "decimals",
            (null == t.selectedToken ? null : t.selectedToken.decimals) ||
              t.DEFAULT_DECIMALS
          );
        }
      }
      function Ca(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 9),
          e.ɵɵtext(1, "Please, switch to On-Chain pair"),
          e.ɵɵelementEnd());
      }
      function xa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 11),
            e.ɵɵelement(1, "app-user-balance-container", 12),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1), e.ɵɵproperty("token", t.selectedToken);
        }
      }
      function ba(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, xa, 2, 1, "div", 10),
          e.ɵɵelementContainerEnd()),
          2 & n && (e.ɵɵadvance(1), e.ɵɵproperty("onlyFrame", "horizontal"));
      }
      function ya(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-user-balance-container", 15),
            e.ɵɵlistener("maxButtonClickEvent", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onUserBalanceMaxButtonClick());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵproperty("token", t.selectedToken);
        }
      }
      function Sa(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-user-balance-container", 16),
            e.ɵɵlistener("maxButtonClickEvent", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onUserBalanceMaxButtonClick());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵproperty("token", t.selectedToken);
        }
      }
      function Ta(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, ya, 1, 1, "app-user-balance-container", 13),
          e.ɵɵtemplate(2, Sa, 1, 1, "app-user-balance-container", 14),
          e.ɵɵelementContainerEnd()),
          2 & n && (e.ɵɵadvance(2), e.ɵɵproperty("onlyFrame", "horizontal"));
      }
      function Oa(n, a) {
        1 & n && e.ɵɵelement(0, "app-set-to-market-button");
      }
      function Pa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Oa, 1, 0, "app-set-to-market-button", 5),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1), e.ɵɵproperty("ngIf", t.isWithTokens);
        }
      }
      const wa = function (n) {
        return { "token-amount-input-container__token-button_attractive": n };
      };
      let mi = (() => {
        class n {
          constructor(t, i, r, s, c, l) {
            (this.swapFormService = t),
              (this.swapTypeService = i),
              (this.translateService = r),
              (this.iframeService = s),
              (this.cdr = c),
              (this.destroy$ = l),
              (this.formType = "from"),
              (this.amountUpdated = new e.EventEmitter()),
              (this.placeholder$ = this.translateService.get(
                "errors.noEnteredAmount"
              )),
              (this.DEFAULT_DECIMALS = 18),
              (this.amount = new v.FormControl("")),
              (this.showLimitOrderOnChainError$ = (0, j.a)([
                this.swapTypeService.swapMode$,
                this.swapFormService.inputValue$,
              ]).pipe(
                (0, x.U)(([d, _]) => {
                  const { fromAssetType: g, toBlockchain: C } = _;
                  return (
                    d === S.V.LIMIT_ORDER && "to" === this.formType && g !== C
                  );
                })
              ));
          }
          get formattedAmount() {
            return this.amount?.value.split(",").join("");
          }
          get isWithTokens() {
            const { fromAsset: t, toToken: i } =
              this.swapFormService.inputValue;
            return t && Boolean(i);
          }
          ngOnInit() {
            "from" === this.formType
              ? this.swapFormService.inputValue$
                  .pipe((0, P.R)(this.destroy$))
                  .subscribe((t) => {
                    this.updateFormValues(t.fromAsset, t.fromAmount);
                  })
              : (0, j.a)([
                  this.swapFormService.toToken$,
                  this.swapFormService.toAmount$,
                ])
                  .pipe((0, P.R)(this.destroy$))
                  .subscribe(([t, i]) => {
                    this.updateFormValues(t, i);
                  });
          }
          updateFormValues(t, i) {
            !i || i.isNaN()
              ? this.amount.setValue("")
              : i.eq(this.formattedAmount) || this.amount.setValue(i.toFixed()),
              (this.selectedAsset = t),
              (this.selectedToken = (0, de.$v)(t) ? t : null),
              this.cdr.markForCheck();
          }
          onUserBalanceMaxButtonClick() {
            this.amount.setValue(this.selectedToken.amount.toFixed());
          }
          onAmountChange(t) {
            this.amount.setValue(t, { emitViewToModelChange: !1 }),
              this.updateInputValue();
          }
          updateInputValue() {
            const t =
                "from" === this.formType
                  ? this.swapFormService.inputValue.fromAmount
                  : this.swapFormService.outputValue.toAmount,
              i = "from" === this.formType ? "fromAmount" : "toAmount",
              r = "from" === this.formType ? "inputControl" : "outputControl";
            ((t && !t.isNaN()) || this.formattedAmount) &&
              !t?.eq(this.formattedAmount) &&
              (this.swapFormService[r].patchValue({
                [i]: new M.Z(this.formattedAmount),
              }),
              this.amountUpdated.emit());
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(ae.H),
              e.ɵɵdirectiveInject(R.sK),
              e.ɵɵdirectiveInject(Q.b),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(w.a3)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-token-amount-input"]],
            viewQuery: function (i, r) {
              if ((1 & i && e.ɵɵviewQuery(fa, 5), 2 & i)) {
                let s;
                e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                  (r.tokenAmountInput = s.first);
              }
            },
            inputs: { formType: "formType" },
            outputs: { amountUpdated: "amountUpdated" },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 12,
            vars: 11,
            consts: [
              [1, "token-amount-input-container"],
              [1, "token-amount-input-container__wrapper"],
              [1, "token-amount-input-container__input-label"],
              [
                "autocomplete",
                "off",
                "class",
                "token-amount-input-container__input",
                "name",
                "token-amount",
                "appTokenAmount",
                "",
                "inputmode",
                "decimal",
                "id",
                "token-amount-input-element",
                3,
                "placeholder",
                "formControl",
                "decimals",
                "amountChange",
                4,
                "ngIf",
                "ngIfElse",
              ],
              ["limitOrderOnChainError", ""],
              [4, "ngIf"],
              [
                1,
                "token-amount-input-container__token-button",
                3,
                "ngClass",
                "formType",
              ],
              [
                "autocomplete",
                "off",
                "name",
                "token-amount",
                "appTokenAmount",
                "",
                "inputmode",
                "decimal",
                "id",
                "token-amount-input-element",
                1,
                "token-amount-input-container__input",
                3,
                "placeholder",
                "formControl",
                "decimals",
                "amountChange",
              ],
              ["tokenAmount", ""],
              [1, "error-text"],
              [
                "class",
                "token-amount-input-container__iframe-info-cards",
                4,
                "onlyFrame",
              ],
              [1, "token-amount-input-container__iframe-info-cards"],
              ["hide", "maxButton", 3, "token"],
              [3, "token", "maxButtonClickEvent", 4, "noFrame"],
              [
                "hide",
                "balance",
                3,
                "token",
                "maxButtonClickEvent",
                4,
                "onlyFrame",
              ],
              [3, "token", "maxButtonClickEvent"],
              ["hide", "balance", 3, "token", "maxButtonClickEvent"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "label", 2),
                  e.ɵɵtemplate(3, va, 3, 5, "input", 3),
                  e.ɵɵpipe(4, "async"),
                  e.ɵɵtemplate(
                    5,
                    Ca,
                    2,
                    0,
                    "ng-template",
                    null,
                    4,
                    e.ɵɵtemplateRefExtractor
                  ),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(7, ba, 2, 1, "ng-container", 5),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(8, "div", 1),
                  e.ɵɵelement(9, "app-select-asset-button-tokens", 6),
                  e.ɵɵtemplate(10, Ta, 3, 1, "ng-container", 5),
                  e.ɵɵtemplate(11, Pa, 2, 1, "ng-container", 5),
                  e.ɵɵelementEnd()()),
                2 & i)
              ) {
                const s = e.ɵɵreference(6);
                e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "ngIf",
                    !1 === e.ɵɵpipeBind1(4, 7, r.showLimitOrderOnChainError$)
                  )("ngIfElse", s),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty("ngIf", "from" === r.formType),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(9, wa, !r.selectedAsset)
                  )("formType", r.formType),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", "from" === r.formType),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", "to" === r.formType);
              }
            },
            dependencies: [
              m.mk,
              m.O5,
              Gn,
              me.a,
              Me.T,
              v.DefaultValueAccessor,
              v.NgControlStatus,
              v.FormControlDirective,
              ht,
              pi,
              ha,
              m.Ov,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}@keyframes _ngcontent-%COMP%_jump{0%{transform:scale(1)}to{transform:scale(1.07)}}.token-amount-input-container[_ngcontent-%COMP%]{display:flex;justify-content:space-between;min-height:105px;padding-bottom:20px}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container[_ngcontent-%COMP%]{position:relative;width:363px;height:50px;min-height:0;padding:0 7px 0 16px;background:var(--primary-background);border-radius:10px}html.iframe:not(.dark)[_nghost-%COMP%]   .token-amount-input-container[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .token-amount-input-container[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.token-amount-input-container__wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;max-width:300px;height:100%}body.hide-unused-ui[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]{display:flex;gap:10px;justify-content:initial;max-width:300px;height:100%}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]{justify-content:center}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child, html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child{flex-direction:row-reverse;order:2}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child   app-select-asset-button-tokens[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child   app-select-asset-button-tokens[_ngcontent-%COMP%]{display:flex;align-items:center}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child   app-user-balance-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:first-child   app-user-balance-container[_ngcontent-%COMP%]{display:flex;align-items:center;margin-right:10px;margin-left:5px}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:nth-child(2), html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]:nth-child(2){order:1}.token-amount-input-container__wrapper[_ngcontent-%COMP%]   app-set-to-market-button[_ngcontent-%COMP%]{display:block;margin-top:10px}.token-amount-input-container__input-label[_ngcontent-%COMP%]{width:100%;height:35px;margin-bottom:5px}.token-amount-input-container__input-label[_ngcontent-%COMP%]   [_ngcontent-%COMP%]::placeholder{letter-spacing:.6px}.token-amount-input-container__input[_ngcontent-%COMP%]{width:100%;height:100%;padding:0;color:var(--primary-text);font-weight:400;font-size:22px;letter-spacing:.1em;text-align:left;background-color:transparent;border:none}html.iframe-horizontal[_nghost-%COMP%]   .token-amount-input-container__input[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .token-amount-input-container__input[_ngcontent-%COMP%]{padding-left:0;font-size:20px;text-align:left}.token-amount-input-container__iframe-info-cards[_ngcontent-%COMP%]{position:absolute;bottom:-33px;left:0;display:flex;align-items:center}.token-amount-input-container__iframe-info-cards[_ngcontent-%COMP%]   app-usd-price-container[_ngcontent-%COMP%]{margin-right:5px}@media (max-width: 651px){.token-amount-input-container[_ngcontent-%COMP%]{position:relative;height:auto;margin:0;padding:40px 20px 20px;flex-direction:row!important}.token-amount-input-container__input[_ngcontent-%COMP%]{max-width:150px}input[_ngcontent-%COMP%]{font-size:16px!important}}@media (max-width: 420px){.token-amount-input-container[_ngcontent-%COMP%]{flex-direction:column;gap:10px;align-items:flex-start}.token-amount-input-container__input[_ngcontent-%COMP%]{padding-left:0;text-align:left}body.hide-unused-ui[_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .token-amount-input-container__wrapper[_ngcontent-%COMP%]{flex-direction:row;align-items:center}}.error-text[_ngcontent-%COMP%]{font-size:18px;line-height:35px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function un(n) {
        return { icon: rn.v[n], label: ge.h[n] };
      }
      let Lt = (() => {
        class n {
          constructor() {}
          set assetType(t) {
            this.assetTypeItem =
              "fiat" === t
                ? {
                    icon: "assets/images/icons/fiat-selector.svg",
                    label: "fiat",
                  }
                : un(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-iframe-asset-type-indicator"]],
            inputs: { assetType: "assetType" },
            decls: 2,
            vars: 2,
            consts: [
              [1, "asset-type-container"],
              [3, "src", "alt"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵelement(1, "img", 1),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "src",
                    r.assetTypeItem.icon,
                    e.ɵɵsanitizeUrl
                  )("alt", r.assetTypeItem.label));
            },
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{display:block}.asset-type-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:50px;height:50px;background-color:var(--primary-background);border-radius:10px}html.iframe:not(.dark)[_nghost-%COMP%]   .asset-type-container[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .asset-type-container[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.asset-type-container[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:24px;max-height:24px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function ka(n, a) {
        if (
          (1 & n && e.ɵɵelement(0, "app-iframe-asset-type-indicator", 9), 2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("assetType", t.selectedAssetType);
        }
      }
      let Aa = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.swapFormService = t),
              (this.translateService = i),
              (this.cdr = r),
              (this.destroy$ = s),
              (this.placeholder$ = this.translateService.get(
                "errors.noEnteredAmount"
              )),
              (this.DEFAULT_DECIMALS = 18),
              (this.amount = new v.FormControl(""));
          }
          get formattedAmount() {
            return this.amount.value.split(",").join("");
          }
          ngOnInit() {
            this.swapFormService.inputValue$
              .pipe((0, P.R)(this.destroy$))
              .subscribe((t) => {
                const { fromAmount: i, fromAsset: r } = t;
                !i || i.isNaN()
                  ? this.amount.setValue("")
                  : i.eq(this.formattedAmount) ||
                    this.amount.setValue(i.toFixed()),
                  (this.selectedAssetType = r
                    ? (0, de.$v)(r)
                      ? r.blockchain
                      : "fiat"
                    : null),
                  (this.selectedToken = (0, de.$v)(r) ? r : null);
              });
          }
          onUserBalanceMaxButtonClick() {
            this.amount.setValue(this.selectedToken.amount.toFixed());
          }
          onAmountChange(t) {
            this.amount.setValue(t, { emitViewToModelChange: !1 }),
              this.updateInputValue();
          }
          updateInputValue() {
            const { fromAmount: t } = this.swapFormService.inputValue;
            ((t && !t.isNaN()) || this.formattedAmount) &&
              !t?.eq(this.formattedAmount) &&
              this.swapFormService.inputControl.patchValue({
                fromAmount: new M.Z(this.formattedAmount),
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(R.sK),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-vertical-iframe-token-amount-input"]],
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 10,
            vars: 8,
            consts: [
              [1, "vertical-iframe-input"],
              ["formType", "from", 1, "vertical-iframe-input__row"],
              [1, "vertical-iframe-input__row", "blockchain-and-amount-input"],
              [3, "assetType", 4, "ngIf"],
              [1, "blockchain-and-amount-input__label"],
              [
                "autocomplete",
                "off",
                "name",
                "token-amount",
                "appTokenAmount",
                "",
                "inputmode",
                "decimal",
                1,
                "blockchain-and-amount-input__input",
                3,
                "placeholder",
                "formControl",
                "decimals",
                "amountChange",
              ],
              ["hide", "balance", 3, "token", "maxButtonClickEvent"],
              [1, "vertical-iframe-input__row", "cards-container"],
              ["hide", "maxButton", 3, "token"],
              [3, "assetType"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "section", 0),
                e.ɵɵelement(1, "app-select-asset-button-tokens", 1),
                e.ɵɵelementStart(2, "div", 2),
                e.ɵɵtemplate(3, ka, 1, 1, "app-iframe-asset-type-indicator", 3),
                e.ɵɵelementStart(4, "label", 4)(5, "input", 5),
                e.ɵɵlistener("amountChange", function (c) {
                  return r.onAmountChange(c);
                }),
                e.ɵɵpipe(6, "async"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(7, "app-user-balance-container", 6),
                e.ɵɵlistener("maxButtonClickEvent", function () {
                  return r.onUserBalanceMaxButtonClick();
                }),
                e.ɵɵelementEnd()()(),
                e.ɵɵelementStart(8, "div", 7),
                e.ɵɵelement(9, "app-user-balance-container", 8),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(3),
                  e.ɵɵproperty("ngIf", r.selectedAssetType),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "placeholder",
                    e.ɵɵpipeBind1(6, 6, r.placeholder$)
                  )("formControl", r.amount)(
                    "decimals",
                    (null == r.selectedToken
                      ? null
                      : r.selectedToken.decimals) || r.DEFAULT_DECIMALS
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("token", r.selectedToken),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("token", r.selectedToken));
            },
            dependencies: [
              m.O5,
              Gn,
              Lt,
              v.DefaultValueAccessor,
              v.NgControlStatus,
              v.FormControlDirective,
              ht,
              pi,
              m.Ov,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{width:100%}.vertical-iframe-input[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;min-height:132px}.vertical-iframe-input__row[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}.vertical-iframe-input__row[_ngcontent-%COMP%]:not(:last-child){margin-bottom:6px}.vertical-iframe-input[_ngcontent-%COMP%] >   app-select-asset-button-tokens button tui-wrapper{box-shadow:none!important}.blockchain-and-amount-input[_ngcontent-%COMP%]{display:flex}.blockchain-and-amount-input[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%]{flex:0;margin-right:15px}.blockchain-and-amount-input__label[_ngcontent-%COMP%]{position:relative;flex:1;width:100%;height:50px;padding-left:16px;background-color:var(--primary-background);border-radius:10px}html.iframe:not(.dark)[_nghost-%COMP%]   .blockchain-and-amount-input__label[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .blockchain-and-amount-input__label[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.blockchain-and-amount-input__input[_ngcontent-%COMP%]{width:100%;height:100%;padding:0 60px 0 0;color:var(--primary-text);font-weight:400;font-size:20px;letter-spacing:.1em;text-align:left;background-color:transparent;border:none}html.iframe[_nghost-%COMP%]   .blockchain-and-amount-input__input__input[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .blockchain-and-amount-input__input__input[_ngcontent-%COMP%]{padding:0 16px 0 0}.blockchain-and-amount-input[_ngcontent-%COMP%]   app-user-balance-container[_ngcontent-%COMP%]{position:absolute;top:15px;right:15px}.cards-container[_ngcontent-%COMP%]{width:auto}.cards-container[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:not(:last-child){margin-right:10px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Ma = p(50774),
        Ea = p(60515),
        _i = p(54968),
        Ia = p(95577),
        $t = p(95698);
      const Na = ["refreshIcon"];
      function Ra(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 4),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(
                2,
                1,
                "swaps" === t.mode ? "common.refreshTrade" : "Update orders"
              )
            );
        }
      }
      let Da = (() => {
        class n {
          constructor(t, i) {
            (this.destroy$ = t),
              (this.isMobile = i),
              (this.onRefresh = new e.EventEmitter());
          }
          ngOnInit() {
            this.isRotating$
              .pipe(
                (0, an.G)(),
                (0, Ia.z)(([t, i]) => {
                  const s = t && !1 === i;
                  return i && !1 === t
                    ? (this.refreshIconElement.nativeElement.classList.add(
                        "refresh-button__icon_refreshing"
                      ),
                      Ea.E)
                    : (0, _i.R)(
                        this.refreshIconElement.nativeElement,
                        "animationiteration"
                      ).pipe(
                        (0, $t.q)(1),
                        (0, fe.b)(() => {
                          s &&
                            this.refreshIconElement.nativeElement.classList.remove(
                              "refresh-button__icon_refreshing"
                            );
                        })
                      );
                }),
                (0, P.R)(this.destroy$)
              )
              .subscribe();
          }
          toggleClick() {
            this.onRefresh.emit();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(w.a3, 2),
              e.ɵɵdirectiveInject(Te.fL)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-refresh-button"]],
            viewQuery: function (i, r) {
              if ((1 & i && e.ɵɵviewQuery(Na, 7), 2 & i)) {
                let s;
                e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                  (r.refreshIconElement = s.first);
              }
            },
            inputs: {
              isRotating$: "isRotating$",
              isRotating: "isRotating",
              mode: "mode",
            },
            outputs: { onRefresh: "onRefresh" },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 5,
            vars: 1,
            consts: [
              [
                "tuiHintMode",
                "onDark",
                1,
                "refresh-button",
                3,
                "tuiHint",
                "click",
              ],
              [
                "inlineSVG",
                "assets/images/icons/reload.svg",
                1,
                "refresh-button__icon",
              ],
              ["refreshIcon", ""],
              ["refreshIconTooltip", ""],
              [1, "refresh-icon-tooltip"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "div", 0),
                  e.ɵɵlistener("click", function () {
                    return r.toggleClick();
                  }),
                  e.ɵɵelement(1, "div", 1, 2),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(
                    3,
                    Ra,
                    3,
                    3,
                    "ng-template",
                    null,
                    3,
                    e.ɵɵtemplateRefExtractor
                  )),
                2 & i)
              ) {
                const s = e.ɵɵreference(4);
                e.ɵɵproperty("tuiHint", r.isMobile ? "" : s);
              }
            },
            dependencies: [G.d$, H.D, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}body.hide-unused-ui   [_nghost-%COMP%]{display:flex;align-items:center}@media (max-width: 651px){body.hide-unused-ui   [_nghost-%COMP%]{position:initial!important}}.refresh-button[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center;justify-content:center;width:30px;height:30px;cursor:pointer}.refresh-button__icon[_ngcontent-%COMP%]{display:flex;align-items:center;width:16px;height:16px}.refresh-button__icon[_ngcontent-%COMP%]     svg path{fill:var(--secondary-text)}.refresh-button__icon_refreshing[_ngcontent-%COMP%]{animation:.9s linear .1s infinite _ngcontent-%COMP%_refreshAnimation}.refresh-icon-tooltip[_ngcontent-%COMP%]{font-size:15px}@keyframes _ngcontent-%COMP%_refreshAnimation{to{transform:rotate(-360deg)}}@keyframes _ngcontent-%COMP%_timerAnimation{to{stroke-dashoffset:0}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var vt = p(17445),
        gn = p(94086),
        rt = p(11610),
        $e = p(78224),
        hn = p(90073);
      class Ke {
        static getCrossChainSwapParams(a) {
          return {
            fromAddress: a.from.address,
            fromSymbol: a.from.symbol,
            fromAmount: a.from.tokenAmount,
            fromPrice: a.from.price.toNumber(),
            fromDecimals: a.from.decimals,
            toAddress: a.to.address,
            toSymbol: a.to.symbol,
            toAmount: a.to.tokenAmount,
            toPrice: a.to.price.toNumber(),
            toDecimals: a.to.decimals,
            fromBlockchain: a.from.blockchain,
            toBlockchain: a.to.blockchain,
            type: a.type,
          };
        }
        static getItSwapParams(a) {
          return a instanceof o.OnChainTrade
            ? {
                fromAddress: a.from.address,
                fromSymbol: a.from.symbol,
                fromAmount: a.from.tokenAmount,
                fromPrice: a.from.price.toNumber(),
                fromDecimals: a.from.decimals,
                toAddress: a.to.address,
                toSymbol: a.to.symbol,
                toAmount: a.to.tokenAmount,
                toPrice: a.to.price.toNumber(),
                toDecimals: a.to.decimals,
                blockchain: a.from.blockchain,
                type: a.type,
              }
            : {
                fromAddress: a.from.token.address,
                fromSymbol: a.from.token.symbol,
                fromAmount: a.from.amount,
                fromPrice: a.from.token.price,
                fromDecimals: a.from.token.decimals,
                toAddress: a.to.token.address,
                toSymbol: a.to.token.symbol,
                toAmount: a.to.amount,
                toPrice: a.to.token.price,
                toDecimals: a.to.token.decimals,
                blockchain: a.blockchain,
                type: o.ON_CHAIN_TRADE_TYPE.WRAPPED,
              };
        }
      }
      const Ba = {
          [o.ON_CHAIN_TRADE_TYPE.ACRYPTOS]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ALDRIN_EXCHANGE]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ANNEX]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.APE_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ARTH_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.AURORA_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.BABY_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.BALANCER]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.BI_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.CREMA_FINANCE]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.CROPPER_FINANCE]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.CROW_FI]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.CRO_DEX]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.CURVE]: "Curve",
          [o.ON_CHAIN_TRADE_TYPE.DEFI_PLAZA]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.DEFI_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.DFYN]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.DYSTOPIA]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.JET_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.JUPITER]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.KYBER_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.LUA_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.MAVERICK]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.MDEX]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.MESH_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.MM_FINANCE]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.MOJITO_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ONE_MOON]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ONE_SOL]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ORCA_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.OSMOSIS_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.POLYDEX]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SABER_STABLE_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SAROS_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SERUM]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SHIBA_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SMOOTHY]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SPL_TOKEN_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.VOLTAGE_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.VVS_FINANCE]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.WAULT_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.WOO_FI]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ZIP_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.ALGEBRA]: "algebra",
          [o.ON_CHAIN_TRADE_TYPE.APE_SWAP]: "apeswap",
          [o.ON_CHAIN_TRADE_TYPE.JOE]: "joe",
          [o.ON_CHAIN_TRADE_TYPE.ONE_INCH]: "oneinch",
          [o.ON_CHAIN_TRADE_TYPE.PANCAKE_SWAP]: "pancakeswap",
          [o.ON_CHAIN_TRADE_TYPE.PANGOLIN]: "pangolin",
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP]: "quickswap",
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP_V3]: "quickswap3",
          [o.ON_CHAIN_TRADE_TYPE.RAYDIUM]: "raydium",
          [o.ON_CHAIN_TRADE_TYPE.SOLAR_BEAM]: "solarbeam",
          [o.ON_CHAIN_TRADE_TYPE.SOUL_SWAP]: "soulswap",
          [o.ON_CHAIN_TRADE_TYPE.SPIRIT_SWAP]: "spiritswap",
          [o.ON_CHAIN_TRADE_TYPE.SPOOKY_SWAP]: "spookyswap",
          [o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP]: "sushiswap",
          [o.ON_CHAIN_TRADE_TYPE.TRISOLARIS]: "trisolaris",
          [o.ON_CHAIN_TRADE_TYPE.UNISWAP_V2]: "uniswap",
          [o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3]: "uniswap3",
          [o.ON_CHAIN_TRADE_TYPE.VERSE]: "verse",
          [o.ON_CHAIN_TRADE_TYPE.VIPER_SWAP]: "viper",
          [o.ON_CHAIN_TRADE_TYPE.WANNA_SWAP]: "wannaswap",
          [o.ON_CHAIN_TRADE_TYPE.WRAPPED]: "wrapped",
          [o.ON_CHAIN_TRADE_TYPE.ZAPPY]: "zappy",
          [o.ON_CHAIN_TRADE_TYPE.ZRX]: "zerox",
          [o.ON_CHAIN_TRADE_TYPE.OOLONG_SWAP]: "oolong",
          [o.ON_CHAIN_TRADE_TYPE.JUPITER_SWAP]: "jupiter",
          [o.ON_CHAIN_TRADE_TYPE.PHOTON_SWAP]: "photon",
          [o.ON_CHAIN_TRADE_TYPE.OMNIDEX]: "omnidex",
          [o.ON_CHAIN_TRADE_TYPE.YUZU_SWAP]: "yuzuswap",
          [o.ON_CHAIN_TRADE_TYPE.NET_SWAP]: "netswap",
          [o.ON_CHAIN_TRADE_TYPE.ELK]: "elk",
          [o.ON_CHAIN_TRADE_TYPE.SURFDEX]: "surfdex",
          [o.ON_CHAIN_TRADE_TYPE.TRADER]: "defikingdoms",
          [o.ON_CHAIN_TRADE_TYPE.CLAIM_SWAP]: "claimswap",
          [o.ON_CHAIN_TRADE_TYPE.WAGYU_SWAP]: "wagyuswap",
          [o.ON_CHAIN_TRADE_TYPE.ASTRO_SWAP]: "astroswap",
          [o.ON_CHAIN_TRADE_TYPE.PEGASYS]: "pegasys",
          [o.ON_CHAIN_TRADE_TYPE.CRO_SWAP]: "croswap",
          [o.ON_CHAIN_TRADE_TYPE.MUTE_SWAP]: "muteswap",
          [o.ON_CHAIN_TRADE_TYPE.SYMBIOSIS_SWAP]: "unknown",
          [o.ON_CHAIN_TRADE_TYPE.SYNC_SWAP]: "syncswap",
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V1]: "pulsex_v1",
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V2]: "pulsex_v2",
          [o.ON_CHAIN_TRADE_TYPE.CRONA_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.BEAM_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.HONEY_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.DODO]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.J_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.REF_FINANCE]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.PARA_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.STELLA_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.UBE_SWAP]: "lifi",
          [o.ON_CHAIN_TRADE_TYPE.REN_BTC]: "renbtc",
          [o.ON_CHAIN_TRADE_TYPE.BRIDGERS]: "bridgers",
        },
        ui = "ethLike";
      let Ha = (() => {
        class n {
          constructor(t, i, r) {
            (this.httpService = t),
              (this.walletConnectorService = i),
              (this.authService = r);
          }
          notifyInstantTradesBot(t) {
            const {
                fromAmount: i,
                toAmount: r,
                fromSymbol: s,
                toSymbol: c,
                fromPrice: l,
                blockchain: d,
                type: _,
              } = Ke.getItSwapParams(t.trade),
              { txHash: g, walletAddress: C } = t,
              b = {
                fromAmount: i.toNumber(),
                toAmount: r.toNumber(),
                fromSymbol: s,
                toSymbol: c,
                price: l,
                txHash: g,
                walletAddress: C,
                blockchain: d,
                provider: _,
              };
            return this.httpService.post("bot/instant_trade", b).toPromise();
          }
          createTrade(t, i, r, s, c) {
            const {
                blockchain: l,
                fromAmount: d,
                fromAddress: _,
                fromDecimals: g,
                toAmount: C,
                toDecimals: b,
                toAddress: k,
              } = Ke.getItSwapParams(r),
              y = {
                blockchain: l,
                fromAddress: _,
                fromAmount: o.Web3Pure.toWei(d, g),
                toAddress: k,
                toAmount: o.Web3Pure.toWei(C, b),
              };
            let X = Ba[i];
            r instanceof o.LifiTrade && (X = "lifi");
            const te = {
                network: rt.d[y.blockchain],
                provider: X,
                from_token: y.fromAddress,
                to_token: y.toAddress,
                from_amount: y.fromAmount,
                to_amount: y.toAmount,
                user: this.authService.userAddress,
                fee: s,
                promocode: c,
                hash: t,
              },
              oe = ((n) => `instant_trades/${n.toLowerCase()}`)(ui);
            return this.httpService.post(oe, te).pipe((0, gn.g)(1e3));
          }
          patchTrade(t, i) {
            const r = {
                success: i,
                hash: t,
                user: this.authService.userAddress,
              },
              s = ((n) => `instant_trades/${n.toLowerCase()}`)(ui);
            return this.httpService.patch(s, r);
          }
          saveNotWhitelistedProvider(t, i, r) {
            return this.httpService.post("info/new_provider", {
              network: rt.d[i],
              title: r,
              address:
                t.providerRouter +
                (t.providerGateway ? `_${t.providerGateway}` : ""),
              cause: t.cause,
            });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(hn.O),
              e.ɵɵinject($e.j),
              e.ɵɵinject(U.e)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          }));
        }
        return n;
      })();
      const La = [
          {
            constant: !0,
            inputs: [],
            name: "name",
            outputs: [{ name: "", type: "string" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          {
            constant: !1,
            inputs: [
              { name: "guy", type: "address" },
              { name: "wad", type: "uint256" },
            ],
            name: "approve",
            outputs: [{ name: "", type: "bool" }],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            constant: !0,
            inputs: [],
            name: "totalSupply",
            outputs: [{ name: "", type: "uint256" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          {
            constant: !1,
            inputs: [
              { name: "src", type: "address" },
              { name: "dst", type: "address" },
              { name: "wad", type: "uint256" },
            ],
            name: "transferFrom",
            outputs: [{ name: "", type: "bool" }],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            constant: !1,
            inputs: [{ name: "wad", type: "uint256" }],
            name: "withdraw",
            outputs: [],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            constant: !0,
            inputs: [],
            name: "decimals",
            outputs: [{ name: "", type: "uint8" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          {
            constant: !0,
            inputs: [{ name: "", type: "address" }],
            name: "balanceOf",
            outputs: [{ name: "", type: "uint256" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          {
            constant: !0,
            inputs: [],
            name: "symbol",
            outputs: [{ name: "", type: "string" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          {
            constant: !1,
            inputs: [
              { name: "dst", type: "address" },
              { name: "wad", type: "uint256" },
            ],
            name: "transfer",
            outputs: [{ name: "", type: "bool" }],
            payable: !1,
            stateMutability: "nonpayable",
            type: "function",
          },
          {
            constant: !1,
            inputs: [],
            name: "deposit",
            outputs: [],
            payable: !0,
            stateMutability: "payable",
            type: "function",
          },
          {
            constant: !0,
            inputs: [
              { name: "", type: "address" },
              { name: "", type: "address" },
            ],
            name: "allowance",
            outputs: [{ name: "", type: "uint256" }],
            payable: !1,
            stateMutability: "view",
            type: "function",
          },
          { payable: !0, stateMutability: "payable", type: "fallback" },
          {
            anonymous: !1,
            inputs: [
              { indexed: !0, name: "src", type: "address" },
              { indexed: !0, name: "guy", type: "address" },
              { indexed: !1, name: "wad", type: "uint256" },
            ],
            name: "Approval",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              { indexed: !0, name: "src", type: "address" },
              { indexed: !0, name: "dst", type: "address" },
              { indexed: !1, name: "wad", type: "uint256" },
            ],
            name: "Transfer",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              { indexed: !0, name: "dst", type: "address" },
              { indexed: !1, name: "wad", type: "uint256" },
            ],
            name: "Deposit",
            type: "event",
          },
          {
            anonymous: !1,
            inputs: [
              { indexed: !0, name: "src", type: "address" },
              { indexed: !1, name: "wad", type: "uint256" },
            ],
            name: "Withdrawal",
            type: "event",
          },
        ],
        $a = {
          [o.BLOCKCHAIN_NAME.ETHEREUM]:
            "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
          [o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN]:
            "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
          [o.BLOCKCHAIN_NAME.POLYGON]:
            "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
          [o.BLOCKCHAIN_NAME.HARMONY]:
            "0xcf664087a5bb0237a0bad6742852ec6c8d69a27a",
          [o.BLOCKCHAIN_NAME.AVALANCHE]:
            "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
          [o.BLOCKCHAIN_NAME.MOONRIVER]:
            "0x98878B06940aE243284CA214f92Bb71a2b032B8A",
          [o.BLOCKCHAIN_NAME.FANTOM]:
            "0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",
          [o.BLOCKCHAIN_NAME.ARBITRUM]:
            "0x82af49447d8a07e3bd95bd0d56f35241523fbab1",
          [o.BLOCKCHAIN_NAME.AURORA]:
            "0xC9BdeEd33CD01541e1eeD10f90519d2C06Fe3feB",
          [o.BLOCKCHAIN_NAME.TELOS]:
            "0xD102cE6A4dB07D247fcc28F366A623Df0938CA9E",
          [o.BLOCKCHAIN_NAME.OPTIMISM]:
            "0x4200000000000000000000000000000000000006",
          [o.BLOCKCHAIN_NAME.OKE_X_CHAIN]:
            "0x8f8526dbfd6e38e3d8307702ca8469bae6c56c15",
          [o.BLOCKCHAIN_NAME.GNOSIS]:
            "0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",
          [o.BLOCKCHAIN_NAME.FUSE]:
            "0x0be9e53fd7edac9f859882afdda116645287c629",
          [o.BLOCKCHAIN_NAME.MOONBEAM]:
            "0xacc15dc74880c9944775448304b263d191c6077f",
          [o.BLOCKCHAIN_NAME.ETHEREUM_POW]:
            "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
          [o.BLOCKCHAIN_NAME.KAVA]:
            "0xc86c7C0eFbd6A49B35E8714C5f59D99De09A225b",
        };
      var fn = p(98601);
      let Va = (() => {
        class n {
          constructor(t, i) {
            (this.walletConnectorService = t),
              (this.authService = i),
              (this.abi = La),
              (this.contractAddress = $a);
          }
          isEthAndWethSwap(t, i, r) {
            const s = this.contractAddress[t];
            return (
              (i === mn.K8 && (0, q.IL)(r, s)) ||
              (r === mn.K8 && (0, q.IL)(i, s))
            );
          }
          createTrade(t, i) {
            var r = this;
            return (0, O.Z)(function* () {
              const { blockchain: s } = t,
                c = t.from.token,
                l = t.from.amount;
              yield o.Injector.web3PrivateService
                .getWeb3Private(fn.CHAIN_TYPE.EVM)
                .checkBlockchainCorrect(s),
                yield o.Injector.web3PublicService
                  .getWeb3Public(s)
                  .checkBalance(c, l, r.authService.userAddress);
              const _ = o.Web3Pure.toWei(l);
              return (yield (
                o.EvmWeb3Pure.isNativeAddress(c.address)
                  ? r.swapEthToWeth
                  : r.swapWethToEth
              ).bind(r)(s, _, i)).transactionHash;
            })();
          }
          swapEthToWeth(t, i, r) {
            return o.Injector.web3PrivateService
              .getWeb3Private(fn.CHAIN_TYPE.EVM)
              .executeContractMethod(
                this.contractAddress[t],
                this.abi,
                "deposit",
                [],
                { value: i, onTransactionHash: r.onConfirm }
              );
          }
          swapWethToEth(t, i, r) {
            return o.Injector.web3PrivateService
              .getWeb3Private(fn.CHAIN_TYPE.EVM)
              .executeContractMethod(
                this.contractAddress[t],
                this.abi,
                "withdraw",
                [i],
                { onTransactionHash: r.onConfirm }
              );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵinject($e.j), e.ɵɵinject(U.e));
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          }));
        }
        return n;
      })();
      var hi = p(88404),
        fi = p(50501),
        vi = p(1024);
      let Ci = (() => {
        class n {
          constructor(t) {
            (this.successTxModalType = t),
              (this.showSuccessTrxNotification = () => {
                this.notificationsService.show(new L.Al(vi.U), {
                  status: "success",
                  autoClose: 15e3,
                  data: {
                    type: this.successTxModalType,
                    withRecentTrades: "on-chain" !== this.successTxModalType,
                  },
                });
              }),
              (this.showTrxInProgressTrxNotification = () =>
                this.notificationsService.showWithoutSubscribe(new L.Al(hi.d), {
                  status: "info",
                  autoClose: !1,
                })),
              (this.notificationsService = (0, e.inject)(dt.T)),
              (this.successTxModalService = (0, e.inject)(fi.c));
          }
          notifyTradeInProgress(t, i, r = o.CROSS_CHAIN_TRADE_TYPE.CELER) {
            return this.successTxModalService.open(
              t,
              i,
              this.successTxModalType,
              r,
              this.showTrxInProgressTrxNotification
            );
          }
          static #e = (this.ɵfac = function (i) {
            e.ɵɵinvalidFactory();
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      const vn = {
        ...Object.values(o.BLOCKCHAIN_NAME).reduce(
          (n, a) => ({ ...n, [a]: !1 }),
          {}
        ),
        [o.BLOCKCHAIN_NAME.AVALANCHE]: !0,
        [o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN]: !0,
        [o.BLOCKCHAIN_NAME.FANTOM]: !0,
        [o.BLOCKCHAIN_NAME.ETHEREUM]: !0,
        [o.BLOCKCHAIN_NAME.POLYGON]: !0,
        [o.BLOCKCHAIN_NAME.TELOS]: !0,
        [o.BLOCKCHAIN_NAME.ETHEREUM_POW]: !0,
        [o.BLOCKCHAIN_NAME.ARBITRUM]: !0,
      };
      var xi = p(48287),
        bi = p(37251),
        yi = p(21713);
      function ja(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 1),
            e.ɵɵpipe(1, "scannerLink"),
            e.ɵɵtext(2, "See details."),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "safetyLink",
            e.ɵɵpipeBind3(
              1,
              1,
              t.txHash,
              t.blockchainName,
              t.ADDRESS_TYPE.TRANSACTION
            )
          );
        }
      }
      let za = (() => {
        class n {
          constructor(t) {
            (this.context = t),
              (this.ADDRESS_TYPE = bi.Z),
              (this.blockchainName = t.data.blockchainName),
              (this.txHash = t.data.txHash);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(L.yf));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-transaction-failed-error"]],
            decls: 4,
            vars: 1,
            consts: [
              [3, "safetyLink", 4, "ngIf"],
              [3, "safetyLink"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementContainerStart(0),
                e.ɵɵelementStart(1, "span"),
                e.ɵɵtext(2, "Transaction failed. "),
                e.ɵɵtemplate(3, ja, 3, 5, "a", 0),
                e.ɵɵelementEnd(),
                e.ɵɵelementContainerEnd()),
                2 & i && (e.ɵɵadvance(3), e.ɵɵproperty("ngIf", r.txHash));
            },
            dependencies: [m.O5, dn.x, yi.m],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      class Cn extends z.q {
        constructor(a, t) {
          super(za, { txHash: t, blockchainName: a }),
            Object.setPrototypeOf(this, Cn.prototype);
        }
      }
      var xn = p(69141);
      class bn extends xn.V {
        constructor(a) {
          super(`${a} blockchain is currently unavailable.`),
            Object.setPrototypeOf(this, bn.prototype);
        }
      }
      const Ct = bn;
      var Vt = p(31496);
      class Xe extends Ci {
        constructor(a, t, i, r, s, c, l, d, _, g, C, b, k, y) {
          super("on-chain"),
            (this.instantTradesApiService = a),
            (this.ethWethSwapProvider = t),
            (this.iframeService = i),
            (this.gtmService = r),
            (this.swapFormService = s),
            (this.settingsService = c),
            (this.sdkService = l),
            (this.authService = d),
            (this.gasService = _),
            (this.targetNetworkAddressService = g),
            (this.platformConfigurationService = C),
            (this.recentTradesStoreService = b),
            (this.queryParamsService = k),
            (this.tokensService = y);
        }
        static #e = (this.unsupportedItNetworks = [
          o.BLOCKCHAIN_NAME.BITGERT,
          o.BLOCKCHAIN_NAME.OASIS,
          o.BLOCKCHAIN_NAME.METIS,
        ]);
        static isSupportedBlockchain(a) {
          return !Xe.unsupportedItNetworks.includes(a);
        }
        get receiverAddress() {
          return this.settingsService.instantTradeValue.showReceiverAddress
            ? this.targetNetworkAddressService.address
            : null;
        }
        get inputValue() {
          const a = this.swapFormService.inputValue;
          if (
            a.fromAssetType &&
            !o.BlockchainsInfo.isBlockchainName(a.fromAssetType)
          )
            throw new z.q("Cannot use instant trades");
          return {
            ...a,
            fromBlockchain: a.fromAssetType,
            fromToken: a.fromAsset,
          };
        }
        needApprove(a) {
          return (0, O.Z)(function* () {
            return a.needApprove();
          })();
        }
        approve(a) {
          var t = this;
          return (0, O.Z)(function* () {
            if (
              !t.platformConfigurationService.isAvailableBlockchain(
                a.from.blockchain
              )
            )
              throw new Ct(ge.h[a.from.blockchain]);
            if (
              !t.platformConfigurationService.isAvailableBlockchain(
                a.to.blockchain
              )
            )
              throw new Ct(ge.h[a.to.blockchain]);
            let i;
            t.checkDeviceAndShowNotification();
            const { blockchain: r } = Ke.getItSwapParams(a),
              c = {
                onTransactionHash: () => {
                  i = t.notificationsService.showApproveInProgress();
                },
                ...(vn[r] && {
                  gasPrice: o.Web3Pure.toWei(
                    yield t.gasService.getGasPriceInEthUnits(r)
                  ),
                }),
              };
            try {
              yield a.approve(c),
                t.notificationsService.showApproveSuccessful();
            } catch (l) {
              if (l instanceof o.UnnecessaryApproveError) return;
              throw l;
            } finally {
              i?.unsubscribe();
            }
          })();
        }
        getEthWethTrade() {
          const {
            fromAmount: a,
            fromToken: t,
            toToken: i,
            fromBlockchain: r,
          } = this.inputValue;
          return t &&
            i &&
            this.ethWethSwapProvider.isEthAndWethSwap(r, t.address, i.address)
            ? {
                blockchain: r,
                from: { token: t, amount: a },
                to: { token: i, amount: a },
              }
            : null;
        }
        calculateTrades(a, t, i) {
          var r = this;
          return (0, O.Z)(function* () {
            const s = r.settingsService.instantTradeValue,
              c = s.slippageTolerance / 100,
              l = s.disableMultihops,
              d = s.deadline;
            console.log("INSTANT TRADE SERVICE");
            const _ = yield r.tokensService.getAndUpdateTokenPrice(a, !0),
              g = yield r.tokensService.getAndUpdateTokenPrice(i, !0),
              C = o.BlockchainsInfo.getChainType(a.blockchain),
              b = yield o.Web3Pure[C].isAddressCorrect(
                r.authService.userAddress
              ),
              k = vn[a.blockchain] && r.authService.userAddress && b,
              y = yield o.Token.createToken(a),
              te =
                (yield r.sdkService.deflationTokenManager.isDeflationToken(y),
                yield o.Token.createToken(i)),
              he =
                (yield r.sdkService.deflationTokenManager.isDeflationToken(te),
                new o.PriceToken({ ...y, price: new M.Z(_) })),
              re = new o.PriceToken({ ...te, price: new M.Z(g) });
            return r.sdkService.instantTrade.calculateTrade(he, t, re, {
              timeout: 1e4,
              gasCalculation: k ? "calculate" : "disabled",
              zrxAffiliateAddress: xi.G.zrxAffiliateAddress,
              slippageTolerance: c,
              disableMultihops: l,
              deadlineMinutes: d,
              useProxy: !0,
            });
          })();
        }
        createTrade(a, t, i) {
          var r = this;
          return (0, O.Z)(function* () {
            const { fromBlockchain: s } = r.inputValue;
            r.checkDeviceAndShowNotification();
            const {
              fromSymbol: c,
              toSymbol: l,
              fromAmount: d,
              fromPrice: _,
              blockchain: g,
              fromAddress: C,
              fromDecimals: b,
            } = Ke.getItSwapParams(t);
            if (!r.platformConfigurationService.isAvailableBlockchain(s))
              throw new Ct(ge.h[s]);
            let y, X;
            yield o.Injector.web3PublicService
              .getWeb3Public(g)
              .checkBalance(
                { address: C, decimals: b, symbol: c },
                d,
                r.authService.userAddress
              );
            const oe = r.receiverAddress,
              he = {
                onConfirm: (re) => {
                  (y = re), i?.();
                  const ke = r.queryParamsService.queryParams.onramperTxId;
                  ke &&
                    (r.recentTradesStoreService.updateOnramperTargetTrade(
                      ke,
                      re
                    ),
                    r.queryParamsService.patchQueryParams({
                      onramperTxId: null,
                    })),
                    r.notifyGtmAfterSignTx(y, c, l, d.multipliedBy(_)),
                    (X = r.notifyTradeInProgress(re, g)),
                    r.postTrade(re, a, t);
                },
                ...(r.queryParamsService.testMode && { testMode: !0 }),
                ...(vn[g] && {
                  gasPrice: o.Web3Pure.toWei(
                    yield r.gasService.getGasPriceInEthUnits(g)
                  ),
                }),
                ...(oe && { receiverAddress: oe }),
              };
            try {
              const re = r.authService.userAddress;
              if (
                (t instanceof o.OnChainTrade
                  ? yield t.swap(he)
                  : yield r.ethWethSwapProvider.createTrade(t, he),
                t instanceof o.OnChainTrade &&
                  t.from.blockchain === o.BLOCKCHAIN_NAME.TRON)
              ) {
                const ke = yield (0, nt.z)(
                  (0, vt.F)(7e3).pipe(
                    (0, N.w)(() =>
                      r.sdkService.onChainStatusManager.getBridgersSwapStatus(y)
                    ),
                    (0, Z.h)(
                      (et) =>
                        et.status === o.TxStatus.SUCCESS ||
                        et.status === o.TxStatus.FAIL
                    )
                  )
                );
                if ((X.unsubscribe(), ke.status !== o.TxStatus.SUCCESS))
                  throw new Cn(o.BLOCKCHAIN_NAME.TRON, ke.hash);
                r.showSuccessTrxNotification();
              } else X.unsubscribe(), r.showSuccessTrxNotification();
              yield r.instantTradesApiService
                .notifyInstantTradesBot({
                  provider: a,
                  blockchain: g,
                  walletAddress: re,
                  trade: t,
                  txHash: y,
                })
                .catch((ke) => {}),
                r.updateTrade(y, !0);
            } catch (re) {
              throw (
                (X?.unsubscribe(),
                re instanceof o.NotWhitelistedProviderError &&
                  r.saveNotWhitelistedProvider(re, s, t?.type),
                y && !r.isNotMinedError(re) && r.updateTrade(y, !1),
                re)
              );
            }
          })();
        }
        postTrade(a, t, i) {
          var r = this;
          return (0, O.Z)(function* () {
            const { blockchain: l } = Ke.getItSwapParams(i),
              d = l === o.BLOCKCHAIN_NAME.BOBA ? 3e3 : 0;
            yield (0, Fe.H)(d)
              .pipe(
                (0, N.w)(() =>
                  r.instantTradesApiService.createTrade(a, t, i, void 0, void 0)
                )
              )
              .toPromise();
          })();
        }
        isNotMinedError(a) {
          return (
            Boolean(a?.message?.includes) &&
            a.message.includes(
              "Transaction was not mined within 50 blocks, please make sure your transaction was properly sent. Be aware that it might still be mined!"
            )
          );
        }
        updateTrade(a, t) {
          return this.instantTradesApiService
            .patchTrade(a, t)
            .subscribe({
              error: (i) => console.debug("IT patch request is failed", i),
            });
        }
        notifyGtmAfterSignTx(a, t, i, r) {
          this.gtmService.fireTxSignedEvent(
            S.V.INSTANT_TRADE,
            a,
            t,
            i,
            new M.Z(0),
            r
          );
        }
        checkDeviceAndShowNotification() {
          this.iframeService.isIframe &&
            "mobile" === this.iframeService.device &&
            this.notificationsService.showOpenMobileWallet();
        }
        saveNotWhitelistedProvider(a, t, i) {
          this.instantTradesApiService
            .saveNotWhitelistedProvider(a, t, i)
            .subscribe();
        }
        static #t = (this.ɵfac = function (t) {
          return new (t || Xe)(
            e.ɵɵinject(Ha),
            e.ɵɵinject(Va),
            e.ɵɵinject(Q.b),
            e.ɵɵinject(Ue.k),
            e.ɵɵinject(E.q),
            e.ɵɵinject(ve),
            e.ɵɵinject(Ge.w),
            e.ɵɵinject(U.e),
            e.ɵɵinject(It.Q),
            e.ɵɵinject(Oe),
            e.ɵɵinject(Et.L),
            e.ɵɵinject(Vt.o),
            e.ɵɵinject(Ae.E),
            e.ɵɵinject(Ee.H)
          );
        });
        static #n = (this.ɵprov = e.ɵɵdefineInjectable({
          token: Xe,
          factory: Xe.ɵfac,
        }));
      }
      var le = (() => {
        return (
          ((n = le || (le = {})).CALCULATION = "CALCULATION"),
          (n.APPROVAL = "APPROVAL"),
          (n.TX_IN_PROGRESS = "TX_IN_PROGRESS"),
          (n.COMPLETED = "COMPLETED"),
          (n.ERROR = "ERROR"),
          le
        );
        var n;
      })();
      const Ya = {
          [o.ON_CHAIN_TRADE_TYPE.ACRYPTOS]: "Acryptos",
          [o.ON_CHAIN_TRADE_TYPE.ALDRIN_EXCHANGE]: "AldrinExchange",
          [o.ON_CHAIN_TRADE_TYPE.ALGEBRA]: "Algebra",
          [o.ON_CHAIN_TRADE_TYPE.ANNEX]: "Annex",
          [o.ON_CHAIN_TRADE_TYPE.APE_SWAP]: "ApeSwap",
          [o.ON_CHAIN_TRADE_TYPE.ARTH_SWAP]: "ArthSwap",
          [o.ON_CHAIN_TRADE_TYPE.ASTRO_SWAP]: "AstroSwap",
          [o.ON_CHAIN_TRADE_TYPE.AURORA_SWAP]: "AuroraSwap",
          [o.ON_CHAIN_TRADE_TYPE.BABY_SWAP]: "BabySwap",
          [o.ON_CHAIN_TRADE_TYPE.BALANCER]: "Balancer",
          [o.ON_CHAIN_TRADE_TYPE.BEAM_SWAP]: "BeamSwap",
          [o.ON_CHAIN_TRADE_TYPE.BI_SWAP]: "BiSwap",
          [o.ON_CHAIN_TRADE_TYPE.BRIDGERS]: "Bridgers",
          [o.ON_CHAIN_TRADE_TYPE.CLAIM_SWAP]: "ClaimSwap",
          [o.ON_CHAIN_TRADE_TYPE.CREMA_FINANCE]: "CremaFinance",
          [o.ON_CHAIN_TRADE_TYPE.CRO_SWAP]: "CroSwap",
          [o.ON_CHAIN_TRADE_TYPE.CRONA_SWAP]: "CronaSwap",
          [o.ON_CHAIN_TRADE_TYPE.CROPPER_FINANCE]: "CropperFinance",
          [o.ON_CHAIN_TRADE_TYPE.CROW_FI]: "CrowFi",
          [o.ON_CHAIN_TRADE_TYPE.CRO_DEX]: "CroDex",
          [o.ON_CHAIN_TRADE_TYPE.CURVE]: "Curve",
          [o.ON_CHAIN_TRADE_TYPE.ELK]: "Elk",
          [o.ON_CHAIN_TRADE_TYPE.DEFI_PLAZA]: "DefiPlaza",
          [o.ON_CHAIN_TRADE_TYPE.DEFI_SWAP]: "DefiSwap",
          [o.ON_CHAIN_TRADE_TYPE.DFYN]: "Dfyn",
          [o.ON_CHAIN_TRADE_TYPE.DODO]: "Dodo",
          [o.ON_CHAIN_TRADE_TYPE.DYSTOPIA]: "Dystopia",
          [o.ON_CHAIN_TRADE_TYPE.HONEY_SWAP]: "HoneySwap",
          [o.ON_CHAIN_TRADE_TYPE.JET_SWAP]: "JetSwap",
          [o.ON_CHAIN_TRADE_TYPE.JOE]: "Joe",
          [o.ON_CHAIN_TRADE_TYPE.JUPITER]: "Jupiter",
          [o.ON_CHAIN_TRADE_TYPE.JUPITER_SWAP]: "JupiterSwap",
          [o.ON_CHAIN_TRADE_TYPE.J_SWAP]: "JSwap",
          [o.ON_CHAIN_TRADE_TYPE.KYBER_SWAP]: "KyberSwap",
          [o.ON_CHAIN_TRADE_TYPE.LUA_SWAP]: "LuaSwap",
          [o.ON_CHAIN_TRADE_TYPE.MAVERICK]: "Maverick",
          [o.ON_CHAIN_TRADE_TYPE.MDEX]: "MDEX",
          [o.ON_CHAIN_TRADE_TYPE.MESH_SWAP]: "MeshSwap",
          [o.ON_CHAIN_TRADE_TYPE.MM_FINANCE]: "MMFinance",
          [o.ON_CHAIN_TRADE_TYPE.MOJITO_SWAP]: "MojitoSwap",
          [o.ON_CHAIN_TRADE_TYPE.MUTE_SWAP]: "Mute",
          [o.ON_CHAIN_TRADE_TYPE.NET_SWAP]: "NetSwap",
          [o.ON_CHAIN_TRADE_TYPE.OMNIDEX]: "Omnidex",
          [o.ON_CHAIN_TRADE_TYPE.ONE_INCH]: "1inch",
          [o.ON_CHAIN_TRADE_TYPE.ONE_MOON]: "OneMoon",
          [o.ON_CHAIN_TRADE_TYPE.ONE_SOL]: "1sol",
          [o.ON_CHAIN_TRADE_TYPE.OOLONG_SWAP]: "OolongSwap",
          [o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN]: "OpenOcean",
          [o.ON_CHAIN_TRADE_TYPE.ORCA_SWAP]: "OrcaSwap",
          [o.ON_CHAIN_TRADE_TYPE.OSMOSIS_SWAP]: "OsmosisSwap",
          [o.ON_CHAIN_TRADE_TYPE.PANCAKE_SWAP]: "PancakeSwap",
          [o.ON_CHAIN_TRADE_TYPE.PANGOLIN]: "Pangolin",
          [o.ON_CHAIN_TRADE_TYPE.PARA_SWAP]: "ParaSwap",
          [o.ON_CHAIN_TRADE_TYPE.PEGASYS]: "Pegasys",
          [o.ON_CHAIN_TRADE_TYPE.PHOTON_SWAP]: "PhotonSwap",
          [o.ON_CHAIN_TRADE_TYPE.POLYDEX]: "Polydex",
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP]: "QuickSwap",
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP_V3]: "QuickSwap v3",
          [o.ON_CHAIN_TRADE_TYPE.RAYDIUM]: "Raydium",
          [o.ON_CHAIN_TRADE_TYPE.REF_FINANCE]: "RefFinance",
          [o.ON_CHAIN_TRADE_TYPE.REN_BTC]: "renBTC",
          [o.ON_CHAIN_TRADE_TYPE.SABER_STABLE_SWAP]: "SaberStableSwap",
          [o.ON_CHAIN_TRADE_TYPE.SAROS_SWAP]: "SarosSwap",
          [o.ON_CHAIN_TRADE_TYPE.SERUM]: "Serum",
          [o.ON_CHAIN_TRADE_TYPE.SHIBA_SWAP]: "ShibaSwap",
          [o.ON_CHAIN_TRADE_TYPE.SMOOTHY]: "Smoothy",
          [o.ON_CHAIN_TRADE_TYPE.SOLAR_BEAM]: "SolarBeam",
          [o.ON_CHAIN_TRADE_TYPE.SPIRIT_SWAP]: "SpiritSwap",
          [o.ON_CHAIN_TRADE_TYPE.SPL_TOKEN_SWAP]: "SplTokenSwap",
          [o.ON_CHAIN_TRADE_TYPE.SPOOKY_SWAP]: "Spooky",
          [o.ON_CHAIN_TRADE_TYPE.STELLA_SWAP]: "StellaSwap",
          [o.ON_CHAIN_TRADE_TYPE.SURFDEX]: "Surfdex",
          [o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP]: "SushiSwap",
          [o.ON_CHAIN_TRADE_TYPE.SOUL_SWAP]: "SoulSwap",
          [o.ON_CHAIN_TRADE_TYPE.SYMBIOSIS_SWAP]: "Symbiosis DEX",
          [o.ON_CHAIN_TRADE_TYPE.SYNC_SWAP]: "Sync Swap",
          [o.ON_CHAIN_TRADE_TYPE.TRADER]: "TheTrader",
          [o.ON_CHAIN_TRADE_TYPE.TRISOLARIS]: "Trisolaris",
          [o.ON_CHAIN_TRADE_TYPE.UBE_SWAP]: "UbeSwap",
          [o.ON_CHAIN_TRADE_TYPE.UNISWAP_V2]: "Uniswap v2",
          [o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3]: "Uniswap v3",
          [o.ON_CHAIN_TRADE_TYPE.VERSE]: "Verse",
          [o.ON_CHAIN_TRADE_TYPE.VIPER_SWAP]: "ViperSwap",
          [o.ON_CHAIN_TRADE_TYPE.VOLTAGE_SWAP]: "VoltageSwap",
          [o.ON_CHAIN_TRADE_TYPE.VVS_FINANCE]: "VVSFinance",
          [o.ON_CHAIN_TRADE_TYPE.WAGYU_SWAP]: "WagyuSwap",
          [o.ON_CHAIN_TRADE_TYPE.WANNA_SWAP]: "WannaSwap",
          [o.ON_CHAIN_TRADE_TYPE.WAULT_SWAP]: "WaultSwap",
          [o.ON_CHAIN_TRADE_TYPE.WOO_FI]: "WooFi",
          [o.ON_CHAIN_TRADE_TYPE.WRAPPED]: "Wrapped",
          [o.ON_CHAIN_TRADE_TYPE.ZAPPY]: "Zappy",
          [o.ON_CHAIN_TRADE_TYPE.ZIP_SWAP]: "ZipSwap",
          [o.ON_CHAIN_TRADE_TYPE.ZRX]: "0x",
          [o.ON_CHAIN_TRADE_TYPE.YUZU_SWAP]: "YuzuSwap",
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V1]: "PulseX V1",
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V2]: "PulseX V2",
        },
        Ua = {
          trade: null,
          tradeStatus: le.CALCULATION,
          isSelected: !1,
          needApprove: !1,
        };
      function B(n) {
        return n.map((a) => ({ ...Ua, name: a, label: Ya[a] }));
      }
      const Si = {
        [o.BLOCKCHAIN_NAME.ETHEREUM]: B([
          o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.UNISWAP_V2,
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.PARA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.ZRX,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
          o.ON_CHAIN_TRADE_TYPE.VERSE,
        ]),
        [o.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN]: B([
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.PANCAKE_SWAP,
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.PARA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.ZRX,
        ]),
        [o.BLOCKCHAIN_NAME.POLYGON]: B([
          o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP,
          o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP_V3,
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.PARA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.HONEY_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ZRX,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.HARMONY]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.VIPER_SWAP,
        ]),
        [o.BLOCKCHAIN_NAME.AVALANCHE]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.PANGOLIN,
          o.ON_CHAIN_TRADE_TYPE.JOE,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.PARA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.ZRX,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.MOONRIVER]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.SOLAR_BEAM,
        ]),
        [o.BLOCKCHAIN_NAME.FANTOM]: B([
          o.ON_CHAIN_TRADE_TYPE.SPOOKY_SWAP,
          o.ON_CHAIN_TRADE_TYPE.SPIRIT_SWAP,
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.PARA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ZRX,
          o.ON_CHAIN_TRADE_TYPE.SOUL_SWAP,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.ARBITRUM]: B([
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.AURORA]: B([
          o.ON_CHAIN_TRADE_TYPE.TRISOLARIS,
          o.ON_CHAIN_TRADE_TYPE.WANNA_SWAP,
        ]),
        [o.BLOCKCHAIN_NAME.TELOS]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ZAPPY,
          o.ON_CHAIN_TRADE_TYPE.APE_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OMNIDEX,
        ]),
        [o.BLOCKCHAIN_NAME.OPTIMISM]: B([
          o.ON_CHAIN_TRADE_TYPE.ZRX,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
        ]),
        [o.BLOCKCHAIN_NAME.CRONOS]: B([
          o.ON_CHAIN_TRADE_TYPE.CRONA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.CRO_SWAP,
          o.ON_CHAIN_TRADE_TYPE.CRO_DEX,
        ]),
        [o.BLOCKCHAIN_NAME.OKE_X_CHAIN]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.J_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
        ]),
        [o.BLOCKCHAIN_NAME.GNOSIS]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
          o.ON_CHAIN_TRADE_TYPE.HONEY_SWAP,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.FUSE]: B([o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP]),
        [o.BLOCKCHAIN_NAME.MOONBEAM]: B([
          o.ON_CHAIN_TRADE_TYPE.STELLA_SWAP,
          o.ON_CHAIN_TRADE_TYPE.BEAM_SWAP,
        ]),
        [o.BLOCKCHAIN_NAME.CELO]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.UBE_SWAP,
          o.ON_CHAIN_TRADE_TYPE.CURVE,
        ]),
        [o.BLOCKCHAIN_NAME.BOBA]: B([
          o.ON_CHAIN_TRADE_TYPE.OOLONG_SWAP,
          o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN,
        ]),
        [o.BLOCKCHAIN_NAME.ETHEREUM_POW]: B([
          o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP,
          o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3,
          o.ON_CHAIN_TRADE_TYPE.UNISWAP_V2,
        ]),
        [o.BLOCKCHAIN_NAME.KAVA]: B([
          o.ON_CHAIN_TRADE_TYPE.JUPITER_SWAP,
          o.ON_CHAIN_TRADE_TYPE.PHOTON_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ELK,
          o.ON_CHAIN_TRADE_TYPE.SURFDEX,
        ]),
        [o.BLOCKCHAIN_NAME.TRON]: B([o.ON_CHAIN_TRADE_TYPE.BRIDGERS]),
        [o.BLOCKCHAIN_NAME.OASIS]: B([o.ON_CHAIN_TRADE_TYPE.YUZU_SWAP]),
        [o.BLOCKCHAIN_NAME.METIS]: B([o.ON_CHAIN_TRADE_TYPE.NET_SWAP]),
        [o.BLOCKCHAIN_NAME.KLAYTN]: B([o.ON_CHAIN_TRADE_TYPE.CLAIM_SWAP]),
        [o.BLOCKCHAIN_NAME.VELAS]: B([
          o.ON_CHAIN_TRADE_TYPE.WAGYU_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ASTRO_SWAP,
        ]),
        [o.BLOCKCHAIN_NAME.SYSCOIN]: B([o.ON_CHAIN_TRADE_TYPE.PEGASYS]),
        [o.BLOCKCHAIN_NAME.ASTAR_EVM]: B([o.ON_CHAIN_TRADE_TYPE.ARTH_SWAP]),
        [o.BLOCKCHAIN_NAME.ZK_SYNC]: B([
          o.ON_CHAIN_TRADE_TYPE.MUTE_SWAP,
          o.ON_CHAIN_TRADE_TYPE.SYNC_SWAP,
          o.ON_CHAIN_TRADE_TYPE.ONE_INCH,
        ]),
        [o.BLOCKCHAIN_NAME.PULSECHAIN]: B([
          o.ON_CHAIN_TRADE_TYPE.PULSEX_V1,
          o.ON_CHAIN_TRADE_TYPE.PULSEX_V2,
        ]),
      };
      var yn = p(4128),
        Ne = p(32076),
        h = (() => {
          return (
            ((n = h || (h = {}))[(n.DISABLED = 0)] = "DISABLED"),
            (n[(n.LOADING = 1)] = "LOADING"),
            (n[(n.READY_TO_APPROVE = 2)] = "READY_TO_APPROVE"),
            (n[(n.APPROVE_IN_PROGRESS = 3)] = "APPROVE_IN_PROGRESS"),
            (n[(n.READY_TO_SWAP = 4)] = "READY_TO_SWAP"),
            (n[(n.SWAP_IN_PROGRESS = 5)] = "SWAP_IN_PROGRESS"),
            (n[(n.OLD_TRADE_DATA = 6)] = "OLD_TRADE_DATA"),
            (n[(n.READY_TO_BUY_NATIVE = 7)] = "READY_TO_BUY_NATIVE"),
            (n[(n.BUY_NATIVE_IN_PROGRESS = 8)] = "BUY_NATIVE_IN_PROGRESS"),
            h
          );
          var n;
        })(),
        Pe = p(68675),
        Ve = p(78372),
        je = p(90988);
      class Sn extends z.q {
        constructor() {
          super("errors.noSelectedProvider"),
            Object.setPrototypeOf(this, Sn.prototype);
        }
      }
      const Ti = Sn;
      var Ze = p(63466);
      let Oi = (() => {
        class n {
          constructor(t) {
            this.context = t;
          }
          onConfirm() {
            this.context.completeWith(null);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(L.yf));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["polymorpheus-auto-slippage-warning-modal"]],
            decls: 11,
            vars: 6,
            consts: [
              [1, "modal"],
              [1, "modal__content"],
              [1, "modal__body"],
              [
                "src",
                "assets/images/bridge/warning-image.svg",
                "alt",
                "Success",
                1,
                "modal__warning-image",
              ],
              [1, "modal__footer"],
              [1, "modal__footer-text"],
              ["fullWidth", "", "appearance", "secondary", 3, "click"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "main", 2),
                e.ɵɵelement(3, "img", 3),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(4, "div", 4)(5, "div", 5),
                e.ɵɵtext(6),
                e.ɵɵpipe(7, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(8, "app-rubic-button", 6),
                e.ɵɵlistener("click", function () {
                  return r.onConfirm();
                }),
                e.ɵɵtext(9),
                e.ɵɵpipe(10, "translate"),
                e.ɵɵelementEnd()()()()),
                2 & i &&
                  (e.ɵɵadvance(6),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(7, 2, "modals.warningModal.autoSlippage"),
                    " "
                  ),
                  e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(10, 4, "common.OK"),
                    " "
                  ));
            },
            dependencies: [se.j, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.modal__content[_ngcontent-%COMP%]{padding:35px 20px 0;text-align:center}.modal__footer[_ngcontent-%COMP%]{margin-top:20px}.modal__footer-text[_ngcontent-%COMP%]{margin-bottom:18px}.modal__footer-link[_ngcontent-%COMP%]{display:inline-block;margin-bottom:18px;font-size:17px;cursor:pointer}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]{height:100vh;display:flex;align-items:center}html.iframe-horizontal[_nghost-%COMP%]   .modal__content[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__content[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:center;height:180px;padding-top:0}html.iframe-horizontal[_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]{margin-right:80px;height:100%;display:flex;align-items:center}html.iframe-horizontal[_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal__body[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{transform:scale(1.5)}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%]{text-align:left;font-size:18px;margin:0 0 20px}html.iframe-horizontal[_nghost-%COMP%]   .modal[_ngcontent-%COMP%]     app-rubic-button button, html.iframe-horizontal   [_nghost-%COMP%]   .modal[_ngcontent-%COMP%]     app-rubic-button button{width:150px;float:left}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Wa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1), e.ɵɵtextInterpolate(t);
        }
      }
      function Ga(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 8), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext(3);
          e.ɵɵproperty("tuiHint", t)("tuiHintShowDelay", 0)(
            "tuiHintHideDelay",
            0
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", t.slice(0, i.isIframe ? 7 : 10), "...");
        }
      }
      function Ka(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Wa, 2, 1, "ng-container", 6),
            e.ɵɵtemplate(2, Ga, 2, 4, "span", 7),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              (i.isIframe && t.length <= 10) || (!i.isIframe && t.length <= 15)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              (i.isIframe && t.length > 10) || t.length > 15
            );
        }
      }
      function Xa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 4),
            e.ɵɵtext(1),
            e.ɵɵtemplate(2, Ka, 3, 2, "ng-container", 5),
            e.ɵɵpipe(3, "withRound"),
            e.ɵɵpipe(4, "bigNumberFormat"),
            e.ɵɵtext(5),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngIf;
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" 1 ", t.from.symbol, " = "),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind2(
                3,
                3,
                e.ɵɵpipeBind1(4, 6, t.to.amount),
                "toClosestValue"
              )
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate1(" ", t.to.symbol, " ");
        }
      }
      function Za(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1), e.ɵɵtextInterpolate(t);
        }
      }
      function Qa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 8), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext(3);
          e.ɵɵproperty("tuiHint", t)("tuiHintShowDelay", 0)(
            "tuiHintHideDelay",
            0
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", t.slice(0, i.isIframe ? 7 : 10), "...");
        }
      }
      function Ja(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Za, 2, 1, "ng-container", 6),
            e.ɵɵtemplate(2, Qa, 2, 4, "span", 7),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              (i.isIframe && t.length <= 10) || (!i.isIframe && t.length <= 15)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              (i.isIframe && t.length > 10) || t.length > 15
            );
        }
      }
      function qa(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 4),
            e.ɵɵtemplate(1, Ja, 3, 2, "ng-container", 5),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵtext(4),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngIf;
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind2(
                2,
                3,
                e.ɵɵpipeBind1(3, 6, t.from.amount),
                "toClosestValue"
              )
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate2(" ", t.from.symbol, " = 1 ", t.to.symbol, " ");
        }
      }
      function es(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 1),
            e.ɵɵtemplate(1, Xa, 6, 8, "div", 2),
            e.ɵɵtemplate(2, qa, 5, 8, "div", 2),
            e.ɵɵelementStart(3, "div", 3),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onChangeDirection());
            }),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "from" === t.rateDirection),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "to" === t.rateDirection);
        }
      }
      let Tn = (() => {
        class n {
          constructor(t, i) {
            (this.swapFormService = t),
              (this.iframeService = i),
              (this.rateDirection = "from"),
              (this.isIframe = this.iframeService.isIframe);
          }
          ngOnInit() {
            this.tokensRate$ = (0, j.a)([
              this.swapFormService.inputValueDistinct$,
              this.swapFormService.outputValueDistinct$,
            ]).pipe(
              (0, x.U)(([t, i]) => {
                const { fromAmount: r, fromAsset: s, toToken: c } = t,
                  { toAmount: l } = i;
                return l?.gt(0) && r?.gt(0) && s && c
                  ? {
                      from: { amount: r.dividedBy(l), symbol: s.symbol },
                      to: { amount: l.dividedBy(r), symbol: c.symbol },
                    }
                  : null;
              })
            );
          }
          onChangeDirection() {
            this.rateDirection = "from" === this.rateDirection ? "to" : "from";
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(Q.b)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-tokens-rate"]],
            decls: 2,
            vars: 3,
            consts: [
              ["class", "tokens-rate", 4, "ngIf"],
              [1, "tokens-rate"],
              ["class", "tokens-rate__amounts", 4, "ngIf"],
              [
                "inlineSVG",
                "assets/images/swaps/icons/rate-direction-button.svg",
                1,
                "tokens-rate__direction-button",
                3,
                "click",
              ],
              [1, "tokens-rate__amounts"],
              [4, "ngLet"],
              [4, "ngIf"],
              [
                "tuiHintMode",
                "onDark",
                "tuiHintDirection",
                "bottom-right",
                3,
                "tuiHint",
                "tuiHintShowDelay",
                "tuiHintHideDelay",
                4,
                "ngIf",
              ],
              [
                "tuiHintMode",
                "onDark",
                "tuiHintDirection",
                "bottom-right",
                3,
                "tuiHint",
                "tuiHintShowDelay",
                "tuiHintHideDelay",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, es, 4, 2, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(1, 1, r.tokensRate$));
            },
            dependencies: [m.O5, F.e, H.D, G.d$, m.Ov, be.N, ye.f],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.tokens-rate[_ngcontent-%COMP%]{display:flex;grid-gap:8px;justify-content:end}.tokens-rate__amounts[_ngcontent-%COMP%]{overflow:hidden;color:var(--secondary-text);font-size:14px;line-height:120%;letter-spacing:.08em;white-space:nowrap}.tokens-rate__direction-button[_ngcontent-%COMP%]{display:flex;align-items:center;width:15px;cursor:pointer}.tokens-rate__direction-button[_ngcontent-%COMP%]     svg path{fill:var(--secondary-text)}@media (max-width: 420px){.tokens-rate[_ngcontent-%COMP%]{justify-content:start}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var ts = p(35684);
      var rs = p(54482);
      const { isArray: os } = Array;
      function Pi(n) {
        return 1 === n.length && os(n[0]) ? n[0] : n;
      }
      var as = p(83268),
        ss = p(89635),
        cs = p(63269);
      function wi(...n) {
        const a = (0, cs.jO)(n);
        return a
          ? (0, ss.z)(wi(...n), (0, as.Z)(a))
          : (0, rs.e)((t, i) => {
              (0, j.l)([t, ...Pi(n)])(i);
            });
      }
      function ki(...n) {
        return wi(...n);
      }
      const ls = function (n) {
        return { network: n };
      };
      function ps(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 6)(1, "label", 7),
            e.ɵɵtext(2, "Wallet address in target network"),
            e.ɵɵelementEnd(),
            e.ɵɵelement(3, "div", 8),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵpipe(5, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind2(
                4,
                2,
                "crossChainPage.targetAddress.hint",
                e.ɵɵpureFunction1(7, ls, e.ɵɵpipeBind1(5, 5, t.toBlockchain$))
              )
            );
        }
      }
      function ds(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "tui-input", 9),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(),
            i = e.ɵɵreference(5),
            r = e.ɵɵreference(7);
          e.ɵɵproperty(
            "tuiTextfieldCustomContent",
            t.address.value ? (t.address.valid ? i : r) : ""
          )("formControl", t.address)("tuiTextfieldLabelOutside", !0)(
            "pseudoFocused",
            t.address.invalid
          )("pseudoInvalid", t.address.invalid)(
            "tuiTextfieldCleaner",
            !!t.address.value
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 7, "crossChainPage.targetAddress.placeholder"),
              " "
            );
        }
      }
      function ms(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "tui-input", 10),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(),
            i = e.ɵɵreference(5),
            r = e.ɵɵreference(7);
          e.ɵɵproperty(
            "tuiTextfieldCustomContent",
            t.address.value ? (t.address.valid ? i : r) : ""
          )("formControl", t.address)("tuiTextfieldLabelOutside", !0)(
            "pseudoFocused",
            t.address.invalid
          )("pseudoInvalid", t.address.invalid)(
            "tuiTextfieldCleaner",
            !!t.address.value
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(2, 7, "crossChainPage.targetAddress.placeholder")
            );
        }
      }
      function _s(n, a) {
        1 & n && e.ɵɵelement(0, "div", 11),
          2 & n &&
            e.ɵɵproperty(
              "inlineSVG",
              "assets/images/icons/forms/success-input.svg"
            );
      }
      function us(n, a) {
        1 & n && e.ɵɵelement(0, "div", 11),
          2 & n &&
            e.ɵɵproperty(
              "inlineSVG",
              "assets/images/icons/forms/error-input.svg"
            );
      }
      let Ai = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.targetNetworkAddressService = t),
              (this.swapFormService = i),
              (this.window = r),
              (this.destroy$ = s),
              (this.address = new v.FormControl(
                this.targetNetworkAddressService.address
              )),
              (this.toBlockchain$ = this.swapFormService.toBlockchain$);
          }
          ngOnInit() {
            this.subscribeOnTargetAddress(), this.subscribeOnFormValues();
          }
          subscribeOnFormValues() {
            this.swapFormService.inputValue$
              .pipe(
                (0, ts.T)(1),
                (0, fe.b)((t) => {
                  this.address.setAsyncValidators(
                    (function is(n) {
                      return n.toBlockchain
                        ? (function ns(n, a) {
                            const t = o.BlockchainsInfo.getChainType(a);
                            return (function () {
                              var i = (0, O.Z)(function* (r) {
                                const s = r.value,
                                  c = yield o.Web3Pure[t].isAddressCorrect(s);
                                if (t && !c) {
                                  let l;
                                  try {
                                    l = o.BlockchainsInfo.getChainType(n);
                                  } catch {}
                                  if (s || l !== t) return { wrongAddress: s };
                                }
                                return t || s?.length
                                  ? null
                                  : { wrongAddress: s };
                              });
                              return function (r) {
                                return i.apply(this, arguments);
                              };
                            })();
                          })(n.fromAssetType, n.toBlockchain)
                        : () => null;
                    })(t)
                  );
                }),
                (0, Z.h)(
                  (t) => !(0, q.kK)(t.fromAsset) && !(0, q.kK)(t.toToken)
                ),
                (0, ce.x)(
                  (t, i) =>
                    (0, di.l)(t.fromAsset, i.fromAsset) &&
                    (0, q.tb)(t.toToken, i.toToken)
                ),
                (0, P.R)(this.destroy$)
              )
              .subscribe(() => {
                this.address.patchValue(null);
              });
          }
          subscribeOnTargetAddress() {
            this.address.valueChanges
              .pipe(
                ki(this.address.statusChanges),
                (0, Ve.b)(10),
                (0, P.R)(this.destroy$)
              )
              .subscribe(([t, i]) => {
                this.targetNetworkAddressService.setIsAddressValid(
                  "VALID" === i
                ),
                  this.targetNetworkAddressService.setAddress(
                    "VALID" === i ? t : null
                  );
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Oe),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(xe.m9),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-target-network-address"]],
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 8,
            vars: 0,
            consts: [
              [1, "network-container"],
              ["class", "network-container__row", 4, "noFrame"],
              [
                "tuiTextfieldSize",
                "m",
                3,
                "tuiTextfieldCustomContent",
                "formControl",
                "tuiTextfieldLabelOutside",
                "pseudoFocused",
                "pseudoInvalid",
                "tuiTextfieldCleaner",
                4,
                "noFrame",
              ],
              [
                "class",
                "network-container__iframe-input",
                "tuiTextfieldSize",
                "s",
                3,
                "tuiTextfieldCustomContent",
                "formControl",
                "tuiTextfieldLabelOutside",
                "pseudoFocused",
                "pseudoInvalid",
                "tuiTextfieldCleaner",
                4,
                "onlyFrame",
              ],
              ["success", ""],
              ["error", ""],
              [1, "network-container__row"],
              [1, "network-container__label"],
              [
                "tuiHintMode",
                "onDark",
                1,
                "network-container__hint",
                3,
                "inlineSVG",
                "tuiHint",
              ],
              [
                "tuiTextfieldSize",
                "m",
                3,
                "tuiTextfieldCustomContent",
                "formControl",
                "tuiTextfieldLabelOutside",
                "pseudoFocused",
                "pseudoInvalid",
                "tuiTextfieldCleaner",
              ],
              [
                "tuiTextfieldSize",
                "s",
                1,
                "network-container__iframe-input",
                3,
                "tuiTextfieldCustomContent",
                "formControl",
                "tuiTextfieldLabelOutside",
                "pseudoFocused",
                "pseudoInvalid",
                "tuiTextfieldCleaner",
              ],
              [1, "network-container__input-status-icon", 3, "inlineSVG"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtemplate(1, ps, 6, 9, "div", 1),
                e.ɵɵtemplate(2, ds, 3, 9, "tui-input", 2),
                e.ɵɵtemplate(3, ms, 3, 9, "tui-input", 3),
                e.ɵɵtemplate(
                  4,
                  _s,
                  1,
                  1,
                  "ng-template",
                  null,
                  4,
                  e.ɵɵtemplateRefExtractor
                ),
                e.ɵɵtemplate(
                  6,
                  us,
                  1,
                  1,
                  "ng-template",
                  null,
                  5,
                  e.ɵɵtemplateRefExtractor
                ),
                e.ɵɵelementEnd());
            },
            dependencies: [
              me.a,
              Me.T,
              H.D,
              G.d$,
              Be.K3,
              Be.wU,
              W.be,
              W.B7,
              W.xT,
              W.sz,
              v.NgControlStatus,
              v.FormControlDirective,
              m.Ov,
              R.X$,
            ],
            styles: [
              "[_nghost-%COMP%]{display:block;margin-top:20px}html.iframe-vertical   [_nghost-%COMP%]{position:absolute;top:110px;right:0}html.iframe-horizontal   [_nghost-%COMP%]{position:absolute;top:43px;right:-195px}[_nghost-%COMP%]   tui-input[_ngcontent-%COMP%]     input{padding:0}[_nghost-%COMP%]     .network-container__input-status-icon, [_nghost-%COMP%]     .network-container__input-clipboard-icon{width:26px;height:26px}[_nghost-%COMP%]     .network-container__input-clipboard-icon{cursor:pointer;pointer-events:all}[_nghost-%COMP%]     .network-container__iframe-input{width:182px}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield]{--tui-base-01: transparent;border-radius:50px;box-shadow:none}html.iframe   [_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield]{--tui-base-01: var(--primary-background);border-radius:10px;box-shadow:none}html.iframe   [_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield]:after{border:none}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield]:after{border:1px solid var(--transparent-line)}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] input{font-size:12.5px;border-right-width:74px!important;border-left-width:15px!important}html.iframe   [_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] input{padding-right:0!important;border-left-width:0!important}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] .content{padding-left:33px!important}html.iframe   [_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] .content{padding:0 0 0 var(--tui-padding-s)!important}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] .custom-content{margin-right:-.25rem}[_nghost-%COMP%]     .network-container tui-wrapper[data-appearance=textfield] .placeholder{font-size:14px}[_nghost-%COMP%]     .network-container__row{display:flex;align-items:center;margin-bottom:10px}[_nghost-%COMP%]     .network-container__hint{display:flex;margin-left:10px;cursor:pointer}[_nghost-%COMP%]     .network-container__hint   svg{width:15px;height:15px}[_nghost-%COMP%]     .network-container__hint   svg path{fill:var(--secondary-text)}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var T = (() => {
          return (
            ((n = T || (T = {})).WRONG_BLOCKCHAIN = "Wrong user network"),
            (n.MULTICHAIN_WALLET = "Multichain wallets are not supported"),
            (n.WRONG_WALLET = "Wrong wallet"),
            (n.INVALID_TARGET_ADDRESS = "Invalid target network address"),
            (n.WRONG_SOURCE_NETWORK =
              "The swaps from the Bitcoin network are currently not supported"),
            (n.NO_AMOUNT = "From amount was not entered"),
            (n.INSUFFICIENT_FUNDS = "Insufficient balance"),
            (n.LESS_THAN_MINIMUM = "Entered amount less than minimum"),
            (n.MORE_THAN_MAXIMUM = "Entered amount more than maximum"),
            (n.SOL_SWAP = "Wrap SOL firstly"),
            (n.SOLANA_UNAVAILABLE = "Solana in unavailable"),
            (n.NO_SELECTED_TOKEN = "Select token"),
            T
          );
          var n;
        })(),
        gs = p(13784),
        hs = p(54511);
      let Qe = (() => {
          class n {
            constructor(t, i, r, s, c, l, d, _, g, C, b) {
              (this.swapFormService = t),
                (this.swapTypeService = i),
                (this.queryParamsService = r),
                (this.withRoundPipe = s),
                (this.translateService = c),
                (this.targetNetworkAddressService = l),
                (this.walletConnectorService = d),
                (this.authService = _),
                (this.iframeService = g),
                (this.settingsService = C),
                (this.ngZone = b),
                (this._errorBody$ = new A.X(void 0)),
                (this._errorLoading$ = new A.X(!1)),
                (this.errorLoading$ = this._errorLoading$.asObservable()),
                (this.error$ = (0, j.a)([
                  this._errorBody$,
                  this._errorLoading$,
                ]).pipe((0, x.U)(([k, y]) => ({ ...k, loading: y })))),
                (this.errorType = Object.values(T).reduce(
                  (k, y) => ({ ...k, [y]: !1 }),
                  {}
                )),
                this.subscribeOnSwapForm(),
                this.subscribeOnSwapMode(),
                this.subscribeOnWalletNetwork(),
                this.subscribeOnAuth(),
                this.subscribeOnTargetNetworkAddress();
            }
            subscribeOnSwapForm() {
              this.swapFormService.inputValue$.subscribe(() => {
                this.checkAmounts(),
                  this.checkWalletSupportsFromBlockchain(),
                  this.checkSelectedToken(),
                  this.checkUserBlockchain(),
                  this.checkUserBalance(),
                  this.updateError();
              }),
                this.swapFormService.outputValue$.subscribe(() => {
                  this.checkAmounts(), this.updateError();
                });
            }
            subscribeOnSwapMode() {
              this.swapTypeService.swapMode$.subscribe((t) => {
                t === S.V.INSTANT_TRADE &&
                  (this.setMinAmountError(!1), this.setMaxAmountError(!1));
              });
            }
            subscribeOnWalletNetwork() {
              this.walletConnectorService.networkChange$.subscribe(() => {
                this.checkUserBlockchain(), this.updateError();
              });
            }
            subscribeOnAuth() {
              this.authService.currentUser$.subscribe(() => {
                this.checkWalletSupportsFromBlockchain(),
                  this.checkUserBalance(),
                  this.updateError();
              });
            }
            subscribeOnTargetNetworkAddress() {
              (0, j.a)([
                this.targetNetworkAddressService.isAddressValid$,
                this.swapTypeService.swapMode$,
                this.settingsService.instantTradeValueChanges.pipe(
                  (0, Pe.O)(this.settingsService.instantTradeValue)
                ),
                this.settingsService.crossChainRoutingValueChanges.pipe(
                  (0, Pe.O)(this.settingsService.crossChainRoutingValue)
                ),
              ]).subscribe(([t, i, r, s]) => {
                let c = !1;
                switch (i) {
                  case S.V.INSTANT_TRADE:
                    c = r.showReceiverAddress;
                    break;
                  case S.V.CROSS_CHAIN_ROUTING:
                    c = s.showReceiverAddress;
                }
                (this.errorType[T.INVALID_TARGET_ADDRESS] = c && !t),
                  this.updateError();
              });
            }
            checkAmounts() {
              const { fromAmount: t } = this.swapFormService.inputValue,
                { toAmount: i } = this.swapFormService.outputValue;
              this.errorType[T.NO_AMOUNT] =
                !t?.gt(0) ||
                (this.swapTypeService.getSwapProviderType() ===
                  S.V.LIMIT_ORDER &&
                  !i?.gt(0));
            }
            checkWalletSupportsFromBlockchain() {
              var t = this;
              return (0, O.Z)(function* () {
                const i = t.swapFormService.inputValue.fromAsset,
                  r = yield o.EvmWeb3Pure.isAddressCorrect(
                    t.authService.userAddress
                  );
                if (!(0, de.$v)(i))
                  return i
                    ? void (t.errorType[T.WRONG_WALLET] =
                        Boolean(t.authService.userAddress) && !r)
                    : void (t.errorType[T.WRONG_WALLET] = !1);
                const s = o.BlockchainsInfo.getChainType(i.blockchain),
                  c = o.Web3Pure[s].isAddressCorrect(t.authService.userAddress);
                t.errorType[T.WRONG_WALLET] =
                  Boolean(t.authService.userAddress) &&
                  (s === o.CHAIN_TYPE.EVM || s === o.CHAIN_TYPE.TRON) &&
                  !c;
              })();
            }
            checkUserBalance() {
              if (
                this.swapTypeService.getSwapProviderType() === S.V.LIMIT_ORDER
              )
                return void (this.errorType[T.INSUFFICIENT_FUNDS] = !1);
              const { fromAsset: t, fromAmount: i } =
                this.swapFormService.inputValue;
              if (!(0, de.Vr)(t))
                return void (this.errorType[T.INSUFFICIENT_FUNDS] = !1);
              let r;
              try {
                r = o.BlockchainsInfo.getChainType(t.blockchain);
              } catch {}
              t &&
              this.authService.userAddress &&
              r &&
              r === this.authService.userChainType
                ? t.amount?.isFinite()
                  ? (this._errorLoading$.next(!1),
                    (this.errorType[T.INSUFFICIENT_FUNDS] = t.amount.lt(i)))
                  : this._errorLoading$.next(!0)
                : (this.errorType[T.INSUFFICIENT_FUNDS] = !1);
            }
            checkSelectedToken() {
              this.errorType[T.NO_SELECTED_TOKEN] =
                (0, q.kK)(this.swapFormService.inputValue?.fromAsset) &&
                (0, q.kK)(this.queryParamsService.queryParams.from);
            }
            checkUserBlockchain() {
              const { fromAsset: t } = this.swapFormService.inputValue,
                i = this.walletConnectorService.network;
              if (i && (0, de.$v)(t)) {
                let r;
                try {
                  r = o.BlockchainsInfo.getChainType(t.blockchain);
                } catch {}
                (this.errorType[T.WRONG_BLOCKCHAIN] =
                  r === o.CHAIN_TYPE.EVM && t.blockchain !== i),
                  (this.errorType[T.WRONG_SOURCE_NETWORK] = Zn.includes(
                    t.blockchain
                  ));
              } else this.errorType[T.WRONG_BLOCKCHAIN] = !1;
            }
            updateError() {
              this.translateSub$?.unsubscribe();
              let i,
                t = null;
              const r = this.errorType,
                { fromAssetType: s } = this.swapFormService.inputValue,
                c = o.BlockchainsInfo.isBlockchainName(s) ? ge.h[s] : "EVM";
              switch (!0) {
                case r[T.WRONG_SOURCE_NETWORK]:
                  (t = T.WRONG_SOURCE_NETWORK),
                    (i = {
                      key: "errors.wrongSourceNetwork",
                      interpolateParams: { network: c },
                    });
                  break;
                case r[T.SOLANA_UNAVAILABLE]:
                  (t = T.SOLANA_UNAVAILABLE),
                    (i =
                      "horizontal" === this.iframeService.iframeAppearance
                        ? { key: "Unavailable" }
                        : {
                            key: "Solana is temporarily unavailable for Multi-Chain swaps.",
                          });
                  break;
                case r[T.WRONG_WALLET]:
                  (t = T.WRONG_WALLET),
                    (i = {
                      key: "errors.wrongWallet",
                      interpolateParams: { network: c },
                    });
                  break;
                case r[T.MULTICHAIN_WALLET]:
                  (t = T.MULTICHAIN_WALLET),
                    (i = { key: "errors.multichainWallet" });
                  break;
                case r[T.NO_SELECTED_TOKEN]:
                  (t = T.NO_SELECTED_TOKEN),
                    (i = { key: "errors.noSelectedToken" });
                  break;
                case r[T.WRONG_BLOCKCHAIN]:
                  (t = T.WRONG_BLOCKCHAIN),
                    (i = {
                      key: "errors.chooseNetworkWallet",
                      interpolateParams: { blockchain: c },
                    });
                  break;
                case r[T.NO_AMOUNT]:
                  (t = T.NO_AMOUNT), (i = { key: "errors.noEnteredAmount" });
                  break;
                case r[T.LESS_THAN_MINIMUM]:
                  (t = T.LESS_THAN_MINIMUM),
                    (i = {
                      key: "errors.minimumAmount",
                      interpolateParams: {
                        amount: this.minAmount,
                        token: this.minAmountTokenSymbol,
                      },
                    });
                  break;
                case r[T.MORE_THAN_MAXIMUM]:
                  (t = T.MORE_THAN_MAXIMUM),
                    (i = {
                      key: "errors.maximumAmount",
                      interpolateParams: {
                        amount: this.maxAmount,
                        token: this.maxAmountTokenSymbol,
                      },
                    });
                  break;
                case r[T.INSUFFICIENT_FUNDS]:
                  (t = T.INSUFFICIENT_FUNDS),
                    (i = { key: "errors.InsufficientBalance" });
                  break;
                case r[T.INVALID_TARGET_ADDRESS]:
                  (t = T.INVALID_TARGET_ADDRESS),
                    (i = { key: "errors.invalidTargetAddress" });
                  break;
                case r[T.SOL_SWAP]:
                  (t = T.SOL_SWAP), (i = { key: "errors.solSwap" });
              }
              const l = Object.values(r).filter(Boolean).length;
              l && !i && (i = { key: "errors.unknown" }),
                l || i
                  ? (this.translateSub$ = this.translateService
                      .stream(i.key, i.interpolateParams)
                      .subscribe((d) => {
                        this.ngZone.run(() => {
                          this._errorBody$.next({ type: t, text: d });
                        });
                      }))
                  : this.ngZone.run(() => {
                      this._errorBody$.next({ type: null, text: "" });
                    });
            }
            setMinAmountError(t) {
              if (t) {
                const i = "object" == typeof t && "amount" in t ? t.amount : t;
                (this.minAmount =
                  "number" == typeof i
                    ? i.toString()
                    : this.withRoundPipe.transform(
                        i.toFormat(nn.f),
                        "toClosestValue"
                      )),
                  (this.minAmountTokenSymbol =
                    "object" == typeof t && "symbol" in t
                      ? t.symbol
                      : this.swapFormService.inputValue.fromAsset.symbol),
                  (this.errorType[T.LESS_THAN_MINIMUM] = !0);
              } else this.errorType[T.LESS_THAN_MINIMUM] = !1;
              this.updateError();
            }
            setMaxAmountError(t) {
              if (t) {
                const i = "object" == typeof t && "amount" in t ? t.amount : t;
                (this.maxAmount =
                  "number" == typeof i
                    ? i.toString()
                    : this.withRoundPipe.transform(
                        i.toFormat(nn.f),
                        "toClosestValue",
                        { roundingMode: M.Z.ROUND_HALF_UP }
                      )),
                  (this.maxAmountTokenSymbol =
                    "object" == typeof t && "symbol" in t
                      ? t.symbol
                      : this.swapFormService.inputValue.fromAsset.symbol),
                  (this.errorType[T.MORE_THAN_MAXIMUM] = !0);
              } else this.errorType[T.MORE_THAN_MAXIMUM] = !1;
              this.updateError();
            }
            setRubicError(t) {
              t
                ? t instanceof gs.Z
                  ? this.setMinAmountError({
                      amount: t.amount,
                      symbol: t.tokenSymbol,
                    })
                  : t instanceof hs.Z &&
                    this.setMaxAmountError({
                      amount: t.amount,
                      symbol: t.tokenSymbol,
                    })
                : ((this.errorType[T.MORE_THAN_MAXIMUM] = !1),
                  (this.errorType[T.LESS_THAN_MINIMUM] = !1),
                  this.updateError());
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(E.q),
                e.ɵɵinject(ae.H),
                e.ɵɵinject(Ae.E),
                e.ɵɵinject(ye.f),
                e.ɵɵinject(R.sK),
                e.ɵɵinject(Oe),
                e.ɵɵinject($e.j),
                e.ɵɵinject(U.e),
                e.ɵɵinject(Q.b),
                e.ɵɵinject(ve),
                e.ɵɵinject(e.NgZone)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Je = (() => {
          class n {
            constructor() {
              (this._isButtonHovered$ = new A.X(!1)),
                (this.isButtonHovered$ = this._isButtonHovered$.asObservable());
            }
            set isButtonHovered(t) {
              this._isButtonHovered$.next(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Re = (() => {
          class n {
            constructor(t, i) {
              (this.swapButtonContainerErrorsService = t),
                (this.tradeService = i),
                (this.idPrefix = ""),
                (this._tradeStatus$ = new A.X(void 0)),
                (this.tradeStatus$ = this._tradeStatus$.asObservable()),
                (this.isUpdateRateStatus$ = this._tradeStatus$.pipe(
                  (0, x.U)((r) => r === h.OLD_TRADE_DATA)
                )),
                (0, j.a)([
                  this.isUpdateRateStatus$,
                  this.swapButtonContainerErrorsService.error$,
                ])
                  .pipe((0, Z.h)(([r, s]) => !r && s.text && !s.loading))
                  .subscribe(() => {
                    this.tradeService.isButtonHovered = !1;
                  });
            }
            get tradeStatus() {
              return this._tradeStatus$.getValue();
            }
            set tradeStatus(t) {
              this._tradeStatus$.next(t);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(Qe), e.ɵɵinject(Je));
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        On = (() => {
          class n {
            constructor(t, i, r) {
              (this.swapButtonContainerService = t),
                (this.swapButtonContainerErrorsService = i),
                (this.sdkService = r),
                (this.loading$ = (0, j.a)([
                  this.swapButtonContainerErrorsService.errorLoading$,
                  this.swapButtonContainerService.tradeStatus$,
                  this.sdkService.sdkLoading$,
                ]).pipe(
                  (0, x.U)(
                    ([s, c, l]) =>
                      s || c === h.LOADING || c === h.SWAP_IN_PROGRESS || l
                  )
                )),
                (this.disabled$ = (0, j.a)([
                  this.swapButtonContainerService.tradeStatus$,
                  this.loading$,
                ]).pipe((0, x.U)(([s, c]) => s !== h.READY_TO_SWAP || c)));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(Re),
                e.ɵɵinject(Qe),
                e.ɵɵinject(Ge.w)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      function fs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-rubic-button", 1),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onSwapClick());
            })("onHoveredChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onHoveredChange(r));
            }),
            e.ɵɵpipe(1, "async"),
            e.ɵɵtext(2),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵclassMap(i.idPrefix + "button-swap"),
            e.ɵɵproperty("loading", t)(
              "disabled",
              e.ɵɵpipeBind1(1, 5, i.disabled$)
            ),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", t ? "" : i.buttonText, "\n");
        }
      }
      let Pn = (() => {
        class n {
          constructor(t, i, r, s, c) {
            (this.swapButtonContainerService = t),
              (this.swapButtonService = i),
              (this.cdr = r),
              (this.tradeService = s),
              (this.destroy$ = c),
              (this.onClick = new e.EventEmitter()),
              (this.idPrefix = this.swapButtonContainerService.idPrefix),
              (this.loading$ = this.swapButtonService.loading$),
              (this.disabled$ = this.swapButtonService.disabled$);
          }
          ngOnInit() {
            this.disabled$
              .pipe((0, P.R)(this.destroy$))
              .subscribe(() => this.cdr.detectChanges());
          }
          onSwapClick() {
            this.onClick.emit();
          }
          onHoveredChange(t) {
            this.tradeService.isButtonHovered = t;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Re),
              e.ɵɵdirectiveInject(On),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(Je),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-swap-button"]],
            inputs: { buttonText: "buttonText" },
            outputs: { onClick: "onClick" },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 2,
            vars: 3,
            consts: [
              [
                "appearance",
                "primary",
                3,
                "class",
                "loading",
                "disabled",
                "onClick",
                "onHoveredChange",
                4,
                "ngLet",
              ],
              [
                "appearance",
                "primary",
                3,
                "loading",
                "disabled",
                "onClick",
                "onHoveredChange",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, fs, 3, 7, "app-rubic-button", 0),
                e.ɵɵpipe(1, "async")),
                2 & i && e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.loading$));
            },
            dependencies: [se.j, F.e, m.Ov],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.button-swap_warning-medium[_ngcontent-%COMP%]     [tuiButton]._pressed{background-color:#d6bd27}.button-swap_warning-medium[_ngcontent-%COMP%]     tui-wrapper[data-appearance=secondary]{background-color:#d6bd27}.button-swap_warning-medium[_ngcontent-%COMP%]     tui-wrapper[data-appearance=secondary][data-state=pressed]{background-color:transparent!important}.button-swap_warning-high[_ngcontent-%COMP%]     [tuiButton]._pressed{background-color:#f5474a}.button-swap_warning-high[_ngcontent-%COMP%]     [tuiButton]._disabled tui-wrapper{color:#fff;background-color:#f5474a;opacity:.5!important}.button-swap_warning-high[_ngcontent-%COMP%]     tui-wrapper[data-appearance=secondary]{background-color:#f5474a}.button-swap_warning-high[_ngcontent-%COMP%]     tui-wrapper[data-appearance=secondary][data-state=pressed]{background-color:transparent!important}html.iframe-horizontal[_nghost-%COMP%]     button, html.iframe-horizontal   [_nghost-%COMP%]     button{font-size:15px!important}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function vs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "app-rubic-button", 1),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onLogin());
            }),
            e.ɵɵtext(2),
            e.ɵɵpipe(3, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("id", i.idPrefix + "connect-wallet")("loading", t),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(3, 3, "navigation.login"),
              " "
            );
        }
      }
      let Cs = (() => {
          class n {
            constructor(t, i, r, s) {
              (this.swapButtonContainerService = t),
                (this.walletsModalService = i),
                (this.authService = r),
                (this.iframeService = s),
                (this.idPrefix = this.swapButtonContainerService.idPrefix),
                (this.isIframe = this.iframeService.isIframe),
                (this.user$ = this.authService.currentUser$);
            }
            onLogin() {
              this.walletsModalService.open().subscribe();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(Re),
                e.ɵɵdirectiveInject(ai.u),
                e.ɵɵdirectiveInject(U.e),
                e.ɵɵdirectiveInject(Q.b)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-connect-wallet-button"]],
              decls: 2,
              vars: 3,
              consts: [
                [4, "ngLet"],
                ["appearance", "primary", 3, "id", "loading", "onClick"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, vs, 4, 5, "ng-container", 0),
                  e.ɵɵpipe(1, "async")),
                  2 & i &&
                    e.ɵɵproperty(
                      "ngLet",
                      !r.isIframe && void 0 === e.ɵɵpipeBind1(1, 1, r.user$)
                    );
              },
              dependencies: [se.j, F.e, m.Ov, R.X$],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        xs = (() => {
          class n {
            constructor(t) {
              (this.tradeService = t), (this.onClick = new e.EventEmitter());
            }
            onHoveredChange(t) {
              this.tradeService.isButtonHovered = t;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(Je));
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-update-rate-button"]],
              outputs: { onClick: "onClick" },
              decls: 3,
              vars: 4,
              consts: [
                ["appearance", "primary", 3, "onClick", "onHoveredChange"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "app-rubic-button", 0),
                  e.ɵɵlistener("onClick", function () {
                    return r.onClick.emit();
                  })("onHoveredChange", function (c) {
                    return r.onHoveredChange(c);
                  }),
                  e.ɵɵtext(1),
                  e.ɵɵpipe(2, "translate"),
                  e.ɵɵelementEnd()),
                  2 & i &&
                    (e.ɵɵattribute("rate-is-updated", !0),
                    e.ɵɵadvance(1),
                    e.ɵɵtextInterpolate1(
                      " ",
                      e.ɵɵpipeBind1(2, 2, "tradePage.rateIsUpdated"),
                      "\n"
                    ));
              },
              dependencies: [se.j, R.X$],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}html.iframe[_nghost-%COMP%]   app-rubic-button[rate-is-updated=true][_ngcontent-%COMP%]     button span, html.iframe   [_nghost-%COMP%]   app-rubic-button[rate-is-updated=true][_ngcontent-%COMP%]     button span{font-size:13px;line-height:16px}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Mi = (() => {
          class n {
            constructor(t, i) {
              (this.swapButtonContainerService = t),
                (this.swapButtonContainerErrorsService = i),
                (this.approveButtonLoading$ = (0, j.a)([
                  this.swapButtonContainerErrorsService.errorLoading$,
                  this.swapButtonContainerService.tradeStatus$,
                ]).pipe(
                  (0, x.U)(
                    ([r, s]) =>
                      r || s === h.LOADING || s === h.APPROVE_IN_PROGRESS
                  )
                )),
                (this.approveButtonDisabled$ =
                  this.swapButtonContainerService.tradeStatus$.pipe(
                    (0, x.U)((r) => r !== h.READY_TO_APPROVE)
                  ));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(Re), e.ɵɵinject(Qe));
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      function bs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-rubic-button", 1),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onClick.emit());
            })("onHoveredChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onHoveredChange(r));
            }),
            e.ɵɵpipe(1, "async"),
            e.ɵɵtext(2),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵproperty("id", i.idPrefix + "approve")("loading", t)(
            "disabled",
            e.ɵɵpipeBind1(1, 4, i.approveButtonDisabled$)
          ),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", t ? "" : "Approve", "\n");
        }
      }
      let ys = (() => {
        class n {
          constructor(t, i, r) {
            (this.swapButtonContainerService = t),
              (this.approveSwapButtonService = i),
              (this.tradeService = r),
              (this.onClick = new e.EventEmitter()),
              (this.idPrefix = this.swapButtonContainerService.idPrefix),
              (this.approveButtonLoading$ =
                this.approveSwapButtonService.approveButtonLoading$),
              (this.approveButtonDisabled$ =
                this.approveSwapButtonService.approveButtonDisabled$);
          }
          onHoveredChange(t) {
            this.tradeService.isButtonHovered = t;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Re),
              e.ɵɵdirectiveInject(Mi),
              e.ɵɵdirectiveInject(Je)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-approve-button"]],
            outputs: { onClick: "onClick" },
            decls: 2,
            vars: 3,
            consts: [
              [
                "appearance",
                "primary",
                3,
                "id",
                "loading",
                "disabled",
                "onClick",
                "onHoveredChange",
                4,
                "ngLet",
              ],
              [
                "appearance",
                "primary",
                3,
                "id",
                "loading",
                "disabled",
                "onClick",
                "onHoveredChange",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, bs, 3, 6, "app-rubic-button", 0),
                e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty(
                    "ngLet",
                    e.ɵɵpipeBind1(1, 1, r.approveButtonLoading$)
                  );
            },
            dependencies: [se.j, F.e, m.Ov],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Ss(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 2)(2, "app-approve-button", 3),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onApproveClick.emit());
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "app-swap-button", 4),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onSwapClick.emit());
            }),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(3), e.ɵɵproperty("buttonText", t.buttonText);
        }
      }
      function Ts(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "app-approve-button", 3),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onApproveClick.emit());
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
      }
      let Os = (() => {
        class n {
          constructor() {
            (this.onApproveClick = new e.EventEmitter()),
              (this.onSwapClick = new e.EventEmitter());
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-approve-swap-button"]],
            inputs: { buttonText: "buttonText" },
            outputs: {
              onApproveClick: "onApproveClick",
              onSwapClick: "onSwapClick",
            },
            decls: 2,
            vars: 0,
            consts: [
              [4, "noFrame"],
              [4, "onlyFrame"],
              [1, "buttons"],
              [3, "onClick"],
              [3, "buttonText", "onClick"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, Ss, 4, 1, "ng-container", 0),
                e.ɵɵtemplate(1, Ts, 2, 0, "ng-container", 1));
            },
            dependencies: [me.a, Me.T, Pn, ys],
            styles: [
              ".buttons[_ngcontent-%COMP%]{display:flex;grid-gap:20px}.buttons[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Ei = p(234),
        Ps = p(86805);
      const ks = function (n) {
        return { networkName: n };
      };
      function As(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "app-rubic-button", 3),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.changeNetwork());
            }),
            e.ɵɵtext(2),
            e.ɵɵpipe(3, "translate"),
            e.ɵɵpipe(4, "async"),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty("loading", t.loading)("disabled", t.loading),
            e.ɵɵattribute("error", !0),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t.loading
                ? ""
                : e.ɵɵpipeBind2(
                    3,
                    4,
                    "common.switchTo",
                    e.ɵɵpureFunction1(
                      9,
                      ks,
                      e.ɵɵpipeBind1(4, 7, t.fromBlockchainLabel$)
                    )
                  ),
              " "
            );
        }
      }
      function Ms(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "app-rubic-button", 5),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵtext(3),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("disabled", !0),
            e.ɵɵattribute("error", !0)(
              "error-min-max",
              e.ɵɵpipeBind2(2, 4, t.error.type, i.isMinMaxError)
            ),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", t.error.text, " ");
        }
      }
      function Es(n, a) {
        if ((1 & n && e.ɵɵtemplate(0, Ms, 4, 7, "ng-container", 4), 2 & n)) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext().ngLet;
          e.ɵɵproperty("ngIf", !t || i.isMobile);
        }
      }
      function Is(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, As, 5, 11, "ng-container", 1),
            e.ɵɵtemplate(
              2,
              Es,
              1,
              1,
              "ng-template",
              null,
              2,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵreference(3),
            r = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1), e.ɵɵproperty("ngIf", t && !r.isMobile)("ngIfElse", i);
        }
      }
      function Ns(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Is, 4, 2, "ng-container", 0),
            e.ɵɵpipe(2, "functionCall"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpipeBind3(2, 1, t.error.type, i.allowChangeNetwork, i)
            );
        }
      }
      const Rs = function (n, a) {
        return { error: n, isMobile: a };
      };
      let Ds = (() => {
          class n {
            constructor(t, i, r, s, c, l, d) {
              (this.cdr = t),
                (this.swapButtonContainerService = i),
                (this.swapButtonContainerErrorsService = r),
                (this.headerStore = s),
                (this.walletConnectorService = c),
                (this.swapFormService = l),
                (this.sdkService = d),
                (this.error$ = this.swapButtonContainerErrorsService.error$),
                (this.isMobile$ = this.headerStore.getMobileDisplayStatus()),
                (this.loading = !1),
                (this.fromBlockchainLabel$ =
                  this.swapFormService.fromBlockchain$.pipe(
                    (0, x.U)((_) => ge.h[_])
                  ));
            }
            allowChangeNetwork(t) {
              const { fromAssetType: i } = this.swapFormService.inputValue;
              return !(
                t !== T.WRONG_BLOCKCHAIN ||
                !o.BlockchainsInfo.isEvmBlockchainName(i) ||
                (this.walletConnectorService?.provider.walletName !==
                  Ei.U.METAMASK &&
                  this.walletConnectorService?.provider.walletName !==
                    Ei.U.WALLET_CONNECT)
              );
            }
            changeNetwork() {
              var t = this;
              return (0, O.Z)(function* () {
                const { fromAssetType: i } = t.swapFormService.inputValue,
                  r = i;
                if (o.BlockchainsInfo.isEvmBlockchainName(r)) {
                  t.loading = !0;
                  try {
                    yield t.walletConnectorService.switchChain(r),
                      yield (function ws(n, a) {
                        const t = "object" == typeof a;
                        return new Promise((i, r) => {
                          let c,
                            s = !1;
                          n.subscribe({
                            next: (l) => {
                              (c = l), (s = !0);
                            },
                            error: r,
                            complete: () => {
                              s ? i(c) : t ? i(a.defaultValue) : r(new Ps.K());
                            },
                          });
                        });
                      })(
                        t.sdkService.sdkLoading$.pipe(
                          (0, Wn.P)((s) => !1 === s)
                        )
                      );
                  } finally {
                    (t.loading = !1), t.cdr.markForCheck();
                  }
                }
              })();
            }
            isMinMaxError(t) {
              return t === T.LESS_THAN_MINIMUM || t === T.MORE_THAN_MAXIMUM;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(e.ChangeDetectorRef),
                e.ɵɵdirectiveInject(Re),
                e.ɵɵdirectiveInject(Qe),
                e.ɵɵdirectiveInject(Mt.N),
                e.ɵɵdirectiveInject($e.j),
                e.ɵɵdirectiveInject(E.q),
                e.ɵɵdirectiveInject(Ge.w)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-error-button"]],
              decls: 3,
              vars: 8,
              consts: [
                [4, "ngLet"],
                [4, "ngIf", "ngIfElse"],
                ["errorInfo", ""],
                ["appearance", "primary", 3, "loading", "disabled", "onClick"],
                [4, "ngIf"],
                ["appearance", "secondary", 1, "error-button", 3, "disabled"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, Ns, 3, 5, "ng-container", 0),
                  e.ɵɵpipe(1, "async"),
                  e.ɵɵpipe(2, "async")),
                  2 & i &&
                    e.ɵɵproperty(
                      "ngLet",
                      e.ɵɵpureFunction2(
                        5,
                        Rs,
                        e.ɵɵpipeBind1(1, 1, r.error$),
                        e.ɵɵpipeBind1(2, 3, r.isMobile$)
                      )
                    );
              },
              dependencies: [m.O5, se.j, F.e, m.Ov, R.X$, pn.g],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.error-button[_ngcontent-%COMP%]     .content{color:#843DF8}html.iframe[_nghost-%COMP%]   app-rubic-button[error=true][_ngcontent-%COMP%]     button span, html.iframe   [_nghost-%COMP%]   app-rubic-button[error=true][_ngcontent-%COMP%]     button span{font-size:14px;line-height:1}html.iframe[_nghost-%COMP%]   app-rubic-button[error-min-max=true][_ngcontent-%COMP%]     button span, html.iframe   [_nghost-%COMP%]   app-rubic-button[error-min-max=true][_ngcontent-%COMP%]     button span{font-size:12px}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Ii = (() => {
          class n {
            constructor(t, i) {
              (this.swapButtonContainerService = t),
                (this.swapButtonContainerErrorsService = i),
                (this.buyNativeButtonLoading$ = (0, j.a)([
                  this.swapButtonContainerErrorsService.errorLoading$,
                  this.swapButtonContainerService.tradeStatus$,
                ]).pipe(
                  (0, x.U)(
                    ([r, s]) =>
                      r || s === h.LOADING || s === h.BUY_NATIVE_IN_PROGRESS
                  )
                )),
                (this.buyNativeButtonDisabled$ =
                  this.swapButtonContainerService.tradeStatus$.pipe(
                    (0, x.U)((r) => r !== h.READY_TO_BUY_NATIVE)
                  ));
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(Re), e.ɵɵinject(Qe));
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Fs = (() => {
          class n {
            constructor(t, i, r) {
              (this.onramperSwapButtonService = t),
                (this.tradeService = i),
                (this.swapFormService = r),
                (this.onClick = new e.EventEmitter()),
                (this.loading$ =
                  this.onramperSwapButtonService.buyNativeButtonLoading$),
                (this.disabled$ =
                  this.onramperSwapButtonService.buyNativeButtonDisabled$),
                (this.nativeSymbol$ = this.swapFormService.toBlockchain$.pipe(
                  (0, x.U)((s) => o.nativeTokensList[s].symbol)
                ));
            }
            onHoveredChange(t) {
              this.tradeService.isButtonHovered = t;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(Ii),
                e.ɵɵdirectiveInject(Je),
                e.ɵɵdirectiveInject(E.q)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-buy-native-button"]],
              outputs: { onClick: "onClick" },
              decls: 5,
              vars: 9,
              consts: [
                [
                  "appearance",
                  "primary",
                  3,
                  "loading",
                  "disabled",
                  "onClick",
                  "onHoveredChange",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "app-rubic-button", 0),
                  e.ɵɵlistener("onClick", function () {
                    return r.onClick.emit();
                  })("onHoveredChange", function (c) {
                    return r.onHoveredChange(c);
                  }),
                  e.ɵɵpipe(1, "async"),
                  e.ɵɵpipe(2, "async"),
                  e.ɵɵtext(3),
                  e.ɵɵpipe(4, "async"),
                  e.ɵɵelementEnd()),
                  2 & i &&
                    (e.ɵɵproperty("loading", e.ɵɵpipeBind1(1, 3, r.loading$))(
                      "disabled",
                      e.ɵɵpipeBind1(2, 5, r.disabled$)
                    ),
                    e.ɵɵadvance(3),
                    e.ɵɵtextInterpolate1(
                      " Buy ",
                      e.ɵɵpipeBind1(4, 7, r.nativeSymbol$),
                      "\n"
                    ));
              },
              dependencies: [se.j, m.Ov],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      function Bs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-swap-button", 3),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onSwapClick.emit());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("buttonText", t.buttonText);
        }
      }
      let Hs = (() => {
        class n {
          constructor(t) {
            (this.swapFormService = t),
              (this.onBuyNativeClick = new e.EventEmitter()),
              (this.onSwapClick = new e.EventEmitter()),
              (this.isToTokenNative$ = this.swapFormService.toToken$.pipe(
                (0, x.U)((i) => o.EvmWeb3Pure.isNativeAddress(i.address))
              ));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(E.q));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-onramper-swap-button"]],
            inputs: { buttonText: "buttonText" },
            outputs: {
              onBuyNativeClick: "onBuyNativeClick",
              onSwapClick: "onSwapClick",
            },
            decls: 4,
            vars: 3,
            consts: [
              [1, "buttons"],
              [3, "onClick"],
              [3, "buttonText", "onClick", 4, "ngIf"],
              [3, "buttonText", "onClick"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "app-buy-native-button", 1),
                e.ɵɵlistener("onClick", function () {
                  return r.onBuyNativeClick.emit();
                }),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(2, Bs, 1, 1, "app-swap-button", 2),
                e.ɵɵpipe(3, "async"),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "ngIf",
                    !1 === e.ɵɵpipeBind1(3, 1, r.isToTokenNative$)
                  ));
            },
            dependencies: [m.O5, Pn, Fs, m.Ov],
            styles: [
              ".buttons[_ngcontent-%COMP%]{display:flex;grid-gap:20px}.buttons[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:100%}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Ls(n, a) {
        1 & n && e.ɵɵelement(0, "app-connect-wallet-button");
      }
      function $s(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-update-rate-button", 3),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onUpdateRateClick.emit());
            }),
            e.ɵɵelementEnd();
        }
      }
      function Vs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-onramper-swap-button", 8),
            e.ɵɵlistener("onBuyNativeClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(5);
              return e.ɵɵresetView(r.onBuyNativeClick.emit());
            })("onSwapClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(5);
              return e.ɵɵresetView(r.onSwapClick.emit());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(5);
          e.ɵɵproperty("buttonText", t.buttonText);
        }
      }
      function js(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "app-approve-swap-button", 10),
            e.ɵɵlistener("onApproveClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(6);
              return e.ɵɵresetView(r.onApproveClick.emit());
            })("onSwapClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(6);
              return e.ɵɵresetView(r.onSwapClick.emit());
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(6);
          e.ɵɵadvance(1), e.ɵɵproperty("buttonText", t.buttonText);
        }
      }
      function zs(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-swap-button", 11),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(6);
              return e.ɵɵresetView(r.onSwapClick.emit());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(6);
          e.ɵɵproperty("buttonText", t.buttonText);
        }
      }
      function Ys(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, js, 2, 1, "ng-container", 1),
            e.ɵɵtemplate(
              2,
              zs,
              1,
              1,
              "ng-template",
              null,
              9,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(3),
            i = e.ɵɵnextContext(5);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              i.withApproveButton && (!i.isIframe || i.needApprove)
            )("ngIfElse", t);
        }
      }
      function Us(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Vs, 1, 1, "app-onramper-swap-button", 6),
            e.ɵɵtemplate(2, Ys, 4, 2, "ng-container", 7),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.isOnramper),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !t.isOnramper);
        }
      }
      function Ws(n, a) {
        1 & n && e.ɵɵelement(0, "app-error-button");
      }
      function Gs(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Us, 3, 2, "ng-container", 1),
            e.ɵɵtemplate(
              2,
              Ws,
              1,
              0,
              "ng-template",
              null,
              5,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵreference(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !t.text || t.loading)("ngIfElse", i);
        }
      }
      function Ks(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Gs, 4, 2, "ng-container", 4),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1), e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.error$));
        }
      }
      function Xs(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(
              1,
              $s,
              1,
              0,
              "ng-template",
              null,
              2,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵtemplate(3, Ks, 3, 3, "ng-container", 1),
            e.ɵɵpipe(4, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(2),
            i = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngIf",
              !1 === e.ɵɵpipeBind1(4, 2, i.isUpdateRateStatus$)
            )("ngIfElse", t);
        }
      }
      let jt = (() => {
        class n {
          constructor(t, i, r, s, c) {
            (this.swapButtonContainerService = t),
              (this.swapButtonContainerErrorsService = i),
              (this.swapButtonService = r),
              (this.authService = s),
              (this.iframeService = c),
              (this.withApproveButton = !1),
              (this.isOnramper = !1),
              (this.nonEvmChangenow = !1),
              (this.onApproveClick = new e.EventEmitter()),
              (this.onSwapClick = new e.EventEmitter()),
              (this.onBuyNativeClick = new e.EventEmitter()),
              (this.onUpdateRateClick = new e.EventEmitter()),
              (this.user$ = this.authService.currentUser$.pipe(
                (0, x.U)((l) => l?.address)
              )),
              (this.isUpdateRateStatus$ =
                this.swapButtonContainerService.isUpdateRateStatus$),
              (this.error$ = this.swapButtonContainerErrorsService.error$),
              (this.isIframe = this.iframeService.isIframe);
          }
          set status(t) {
            this.swapButtonContainerService.tradeStatus = t;
          }
          set idPrefix(t) {
            this.swapButtonContainerService.idPrefix = t || "";
          }
          get idPrefix() {
            return this.swapButtonContainerService.idPrefix;
          }
          set error(t) {
            this.swapButtonContainerErrorsService.setRubicError(t);
          }
          set minAmount(t) {
            this.swapButtonContainerErrorsService.setMinAmountError(t);
          }
          set maxAmount(t) {
            this.swapButtonContainerErrorsService.setMaxAmountError(t);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Re),
              e.ɵɵdirectiveInject(Qe),
              e.ɵɵdirectiveInject(On),
              e.ɵɵdirectiveInject(U.e),
              e.ɵɵdirectiveInject(Q.b)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-swap-button-container"]],
            inputs: {
              needApprove: "needApprove",
              withApproveButton: "withApproveButton",
              status: "status",
              idPrefix: "idPrefix",
              error: "error",
              minAmount: "minAmount",
              maxAmount: "maxAmount",
              buttonText: "buttonText",
              isOnramper: "isOnramper",
              nonEvmChangenow: "nonEvmChangenow",
            },
            outputs: {
              onApproveClick: "onApproveClick",
              onSwapClick: "onSwapClick",
              onBuyNativeClick: "onBuyNativeClick",
              onUpdateRateClick: "onUpdateRateClick",
            },
            decls: 4,
            vars: 4,
            consts: [
              ["connectWalletButton", ""],
              [4, "ngIf", "ngIfElse"],
              ["updateRateButton", ""],
              [3, "onClick"],
              [4, "ngLet"],
              ["errorButton", ""],
              [3, "buttonText", "onBuyNativeClick", "onSwapClick", 4, "ngIf"],
              [4, "ngIf"],
              [3, "buttonText", "onBuyNativeClick", "onSwapClick"],
              ["swapButton", ""],
              [3, "buttonText", "onApproveClick", "onSwapClick"],
              [3, "buttonText", "onClick"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵtemplate(
                    0,
                    Ls,
                    1,
                    0,
                    "ng-template",
                    null,
                    0,
                    e.ɵɵtemplateRefExtractor
                  ),
                  e.ɵɵtemplate(2, Xs, 5, 4, "ng-container", 1),
                  e.ɵɵpipe(3, "async")),
                2 & i)
              ) {
                const s = e.ɵɵreference(1);
                e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "ngIf",
                    r.nonEvmChangenow || e.ɵɵpipeBind1(3, 2, r.user$)
                  )("ngIfElse", s);
              }
            },
            dependencies: [m.O5, F.e, Pn, Cs, xs, Os, Ds, Hs, m.Ov],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}html.iframe   [_nghost-%COMP%]{width:180px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Zs = p(58593);
      let Qs = (() => {
        class n {
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-panel-error-content"]],
            inputs: {
              providerPanelData: "providerPanelData",
              errorTranslateKey: "errorTranslateKey",
            },
            decls: 7,
            vars: 7,
            consts: [
              [1, "provider-panel__body"],
              [1, "provider-panel__left"],
              [1, "provider-panel__amount", "provider-panel__amount_error"],
              [
                "tuiHintMode",
                "error",
                1,
                "provider-panel__hint",
                "provider-panel__hint_error",
                3,
                "inlineSVG",
                "tuiHint",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2),
                e.ɵɵtext(3),
                e.ɵɵpipe(4, "translate"),
                e.ɵɵelement(5, "div", 3),
                e.ɵɵpipe(6, "translate"),
                e.ɵɵelementEnd()()()),
                2 & i &&
                  (e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(4, 3, "errors.tradingIsNotAvailable"),
                    " "
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(6, 5, r.errorTranslateKey)
                  ));
            },
            dependencies: [G.d$, H.D, R.X$],
            styles: [
              ".provider-panel__amount[_ngcontent-%COMP%]{font-size:14px;letter-spacing:normal}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      const Js = function (n) {
        return { "provider-panel__best-rate_selected": n };
      };
      function qs(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 6),
            e.ɵɵelement(1, "div", 7),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "ngClass",
            e.ɵɵpureFunction1(2, Js, t.providerPanelData.isSelected)
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("inlineSVG", "assets/images/icons/Best-rate.svg");
        }
      }
      function ec(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "bigNumberFormat"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind2(2, 1, t.tradePanelData.gasFeeInEth, 5),
              " ETH "
            );
        }
      }
      function tc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "bigNumberFormat"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " \u2248 $",
              e.ɵɵpipeBind3(2, 1, t.tradePanelData.gasFeeInUsd, 2, !0),
              " "
            );
        }
      }
      function nc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 8),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵtemplate(3, ec, 3, 4, "ng-container", 9),
            e.ɵɵtemplate(4, tc, 3, 5, "ng-container", 9),
            e.ɵɵelement(5, "div", 10),
            e.ɵɵpipe(6, "translate"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 5, "instantTrades.gasFee"),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "ngIf",
              "small" !== t.providerPanelData.appearance &&
                (null == t.tradePanelData.gasFeeInEth
                  ? null
                  : t.tradePanelData.gasFeeInEth.isFinite())
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null == t.tradePanelData.gasFeeInUsd
                ? null
                : t.tradePanelData.gasFeeInUsd.isFinite()
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(6, 7, "instantTrades.gasFeeMessage")
            );
        }
      }
      const ic = function (n) {
        return { "provider-panel__body_best": n };
      };
      let rc = (() => {
        class n {
          constructor(t, i, r) {
            (this.cdr = t), (this.swapFormService = i), (this.destroy$ = r);
          }
          ngOnInit() {
            (this.displayGas =
              this.tradePanelData?.blockchain === o.BLOCKCHAIN_NAME.ETHEREUM),
              this.swapFormService.inputValue$
                .pipe((0, P.R)(this.destroy$))
                .subscribe((t) => {
                  const { toToken: i } = t;
                  this.toToken?.price !== i?.price &&
                    ((this.toToken = i), this.cdr.markForCheck());
                });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-panel-content"]],
            inputs: {
              tradePanelData: "tradePanelData",
              providerPanelData: "providerPanelData",
              isBestProvider: "isBestProvider",
            },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 9,
            vars: 13,
            consts: [
              [1, "provider-panel__body", 3, "ngClass"],
              ["class", "provider-panel__best-rate", 3, "ngClass", 4, "ngIf"],
              [1, "provider-panel__left"],
              [1, "provider-panel__amount"],
              [1, "provider-panel__right"],
              ["class", "provider-panel__token-gas-fee", 4, "ngIf"],
              [1, "provider-panel__best-rate", 3, "ngClass"],
              [3, "inlineSVG"],
              [1, "provider-panel__token-gas-fee"],
              [4, "ngIf"],
              [1, "provider-panel__hint", 3, "inlineSVG", "tuiHint"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtemplate(1, qs, 2, 4, "div", 1),
                e.ɵɵelementStart(2, "div", 2)(3, "div", 3),
                e.ɵɵtext(4),
                e.ɵɵpipe(5, "withRound"),
                e.ɵɵpipe(6, "bigNumberFormat"),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(7, "div", 4),
                e.ɵɵtemplate(8, nc, 7, 9, "div", 5),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(11, ic, r.isBestProvider)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.isBestProvider && r.tradePanelData),
                  e.ɵɵadvance(2),
                  e.ɵɵclassProp("tui-skeleton", !r.tradePanelData),
                  e.ɵɵadvance(1),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind2(
                      5,
                      6,
                      e.ɵɵpipeBind1(
                        6,
                        9,
                        null == r.tradePanelData
                          ? null
                          : r.tradePanelData.amount
                      ),
                      "toClosestValue"
                    ),
                    " "
                  ),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty(
                    "ngIf",
                    r.displayGas &&
                      ((null == r.tradePanelData ||
                      null == r.tradePanelData.gasFeeInEth
                        ? null
                        : r.tradePanelData.gasFeeInEth.isFinite()) ||
                        (null == r.tradePanelData ||
                        null == r.tradePanelData.gasFeeInUsd
                          ? null
                          : r.tradePanelData.gasFeeInUsd.isFinite()))
                  ));
            },
            dependencies: [m.mk, m.O5, G.d$, H.D, R.X$, be.N, ye.f],
            styles: ["[_nghost-%COMP%]{width:100%}"],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function oc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "app-panel-content", 5), 2 & n)) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("providerPanelData", t.providerPanelData)(
            "tradePanelData",
            t.tradePanelData
          )("isBestProvider", t.isBestProvider);
        }
      }
      function ac(n, a) {
        if ((1 & n && e.ɵɵelement(0, "app-panel-error-content", 6), 2 & n)) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("providerPanelData", t.providerPanelData)(
            "errorTranslateKey",
            t.errorTranslateKey
          );
        }
      }
      const sc = function (n, a, t) {
        return {
          "provider-panel__content_best-rate": n,
          "provider-panel__content_selected": a,
          "provider-panel__content_small": t,
        };
      };
      let cc = (() => {
        class n {
          constructor() {
            (this.isBestProvider = !1),
              (this.onSelectProvider = new e.EventEmitter());
          }
          ngOnInit() {
            this.setupProviderPanelData();
          }
          setupProviderPanelData() {
            const t = this.providerData,
              i = t.tradeStatus === le.ERROR;
            (this.providerPanelData = {
              label: t.label,
              isSelected: t.isSelected,
              hasError: i,
              loading:
                t.tradeStatus === le.CALCULATION ||
                t.tradeStatus === le.TX_IN_PROGRESS,
              appearance: this.isBestProvider ? "normal" : "small",
            }),
              i
                ? this.setupError(t.error)
                : t.trade && this.setupTradePanelData(t.trade);
          }
          setupTradePanelData(t) {
            const i =
              t instanceof o.EvmOnChainTrade &&
              t.gasFeeInfo?.gasLimit?.isFinite()
                ? {
                    gasLimit: t.gasFeeInfo.gasLimit.toFixed(),
                    gasFeeInUsd: t.gasFeeInfo.gasFeeInUsd,
                    gasFeeInEth: t.gasFeeInfo.gasFeeInEth,
                  }
                : {};
            this.tradePanelData = {
              blockchain: t.from.blockchain,
              amount: t.to.tokenAmount,
              ...i,
            };
          }
          setupError(t) {
            this.errorTranslateKey =
              t?.type === Zs.Q.TEXT
                ? t.translateKey || t.message
                : "errors.rubicError";
          }
          selectProvider() {
            !this.providerPanelData.hasError &&
              !this.providerPanelData.loading &&
              this.onSelectProvider.emit();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-provider-panel"]],
            inputs: {
              providerData: "providerData",
              isBestProvider: "isBestProvider",
            },
            outputs: { onSelectProvider: "onSelectProvider" },
            decls: 7,
            vars: 13,
            consts: [
              [1, "trade-panel"],
              [1, "provider-panel__content", 3, "ngClass", "click"],
              [1, "provider-panel__provider-name"],
              [
                3,
                "providerPanelData",
                "tradePanelData",
                "isBestProvider",
                4,
                "ngIf",
              ],
              [3, "providerPanelData", "errorTranslateKey", 4, "ngIf"],
              [3, "providerPanelData", "tradePanelData", "isBestProvider"],
              [3, "providerPanelData", "errorTranslateKey"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1),
                e.ɵɵlistener("click", function () {
                  return r.selectProvider();
                }),
                e.ɵɵelementStart(2, "div", 2),
                e.ɵɵtext(3),
                e.ɵɵpipe(4, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(5, oc, 1, 3, "app-panel-content", 3),
                e.ɵɵtemplate(6, ac, 1, 2, "app-panel-error-content", 4),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵclassProp(
                    "provider-panel_loading",
                    r.providerPanelData.loading
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction3(
                      9,
                      sc,
                      r.isBestProvider,
                      r.providerPanelData.isSelected,
                      "small" === r.providerPanelData.appearance
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵtextInterpolate2(
                    " ",
                    e.ɵɵpipeBind1(4, 7, "common.via"),
                    " ",
                    r.providerPanelData.label,
                    " "
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngIf", !r.providerPanelData.hasError),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.providerPanelData.hasError));
            },
            dependencies: [m.mk, m.O5, Qs, rc, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}  .provider-panel{height:100%;transition:opacity ease-in-out .3s}@media (max-width: 651px){  .provider-panel .provider-panel__body{flex-direction:column;padding-top:10px}  .provider-panel .provider-panel__right{align-items:flex-start}  .provider-panel .provider-panel__left{margin-right:0}  .provider-panel .provider-panel__left,   .provider-panel .provider-panel__token-usd-price{margin-bottom:5px}}  .provider-panel_loading{opacity:.45}  .provider-panel__content{position:relative;box-sizing:border-box;padding:25px 20px 20px;background:var(--primary-background);border:1px solid transparent;border-left-width:5px;border-radius:14px;transition:.2s ease-in-out}  .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_error){cursor:pointer}  .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_error):hover{box-shadow:10px 10px 10px #3a5f451a,-15px -15px 20px #fff3}html.dark[_nghost-%COMP%]     .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_error):hover, html.dark   [_nghost-%COMP%]     .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_error):hover{box-shadow:-7px -7px 6px 2px #03060433}  .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_selected):not(  .provider-panel__content_error):hover{border:1px solid var(--primary-color);border-left-width:5px}  .provider-panel__content:not(  .provider-panel__content_loading):not(  .provider-panel__content_selected):not(  .provider-panel__content_error):hover .provider-panel__best-rate{border-top-color:var(--primary-color);border-right-color:var(--primary-color)}  .provider-panel__content_error{border-color:#dfcb5f}  .provider-panel__content_selected{color:var(--primary-text-invert);background-color:var(--primary-color);border-color:var(--primary-color)}  .provider-panel__content_selected .provider-panel__provider-name{color:var(--primary-text-invert);background:linear-gradient(90deg,rgb(151,56,0) 0%,rgb(253,99,0) 78%,rgb(112,39,0) 100%)!important;color:#fff!important;box-shadow:0 3px 6px #00000029;border:none!important}  .provider-panel__content_selected .provider-panel__hint   svg path{fill:var(--primary-text-invert)}  .provider-panel__content_best-rate{color:var(--primary-text);border-left-color:var(--primary-color);border-left-width:5px}  .provider-panel__content_best-rate.provider-panel__content_selected{color:#fff!important;background:linear-gradient(90deg,rgb(151,56,0) 0%,rgb(253,99,0) 78%,rgb(112,39,0) 100%)!important;border:none!important}  .provider-panel__content_small{display:flex;align-items:center;height:100%}  .provider-panel__content_small .provider-panel__token-usd-price{display:none}  .provider-panel__content_small .provider-panel__body{flex-direction:column;align-items:flex-start}  .provider-panel__content_small .provider-panel__amount{display:flex;align-items:center;font-size:20px}@media (max-width: 420px){  .provider-panel__content_small .provider-panel__amount_error{font-size:16px}}  .provider-panel__best-rate{position:absolute;top:-8px;right:-8px;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:28px;height:28px;color:#000;background:var(--primary-background);border-radius:100%;box-shadow:0 3px 6px #00000029}  .provider-panel__best-rate_selected{background-color:var(--primary-color)}  .provider-panel__best-rate_selected   svg path{fill:#fff}  .provider-panel__provider-name{position:absolute;top:-5px;left:25px;padding:2px 6px;color:var(--primary-text);font-weight:300;font-size:14px;text-transform:capitalize;background:var(--solid-background);border:1px solid var(--transparent-line);border-radius:4px}  .provider-panel__body{display:flex;flex-wrap:wrap}  .provider-panel__left{display:flex;flex:4;align-items:center;width:100%;margin-right:10px}  .provider-panel__right{display:flex;flex:6;flex-direction:column;align-items:flex-end;font-size:14px}  .provider-panel__amount{display:flex;padding-left:2px;overflow-x:auto;font-weight:300;font-size:24px;line-height:1.2;letter-spacing:2px;scrollbar-width:none}  .provider-panel__amount::-webkit-scrollbar{display:none}  .provider-panel__amount_error{display:block;width:100%;font-size:20px;letter-spacing:1px}@media (max-width: 420px){  .provider-panel__amount_error{font-size:16px}}  .provider-panel__token-usd-price{margin-bottom:10px;letter-spacing:.1em}  .provider-panel__token-gas-fee{display:flex;align-items:center}  .provider-panel__hint{display:flex;align-items:center;margin-bottom:5px;margin-left:10px;cursor:pointer}  .provider-panel__hint_error{position:relative;top:3px;float:right}  .provider-panel__hint_error   svg path{fill:#dfcb5f}  .provider-panel .tui-skeleton.provider-panel__amount{width:100%;min-height:24px}  .provider-panel .tui-skeleton.provider-panel__token-usd-price,   .provider-panel .tui-skeleton.provider-panel__token-gas-fee{min-height:20px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function lc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "button", 5),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView((r.showAllProviders = !r.showAllProviders));
            }),
            e.ɵɵtext(1, " Other Dexes "),
            e.ɵɵelement(2, "img", 6),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(2), e.ɵɵclassProp("reverted", t.showAllProviders);
        }
      }
      function pc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 7)(1, "app-provider-panel", 8),
            e.ɵɵlistener("onSelectProvider", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext();
              return e.ɵɵresetView(c.onSelectProvider.emit(s));
            }),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = a.index;
          e.ɵɵadvance(1),
            e.ɵɵproperty("providerData", t)("isBestProvider", 0 === i);
        }
      }
      function dc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 7)(1, "app-provider-panel", 10),
            e.ɵɵlistener("onSelectProvider", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(2);
              return e.ɵɵresetView(c.onSelectProvider.emit(s));
            }),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = a.$implicit;
          e.ɵɵadvance(1), e.ɵɵproperty("providerData", t);
        }
      }
      function mc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, dc, 2, 1, "div", 9),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1), e.ɵɵproperty("ngForOf", t.providersData.slice(3));
        }
      }
      let _c = (() => {
        class n {
          constructor() {
            (this.onSelectProvider = new e.EventEmitter()),
              (this.showAllProviders = !1);
          }
          trackByFn(t, i) {
            return (
              i.name + i.tradeStatus + i.isSelected + i.trade?.to.tokenAmount
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-providers-panels-container"]],
            inputs: { providersData: "providersData" },
            outputs: { onSelectProvider: "onSelectProvider" },
            decls: 7,
            vars: 4,
            consts: [
              [1, "flex"],
              ["class", "providers__toggler", 3, "click", 4, "ngIf"],
              [1, "providers"],
              [
                "class",
                "providers__item",
                4,
                "ngFor",
                "ngForOf",
                "ngForTrackBy",
              ],
              [4, "ngIf"],
              [1, "providers__toggler", 3, "click"],
              [
                "src",
                "assets/images/swaps/icons/show-more-arrow.svg",
                "alt",
                "arrow",
              ],
              [1, "providers__item"],
              [3, "providerData", "isBestProvider", "onSelectProvider"],
              ["class", "providers__item", 4, "ngFor", "ngForOf"],
              [3, "providerData", "onSelectProvider"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "h3"),
                e.ɵɵtext(2, "Routers"),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(3, lc, 3, 2, "button", 1),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(4, "div", 2),
                e.ɵɵtemplate(5, pc, 2, 2, "div", 3),
                e.ɵɵtemplate(6, mc, 2, 1, "ng-container", 4),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵadvance(3),
                  e.ɵɵproperty("ngIf", r.providersData.length > 3),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngForOf", r.providersData.slice(0, 3))(
                    "ngForTrackBy",
                    r.trackByFn
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.showAllProviders));
            },
            dependencies: [m.sg, m.O5, cc],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.providers[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;grid-gap:20px}.providers__item[_ngcontent-%COMP%]:first-child{width:100%}.providers__item[_ngcontent-%COMP%]:not(:first-child){width:calc(50% - 10px)}@media (max-width: 651px){.providers__item[_ngcontent-%COMP%]:not(:first-child){width:100%}}.providers__item[_ngcontent-%COMP%]:not(:first-child)  .provider-panel__amount{width:100%}.providers__item[_ngcontent-%COMP%]:not(:nth-child(2n+1)):last-child{width:100%}.providers__item[_ngcontent-%COMP%]:not(:nth-child(2n+1)):last-child     .provider-panel__body{flex-direction:row}.providers__toggler[_ngcontent-%COMP%]{display:flex;grid-gap:8px;align-items:center;justify-content:center;color:var(--primary-color);font-weight:500;font-size:15px;background:black;padding:15px;border-radius:30px;color:#fff;margin-top:auto;margin-bottom:auto;background:var(--tui-secondary)}.providers__toggler[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{position:relative;top:-1px;width:13px}.providers__toggler[_ngcontent-%COMP%]   img.reverted[_ngcontent-%COMP%]{transform:rotate(180deg)}.flex[_ngcontent-%COMP%]{justify-content:space-between;display:flex;width:100%;margin-bottom:15px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function uc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelement(3, "div", 31),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 3, "errors.tradingIsNotAvailable"),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(4, 5, t.errorText)
            );
        }
      }
      function gc(n, a) {
        1 & n && e.ɵɵelement(0, "app-iframe-asset-type-indicator", 33),
          2 & n && e.ɵɵproperty("assetType", a.ngIf);
      }
      function hc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, gc, 1, 1, "app-iframe-asset-type-indicator", 32),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null == t.toToken ? null : t.toToken.blockchain
            );
        }
      }
      function fc(n, a) {
        1 & n && e.ɵɵelement(0, "app-tokens-rate");
      }
      const vc = function (n) {
        return { decimals: n };
      };
      function Cc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "bigNumberFormat"),
            e.ɵɵpipe(3, "withRound"),
            e.ɵɵpipe(4, "bigNumberFormat"),
            e.ɵɵtemplate(5, fc, 1, 0, "app-tokens-rate", 3),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t
                ? e.ɵɵpipeBind1(2, 1, i.fromAmount)
                : e.ɵɵpipeBind3(
                    3,
                    3,
                    e.ɵɵpipeBind1(4, 7, i.toAmount),
                    "toClosestValue",
                    e.ɵɵpureFunction1(
                      9,
                      vc,
                      null == i.toToken ? null : i.toToken.decimals
                    )
                  ),
              " "
            );
        }
      }
      const xc = function (n, a) {
        return {
          "instant-trade-bottom-form__token-amount_loading": n,
          "instant-trade-bottom-form__token-amount_placeholder": a,
        };
      };
      function bc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 34),
            e.ɵɵtemplate(1, Cc, 6, 11, "ng-container", 26),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext();
          e.ɵɵproperty(
            "ngClass",
            e.ɵɵpureFunction2(
              2,
              xc,
              i && r.tradeStatus === r.TRADE_STATUS.LOADING,
              !(r.selectedProvider || t)
            )
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              (r.selectedProvider && r.toAmount) || (t && r.fromAmount)
            );
        }
      }
      function yc(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 35),
          e.ɵɵelement(1, "div", 36),
          e.ɵɵelementEnd());
      }
      function Sc(n, a) {
        if (
          (1 & n && (e.ɵɵelementStart(0, "div"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(5);
          let i;
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " Est. fee $",
              null == (i = t.getGas(t.selectedProvider)) ? null : i.toFixed(2),
              " "
            );
        }
      }
      function Tc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 38),
            e.ɵɵelement(1, "app-tokens-rate"),
            e.ɵɵtemplate(2, Sc, 2, 1, "div", 26),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", !t && i.getGas(i.selectedProvider).gt(0));
        }
      }
      function Oc(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, Tc, 3, 1, "div", 37),
          e.ɵɵelementContainerEnd());
      }
      const Pc = function (n) {
        return { "instant-trade-bottom-form__amount__output_error": n };
      };
      function wc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 27),
            e.ɵɵtemplate(1, uc, 5, 7, "ng-container", 26),
            e.ɵɵtemplate(2, hc, 2, 1, "ng-container", 28),
            e.ɵɵtemplate(3, bc, 2, 5, "div", 29),
            e.ɵɵtemplate(
              4,
              yc,
              2,
              0,
              "ng-template",
              null,
              30,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵtemplate(6, Oc, 2, 0, "ng-container", 26),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵreference(5),
            r = e.ɵɵnextContext().ngLet,
            s = e.ɵɵnextContext();
          e.ɵɵproperty(
            "ngClass",
            e.ɵɵpureFunction1(6, Pc, s.errorText && !s.isIframe)
          ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", s.errorText && !s.isIframe && s.fromAmount),
            e.ɵɵadvance(1),
            e.ɵɵproperty("onlyFrame", "vertical"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", r || s.tradeStatus !== s.TRADE_STATUS.LOADING)(
              "ngIfElse",
              i
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngIf", s.selectedProvider || t);
        }
      }
      function kc(n, a) {
        1 & n && e.ɵɵelement(0, "app-target-network-address");
      }
      function Ac(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 20)(1, "main", 21)(2, "div", 22)(
              3,
              "div",
              23
            ),
            e.ɵɵelement(4, "app-select-asset-button-tokens", 24),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(5, wc, 7, 8, "div", 25),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(6, kc, 1, 0, "app-target-network-address", 26),
            e.ɵɵpipe(7, "async"),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(5),
            e.ɵɵproperty("ngLet", t.allowTrade && t.ethWethTrade),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              e.ɵɵpipeBind1(7, 2, t.displayTargetAddressInput$)
            );
        }
      }
      function Mc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 47),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.openModal());
            }),
            e.ɵɵelementStart(1, "div", 48),
            e.ɵɵtext(2, " Premium Benefits "),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "div", 49),
            e.ɵɵtext(4),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(4), e.ɵɵtextInterpolate1(" ", t.amountToShow, " ");
        }
      }
      function Ec(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-providers-panels-container", 50),
            e.ɵɵlistener("onSelectProvider", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(2);
              return e.ɵɵresetView(s.onSelectProvider(r));
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵproperty("providersData", t.providersData);
        }
      }
      const Ic = function (n, a) {
        return { "toggled-on": n, "toggled-off": a };
      };
      function Nc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 39)(2, "div", 40)(3, "label", 41),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.requestChain());
            }),
            e.ɵɵelement(4, "div", 42)(5, "span", 43),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(6, "div", 44),
            e.ɵɵtext(7, "Anti-Mev Protection"),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(8, "div", 40),
            e.ɵɵtemplate(9, Mc, 5, 1, "div", 45),
            e.ɵɵpipe(10, "async"),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(11, Ec, 1, 1, "app-providers-panels-container", 46),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          let i;
          e.ɵɵadvance(4),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(5, Ic, t.isToggled, !t.isToggled)
            ),
            e.ɵɵadvance(5),
            e.ɵɵproperty(
              "ngLet",
              null == (i = e.ɵɵpipeBind1(10, 3, t.getCurrentUser$))
                ? null
                : i.address
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", t.allowTrade && !t.ethWethTrade);
        }
      }
      function Rc(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 15), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", i.returnAmountOfToken(t), " ");
        }
      }
      let Dc = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _, g, C, b, k, y, X, te, oe) {
            (this.http = t),
              (this.cdr = i),
              (this.targetNetworkAddressService = r),
              (this.swapFormService = s),
              (this.instantTradeService = c),
              (this.errorService = l),
              (this.authService = d),
              (this.tokensService = _),
              (this.settingsService = g),
              (this.iframeService = C),
              (this.gtmService = b),
              (this.queryParamsService = k),
              (this.dialogService = y),
              (this.refreshService = X),
              (this.injector = te),
              (this.destroy$ = oe),
              (this.allowRefreshChange = new e.EventEmitter()),
              (this.instantTradeInfoChange = new e.EventEmitter()),
              (this.tradeStatusChange = new e.EventEmitter()),
              (this.TRADE_STATUS = h),
              (this.isToggled = !1),
              (this.amountToShow = "GET DISCOUNT"),
              (this.getCurrentUser$ = this.authService.currentUser$),
              (this.anotherAmountToShow = "Connect Wallet"),
              (this.displayTargetAddressInput$ =
                this.settingsService.instantTradeValueChanges.pipe(
                  (0, Pe.O)(this.settingsService.instantTradeValue),
                  (0, x.U)((he) => he.showReceiverAddress)
                )),
              (this.isTradeSelectedByUser = !1),
              (this.onCalculateTrade$ = new Ce.x()),
              (this.isOnramper$ = this.queryParamsService.queryParams$.pipe(
                (0, x.U)((he) => Boolean(he.onramperTxId))
              )),
              (this.isIframe = this.iframeService.isIframe);
          }
          ngAfterViewInit() {
            this.interval = setInterval(() => {
              console.log("setInterval Working"),
                this.returnAmountOfDiscount(this.authService.userAddress);
            }, 5e3);
          }
          openModal() {
            var t = document.getElementById("myModal"),
              i = document.getElementsByClassName("close")[0];
            (t.style.display = "block"),
              (i.onclick = function () {
                t.style.display = "none";
              }),
              (window.onclick = function (r) {
                r.target == t && (t.style.display = "none");
              });
          }
          returnAmountOfToken(t) {
            return t == this.otherThisOldAddress
              ? this.anotherAmountToShow.toLocaleString("en-US")
              : ((this.otherThisOldAddress = t),
                null == t
                  ? ((this.anotherAmountToShow = 0),
                    this.anotherAmountToShow.toLocaleString("en-US"))
                  : void this.http
                      .get(
                        "https://api.protocolbuilders.com/token-contract-balance/eth/0x8eDc6F7d2F23C10653972E611f707ce0562d61B1/" +
                          t
                      )
                      .subscribe((r) => {
                        let s = r.amount;
                        return (
                          (s /= 10 ** 18),
                          (this.anotherAmountToShow = s),
                          this.anotherAmountToShow.toLocaleString("en-US")
                        );
                      }));
          }
          returnAmountOfDiscount(t) {
            if (t != this.oldAddress)
              return (
                (this.oldAddress = t),
                null == t
                  ? ((this.amountToShow = "GET DISCOUNT"),
                    void this.cdr.markForCheck())
                  : void this.http
                      .get(
                        "https://api.protocolbuilders.com/token-contract-balance/eth/0x8eDc6F7d2F23C10653972E611f707ce0562d61B1/" +
                          t
                      )
                      .subscribe((r) => {
                        let s = r.amount;
                        (s /= 10 ** 18),
                          console.log("Breakpoint"),
                          s >= 500 && (this.amountToShow = "10% OFF"),
                          s >= 2e3 && (this.amountToShow = "25% OFF"),
                          s >= 5e3 && (this.amountToShow = "50% OFF"),
                          this.cdr.markForCheck();
                      })
              );
            this.cdr.markForCheck();
          }
          requestChain() {
            console.log("requestChain"),
              this.isToggled
                ? (this.isToggled = !1)
                : typeof window.ethereum < "u"
                ? window.ethereum
                    .request({
                      method: "wallet_addEthereumChain",
                      params: [
                        {
                          chainId: "0x1",
                          rpcUrls: ["https://rpc.mevblocker.io/"],
                          chainName: "Mev Protection ETH",
                          nativeCurrency: {
                            name: "Ethereum",
                            symbol: "ETH",
                            decimals: 18,
                          },
                        },
                      ],
                    })
                    .then(() => {
                      console.log("User accepted the request to add the RPC."),
                        localStorage.setItem("rpcAdded", "true"),
                        (this.isToggled = !0),
                        this.cdr.detectChanges();
                    })
                    .catch((t) => {
                      console.error(
                        "User rejected the request or an error occurred:",
                        t
                      );
                    })
                : console.log("MetaMask is not installed.");
          }
          get selectedProvider() {
            return this._selectedProvider;
          }
          set selectedProvider(t) {
            (this._selectedProvider = t),
              this.instantTradeInfoChange.emit({
                trade: t?.trade,
                isWrappedType: !!this.ethWethTrade,
              });
          }
          get tradeStatus() {
            return this._tradeStatus;
          }
          set tradeStatus(t) {
            (this._tradeStatus = t), this.tradeStatusChange.emit(t);
          }
          get allowTrade() {
            const t = this.instantTradeService.inputValue;
            return Boolean(
              t.fromBlockchain &&
                t.fromToken &&
                t.toBlockchain &&
                t.toToken &&
                t.fromAmount?.gt(0)
            );
          }
          get toAmount() {
            return this.selectedProvider?.trade
              ? this.selectedProvider.trade.to.tokenAmount
              : null;
          }
          get isFromNative() {
            return o.Web3Pure[
              o.BlockchainsInfo.getChainType(this.fromToken.blockchain)
            ].isNativeAddress(this.fromToken.address);
          }
          ngOnInit() {
            "true" === localStorage.getItem("rpcAdded") &&
              (this.isToggled = !0),
              this.setupNormalTradesCalculation(),
              this.setupHiddenTradesCalculation(),
              (this.tradeStatus = h.DISABLED),
              this.swapFormService.inputValueDistinct$
                .pipe((0, P.R)(this.destroy$))
                .subscribe(() => {
                  this.setupSwapForm();
                }),
              this.swapFormService.toToken$
                .pipe((0, P.R)(this.destroy$))
                .subscribe((i) => {
                  (0, q.tb)(this.toToken, i) &&
                    this.toToken?.price !== i?.price &&
                    ((this.toToken = i), this.cdr.markForCheck());
                }),
              this.settingsService.instantTradeValueChanges
                .pipe(
                  (0, ce.x)(
                    (i, r) =>
                      i.disableMultihops === r.disableMultihops &&
                      i.slippageTolerance === r.slippageTolerance
                  ),
                  (0, P.R)(this.destroy$)
                )
                .subscribe(() => {
                  this.conditionalCalculate("normal");
                }),
              this.authService.currentUser$
                .pipe(
                  (0, Z.h)((i) => !!i?.address),
                  (0, P.R)(this.destroy$)
                )
                .subscribe(() => {
                  this.conditionalCalculate("normal");
                }),
              this.refreshService.onRefresh$
                .pipe((0, P.R)(this.destroy$))
                .subscribe(({ isForced: i }) => {
                  this.conditionalCalculate(
                    i || this.settingsService.instantTradeValue.autoRefresh
                      ? "normal"
                      : "hidden"
                  );
                });
          }
          isSupportedOnChainNetwork(t) {
            return Object.keys(Si).some((i) => i === t);
          }
          setupSwapForm() {
            const { fromAssetType: t, toBlockchain: i } =
              this.swapFormService.inputValue;
            if (!o.BlockchainsInfo.isBlockchainName(t) || t !== i) return;
            const r = this.instantTradeService.inputValue;
            (this.fromAmount = r.fromAmount),
              (this.fromToken = r.fromToken),
              (this.toToken = r.toToken),
              (this.toBlockchain = r.toBlockchain),
              (this.errorText =
                !this.isSupportedOnChainNetwork(r.fromBlockchain) &&
                this.fromAmount &&
                this.fromAmount.gt(0)
                  ? "Chosen network is not supported for instant trades"
                  : ""),
              (this.ethWethTrade = this.instantTradeService.getEthWethTrade()),
              this.allowRefreshChange.emit(!this.ethWethTrade),
              (this.currentBlockchain === r.fromBlockchain ||
                r.fromBlockchain !== r.toBlockchain ||
                ((this.currentBlockchain = r.fromBlockchain),
                this.initiateProviders(this.currentBlockchain))) &&
                this.conditionalCalculate("normal");
          }
          initiateProviders(t) {
            return this.isSupportedOnChainNetwork(t)
              ? ((this.providersData = Si[t]), !0)
              : ((this.providersData = []), !1);
          }
          conditionalCalculate(t) {
            const { fromBlockchain: i, toBlockchain: r } =
              this.instantTradeService.inputValue;
            i === r &&
              (i !== r ||
                !this.isSupportedOnChainNetwork(this.currentBlockchain) ||
                this.tradeStatus === h.APPROVE_IN_PROGRESS ||
                this.tradeStatus === h.SWAP_IN_PROGRESS ||
                this.onCalculateTrade$.next(t));
          }
          setupNormalTradesCalculation() {
            this.calculateTradeSubscription$ ||
              (this.calculateTradeSubscription$ = this.onCalculateTrade$
                .pipe(
                  (0, Z.h)((t) => "normal" === t),
                  (0, Ve.b)(200),
                  (0, N.w)(() => {
                    if (!this.swapFormService.isFilled)
                      return this.setTradeStateIsNotAllowed(), (0, V.of)(null);
                    if (this.ethWethTrade)
                      return this.setTradeStateIsEthWethSwap(), (0, V.of)(null);
                    this.setProvidersStateCalculating(),
                      this.refreshService.setRefreshing();
                    const i =
                        this.queryParamsService.disabledProviders &&
                        this.queryParamsService.enabledBlockchains
                          ? this.getFakeTrades()
                          : this.instantTradeService.calculateTrades(
                              this.fromToken,
                              this.fromAmount.toFixed(),
                              this.toToken
                            ),
                      r = this.tokensService.getAndUpdateTokenBalance(
                        this.fromToken
                      );
                    return (0, yn.D)([i, r]).pipe(
                      (0, N.w)(
                        ([s]) => (
                          (this.hiddenProvidersTrades = null),
                          this.setupProviders(s)
                        )
                      )
                    );
                  }),
                  (0, P.R)(this.destroy$)
                )
                .subscribe(() => {
                  this.refreshService.setStopped(), this.cdr.markForCheck();
                }));
          }
          setTradeStateIsNotAllowed() {
            (this.tradeStatus = h.DISABLED),
              (this.selectedProvider = null),
              (this.isTradeSelectedByUser = !1),
              this.swapFormService.outputControl.patchValue({
                toAmount: new M.Z(NaN),
              });
          }
          setTradeStateIsEthWethSwap() {
            (this.tradeStatus = h.READY_TO_SWAP),
              (this.selectedProvider = null),
              (this.isTradeSelectedByUser = !1),
              (this.needApprove = !1),
              (this.withApproveButton = this.needApprove),
              this.swapFormService.outputControl.patchValue({
                toAmount: this.fromAmount,
              });
          }
          setProvidersStateCalculating() {
            (this.tradeStatus = h.LOADING),
              (this.providersData = this.providersData.map((t) => ({
                ...t,
                tradeStatus: le.CALCULATION,
              }))),
              this.cdr.detectChanges();
          }
          setupProviders(t) {
            var i = this;
            return (0, O.Z)(function* () {
              const r =
                  Boolean(i.authService.userAddress) &&
                  i.authService.userChainType ===
                    o.BlockchainsInfo.getChainType(i.fromToken.blockchain),
                s = i.providersData.map(
                  (function () {
                    var c = (0, O.Z)(function* (l) {
                      const d = t.find((C) => C?.type === l.name),
                        _ = {
                          name: l.name,
                          label: l.label,
                          isSelected: !1,
                          needApprove: !1,
                          trade: null,
                          tradeStatus: le.ERROR,
                          error: new z.q(
                            "There are not enough liquidity for this swap using chosen DEX."
                          ),
                        };
                      if (!d) return _;
                      if ("error" in d)
                        return { ..._, error: Ze.E.parseError(d.error) };
                      const g =
                        !!r && (yield i.instantTradeService.needApprove(d));
                      return {
                        ...l,
                        isSelected: !1,
                        trade: d,
                        needApprove: g,
                        tradeStatus: le.APPROVAL,
                        error: null,
                      };
                    });
                    return function (l) {
                      return c.apply(this, arguments);
                    };
                  })()
                );
              (i.providersData = yield Promise.all(s)), i.chooseBestProvider();
            })();
          }
          chooseBestProvider() {
            this.sortProviders(),
              this.providersData[0].trade
                ? (this.selectProviderAfterCalculation(),
                  (this.tradeStatus = this.selectedProvider.needApprove
                    ? h.READY_TO_APPROVE
                    : h.READY_TO_SWAP),
                  (this.needApprove = this.selectedProvider.needApprove),
                  (this.withApproveButton = this.needApprove),
                  this.swapFormService.outputControl.patchValue({
                    toAmount: this.selectedProvider.trade.to.tokenAmount,
                  }),
                  this.cdr.detectChanges())
                : ((this.tradeStatus = h.DISABLED),
                  this.instantTradeInfoChange.emit(null),
                  1 === this.providersData.length &&
                    (this.selectedProvider = null));
          }
          sortProviders() {
            this.providersData.sort((t, i) =>
              this.calculateTradeProfit(i.trade).comparedTo(
                this.calculateTradeProfit(t.trade)
              )
            );
          }
          calculateTradeProfit(t) {
            if (!t) return new M.Z(-1 / 0);
            const { to: i } = t;
            if (!i.price.isFinite()) return i.tokenAmount;
            const r = i?.tokenAmount.multipliedBy(i.price),
              s =
                t instanceof o.EvmOnChainTrade &&
                t.gasFeeInfo?.gasFeeInUsd?.isFinite()
                  ? t.gasFeeInfo.gasFeeInUsd
                  : 0;
            return r.minus(s);
          }
          selectProviderAfterCalculation() {
            if (this.isTradeSelectedByUser) {
              const t = this.providersData.findIndex(
                (i) => i.name === this.selectedProvider.name
              );
              (this.selectedProvider = this.providersData[t]),
                this.selectedProvider.trade
                  ? (this.providersData[t].isSelected = !0)
                  : ((this.selectedProvider = this.providersData[0]),
                    (this.providersData[0].isSelected = !0));
            } else
              (this.selectedProvider = this.providersData[0]),
                (this.providersData[0].isSelected = !0);
          }
          setupHiddenTradesCalculation() {
            this.hiddenCalculateTradeSubscription$ ||
              (this.hiddenCalculateTradeSubscription$ = this.onCalculateTrade$
                .pipe(
                  (0, Z.h)(
                    (t) =>
                      "hidden" === t && Boolean(this.authService.userAddress)
                  ),
                  (0, N.w)(() => {
                    if (!this.swapFormService.isFilled) return (0, V.of)(null);
                    this.refreshService.setRefreshing();
                    const t = this.instantTradeService.calculateTrades(
                      this.fromToken,
                      this.fromAmount.toFixed(),
                      this.toToken
                    );
                    return (0, Ne.D)(t).pipe(
                      (0, N.w)((i) => this.getHiddenTradeAndApproveData(i)),
                      (0, fe.b)((i) => {
                        (this.hiddenProvidersTrades = i),
                          this.checkSelectedProviderHiddenData(),
                          this.refreshService.setStopped();
                      }),
                      (0, je.YP)(this.cdr)
                    );
                  }),
                  (0, P.R)(this.destroy$)
                )
                .subscribe());
          }
          onSelectProvider(t) {
            if (
              this.tradeStatus === h.LOADING ||
              this.tradeStatus === h.APPROVE_IN_PROGRESS ||
              this.tradeStatus === h.SWAP_IN_PROGRESS
            )
              return;
            const i = t.name;
            (this.providersData = this.providersData.map((r) => ({
              ...r,
              isSelected: r.name === i,
            }))),
              (this.selectedProvider = this.providersData.find(
                (r) => r.isSelected
              )),
              (this.isTradeSelectedByUser = !0),
              null !== this.selectedProvider.needApprove &&
                ((this.tradeStatus = this.selectedProvider.needApprove
                  ? h.READY_TO_APPROVE
                  : h.READY_TO_SWAP),
                (this.needApprove = this.selectedProvider.needApprove),
                (this.withApproveButton = this.needApprove)),
              this.swapFormService.outputControl.patchValue({
                toAmount: this.selectedProvider.trade.to.tokenAmount,
              }),
              this.checkSelectedProviderHiddenData();
          }
          checkSelectedProviderHiddenData() {
            if (this.hiddenProvidersTrades && this.selectedProvider?.trade) {
              const t = this.hiddenProvidersTrades.find(
                (r) => r.providerName === this.selectedProvider.name
              );
              this.selectedProvider.trade.to.tokenAmount.eq(
                "fulfilled" === t?.status ? t.value.to.tokenAmount : null
              ) || (this.tradeStatus = h.OLD_TRADE_DATA);
            }
          }
          onSetHiddenData() {
            this.setupProviders(
              this.hiddenProvidersTrades?.map((t) => t.value)
            );
          }
          setProviderState(t, i, r, s, c) {
            this.tradeStatus = i;
            const l = this.providersData.find((_) => _.name === t)?.trade,
              d = l instanceof o.EvmOnChainTrade && l.useProxy;
            (this.providersData = this.providersData.map((_) =>
              _.name !== t
                ? d
                  ? { ..._, ...(void 0 !== s && { needApprove: s }) }
                  : _
                : {
                    ..._,
                    ...(r && { tradeStatus: r }),
                    ...(void 0 !== s && { needApprove: s }),
                    ...(c && { isSelected: c }),
                  }
            )),
              void 0 !== s && (this.needApprove = s);
          }
          approveTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              t.selectedProvider || t.errorService.catch(new Ti()),
                t.setProviderState(
                  t.selectedProvider.name,
                  h.APPROVE_IN_PROGRESS
                ),
                t.refreshService.startInProgress();
              const i = t.selectedProvider;
              try {
                yield t.instantTradeService.approve(i.trade),
                  t.setProviderState(
                    i.name,
                    h.READY_TO_SWAP,
                    le.COMPLETED,
                    !1,
                    !0
                  ),
                  (t.isTradeSelectedByUser = !0),
                  t.gtmService.updateFormStep(S.V.INSTANT_TRADE, "approve"),
                  yield t.tokensService.updateNativeTokenBalance(
                    i.trade.from.blockchain
                  );
              } catch (r) {
                t.errorService.catch(r),
                  t.setProviderState(
                    i.name,
                    h.READY_TO_APPROVE,
                    le.APPROVAL,
                    !0
                  );
              }
              t.cdr.detectChanges(), t.refreshService.stopInProgress();
            })();
          }
          createTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              if (
                !t.isSlippageCorrect() ||
                (!t.ethWethTrade &&
                  !(yield t.settingsService.checkSlippageAndPriceImpact(
                    S.V.INSTANT_TRADE,
                    t.selectedProvider.trade
                  )))
              )
                return;
              let i, r;
              t.ethWethTrade
                ? ((i = o.ON_CHAIN_TRADE_TYPE.WRAPPED), (r = t.ethWethTrade))
                : (t.selectedProvider || t.errorService.catch(new Ti()),
                  (i = t.selectedProvider.name),
                  (r = t.selectedProvider.trade)),
                t.setProviderState(i, h.SWAP_IN_PROGRESS, le.TX_IN_PROGRESS),
                t.refreshService.startInProgress();
              try {
                yield t.instantTradeService.createTrade(i, r, () => {
                  t.setProviderState(i, h.READY_TO_SWAP, le.COMPLETED),
                    t.cdr.detectChanges();
                }),
                  t.conditionalCalculate("hidden");
                const {
                  fromAddress: s,
                  blockchain: c,
                  toAddress: l,
                } = Ke.getItSwapParams(r);
                yield t.tokensService.updateTokenBalancesAfterItSwap(
                  { address: s, blockchain: c },
                  { address: l, blockchain: c }
                );
              } catch (s) {
                t.errorService.catch(s),
                  t.setProviderState(i, h.READY_TO_SWAP, le.COMPLETED),
                  t.cdr.detectChanges();
              }
              t.refreshService.stopInProgress();
            })();
          }
          getHiddenTradeAndApproveData(t) {
            return (0, O.Z)(function* () {
              const i = yield Promise.all(
                t.map((r) => ("error" in r ? null : r.needApprove()))
              );
              return t.map((r, s) =>
                "error" in r
                  ? {
                      providerName: r.type,
                      value: null,
                      status: "rejected",
                      reason: new z.q(r.error.message),
                    }
                  : {
                      providerName: r.type,
                      value: r,
                      status: "fulfilled",
                      needApprove: i?.[s],
                    }
              );
            })();
          }
          getFakeTrades() {
            return new Promise((t) =>
              t(
                this.providersData.map((i) => ({
                  type: i.name,
                  error: new z.q("Instant trade is not supported"),
                }))
              )
            );
          }
          isSlippageCorrect() {
            if (
              !this.selectedProvider ||
              this.settingsService.instantTradeValue.autoSlippageTolerance ||
              this.selectedProvider.trade.type !==
                o.ON_CHAIN_TRADE_TYPE.BRIDGERS
            )
              return !0;
            const t = this.iframeService.isIframe ? "fullscreen" : "s";
            return (
              this.dialogService
                .open(new L.Al(Oi, this.injector), { size: t })
                .subscribe(),
              !1
            );
          }
          getGas(t) {
            const i = t.trade;
            return i instanceof o.EvmOnChainTrade && i.gasFeeInfo?.gasFeeInUsd
              ? i.gasFeeInfo.gasFeeInUsd
              : new M.Z(0);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Nt.eN),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(Oe),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(Xe),
              e.ɵɵdirectiveInject(gt.r),
              e.ɵɵdirectiveInject(U.e),
              e.ɵɵdirectiveInject(Ee.H),
              e.ɵɵdirectiveInject(ve),
              e.ɵɵdirectiveInject(Q.b),
              e.ɵɵdirectiveInject(Ue.k),
              e.ɵɵdirectiveInject(Ae.E),
              e.ɵɵdirectiveInject(De.RO),
              e.ɵɵdirectiveInject(pt),
              e.ɵɵdirectiveInject(e.INJECTOR),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-instant-trade-bottom-form"]],
            outputs: {
              allowRefreshChange: "allowRefreshChange",
              instantTradeInfoChange: "instantTradeInfoChange",
              tradeStatusChange: "tradeStatusChange",
            },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 44,
            vars: 11,
            consts: [
              ["class", "instant-trade-bottom-form", 4, "ngLet"],
              [1, "instant-trade-bottom-form__swap"],
              [
                3,
                "needApprove",
                "withApproveButton",
                "status",
                "buttonText",
                "isOnramper",
                "onSwapClick",
                "onApproveClick",
                "onUpdateRateClick",
              ],
              [4, "noFrame"],
              ["id", "myModal", 1, "modal"],
              [1, "modal-content"],
              [1, "modal-header"],
              [1, "np-stats-welcome__character"],
              [1, "close"],
              [1, "modal-inner-content"],
              [1, "flying-content"],
              [1, "main-text"],
              [1, "sections-wrapper"],
              [1, "section"],
              [1, "label"],
              [1, "value"],
              [1, "section", "mdx"],
              [1, "label", "mdx-text"],
              ["role", "button", 1, "fa", "fa-question-circle", "pointer"],
              ["class", "value", 4, "ngLet"],
              [1, "instant-trade-bottom-form"],
              [1, "instant-trade-bottom-form__body"],
              [1, "instant-trade-bottom-form__body-top"],
              [1, "instant-trade-bottom-form__left-part"],
              ["formType", "to"],
              [
                "class",
                "instant-trade-bottom-form__amount",
                3,
                "ngClass",
                4,
                "ngLet",
              ],
              [4, "ngIf"],
              [1, "instant-trade-bottom-form__amount", 3, "ngClass"],
              [4, "onlyFrame"],
              [
                "class",
                "instant-trade-bottom-form__token-amount",
                3,
                "ngClass",
                4,
                "ngIf",
                "ngIfElse",
              ],
              ["iframeSkeleton", ""],
              [
                "tuiHintMode",
                "error",
                1,
                "instant-trade-bottom-form__hint_error",
                3,
                "inlineSVG",
                "tuiHint",
              ],
              [3, "assetType", 4, "ngIf"],
              [3, "assetType"],
              [1, "instant-trade-bottom-form__token-amount", 3, "ngClass"],
              [1, "instant-trade-bottom-form__amount_skeleton-container"],
              [1, "tui-skeleton", "instant-trade-bottom-form__amount_skeleton"],
              [
                "class",
                "instant-trade-bottom-form__iframe-info",
                4,
                "onlyFrame",
              ],
              [1, "instant-trade-bottom-form__iframe-info"],
              [1, "toggle-wrapper"],
              [1, "flex"],
              [1, "switch", 3, "click"],
              [1, "checkbox", 3, "ngClass"],
              [1, "slider", "round"],
              [1, "mev-text"],
              ["class", "premium-button", 3, "click", 4, "ngLet"],
              [
                "class",
                "instant-trade-bottom-form__providers",
                3,
                "providersData",
                "onSelectProvider",
                4,
                "ngIf",
              ],
              [1, "premium-button", 3, "click"],
              [1, "premium-txt"],
              [1, "get-discount"],
              [
                1,
                "instant-trade-bottom-form__providers",
                3,
                "providersData",
                "onSelectProvider",
              ],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵtemplate(0, Ac, 8, 4, "div", 0),
                  e.ɵɵelementStart(1, "div", 1)(
                    2,
                    "app-swap-button-container",
                    2
                  ),
                  e.ɵɵlistener("onSwapClick", function () {
                    return r.createTrade();
                  })("onApproveClick", function () {
                    return r.approveTrade();
                  })("onUpdateRateClick", function () {
                    return r.onSetHiddenData();
                  }),
                  e.ɵɵpipe(3, "async"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵtemplate(4, Nc, 12, 8, "ng-container", 3),
                  e.ɵɵelementStart(5, "div", 4)(6, "div", 5)(7, "div", 6)(
                    8,
                    "div",
                    7
                  )(9, "h2"),
                  e.ɵɵtext(10, "Discount on Swap"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(11, "span", 8),
                  e.ɵɵtext(12, "\xd7"),
                  e.ɵɵelementEnd()()(),
                  e.ɵɵelementStart(13, "div", 9)(14, "div", 10)(15, "div", 11),
                  e.ɵɵtext(
                    16,
                    " Hold onto your $SELEN and enjoy up to a 50% discount on platform fees. "
                  ),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(17, "div", 12)(18, "div", 13)(
                    19,
                    "span",
                    14
                  ),
                  e.ɵɵtext(20, " DISCOUNT "),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(21, "span", 15),
                  e.ɵɵtext(22, " TIERS "),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(23, "div", 13)(24, "span", 14),
                  e.ɵɵtext(25, " 10% "),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(26, "span", 15),
                  e.ɵɵtext(27, " \u{1f949} Bronze \u2014 500+ $SELEN "),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(28, "div", 13)(29, "span", 14),
                  e.ɵɵtext(30, " 25%"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(31, "span", 15),
                  e.ɵɵtext(32, " \u{1f948} Silver \u2014 2,000+ $SELEN"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(33, "div", 13)(34, "span", 14),
                  e.ɵɵtext(35, " 50%"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(36, "span", 15),
                  e.ɵɵtext(37, " \u{1f947} Gold \u2014 5,000+ $SELEN "),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(38, "div", 16)(39, "span", 17),
                  e.ɵɵtext(40, " $SELEN BALANCE "),
                  e.ɵɵelement(41, "i", 18),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(42, Rc, 2, 1, "span", 19),
                  e.ɵɵpipe(43, "async"),
                  e.ɵɵelementEnd()()()()()()),
                2 & i)
              ) {
                let s;
                e.ɵɵproperty("ngLet", !0 !== r.isIframe),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("needApprove", r.needApprove)(
                    "withApproveButton",
                    r.withApproveButton
                  )("status", r.tradeStatus)(
                    "buttonText",
                    r.ethWethTrade
                      ? r.isFromNative
                        ? "Wrap"
                        : "Unwrap"
                      : "Swap"
                  )("isOnramper", e.ɵɵpipeBind1(3, 7, r.isOnramper$)),
                  e.ɵɵadvance(40),
                  e.ɵɵproperty(
                    "ngLet",
                    null == (s = e.ɵɵpipeBind1(43, 9, r.getCurrentUser$))
                      ? null
                      : s.address
                  );
              }
            },
            dependencies: [
              Tn,
              Ai,
              ht,
              jt,
              m.mk,
              m.O5,
              F.e,
              me.a,
              Me.T,
              Lt,
              G.d$,
              H.D,
              _c,
              m.Ov,
              be.N,
              R.X$,
              ye.f,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}html.iframe-horizontal   [_nghost-%COMP%]{display:flex}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]{position:relative;width:363px;height:50px;padding:0 7px 0 16px;background:var(--primary-background);border-radius:10px}html.iframe-horizontal:not(.dark)[_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%], html.iframe-horizontal:not(.dark)   [_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]{width:100%;padding:0!important;background-color:transparent}.instant-trade-bottom-form__hint_error[_ngcontent-%COMP%]{display:flex;align-items:center;width:15px;margin-left:10px;cursor:help}.instant-trade-bottom-form__hint_error[_ngcontent-%COMP%]     svg path{fill:#dfcb5f}.instant-trade-bottom-form__left-part[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;justify-content:space-between}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__left-part[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__left-part[_ngcontent-%COMP%]{order:2;margin-left:auto}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__left-part[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__left-part[_ngcontent-%COMP%]{width:100%;margin-bottom:6px}.instant-trade-bottom-form__provider-badge[_ngcontent-%COMP%]{padding:2px 6px;color:var(--primary-text);font-weight:300;font-size:14px;text-transform:capitalize}.instant-trade-bottom-form__providers[_ngcontent-%COMP%]{display:block;margin-top:30px;padding:10px 30px 30px;border:1px solid rgba(255,255,255,.1490196078);border-radius:30px}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__body[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__body[_ngcontent-%COMP%]{position:relative}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__body[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__body[_ngcontent-%COMP%]{height:100%}.instant-trade-bottom-form__body-top[_ngcontent-%COMP%]{display:flex;justify-content:end;min-height:60px;overflow:hidden}html.iframe[_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%]{grid-gap:0}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%]{align-items:center;width:100%;height:100%;min-height:unset}@media (max-width: 420px){.instant-trade-bottom-form__body-top[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-end}}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__body-top[_ngcontent-%COMP%]{flex-direction:column;margin-bottom:52px;overflow:visible}.instant-trade-bottom-form__amount[_ngcontent-%COMP%]{text-align:right}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%]{order:1}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%]{position:relative;display:flex;width:100%;margin-bottom:19px}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__amount[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%]{margin-right:15px}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__amount_skeleton-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__amount_skeleton-container[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%;height:50px;padding-left:16px;background-color:var(--primary-background);border-radius:10px}html.iframe-vertical:not(.dark)[_nghost-%COMP%]   .instant-trade-bottom-form__amount_skeleton-container[_ngcontent-%COMP%], html.iframe-vertical:not(.dark)   [_nghost-%COMP%]   .instant-trade-bottom-form__amount_skeleton-container[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.instant-trade-bottom-form__amount_skeleton[_ngcontent-%COMP%]{width:200px;height:40px}.instant-trade-bottom-form__amount__output_error[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;height:35px;font-weight:300;font-size:16px;letter-spacing:2px}.instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{max-width:300px;overflow:auto;color:var(--primary-text);font-weight:400;font-size:22px;line-height:35px;letter-spacing:.1em;scrollbar-width:none;transition:opacity ease-in-out .3s;text-align:left}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{margin-bottom:0;font-size:20px}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{flex:1;width:100%;max-width:unset;height:50px;margin-bottom:0;padding-left:16px;font-size:20px;line-height:50px;text-align:left;background-color:var(--primary-background);border-radius:10px}html.iframe-vertical:not(.dark)[_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%], html.iframe-vertical:not(.dark)   [_nghost-%COMP%]   .instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.instant-trade-bottom-form__token-amount_loading[_ngcontent-%COMP%]{opacity:.25}.instant-trade-bottom-form__token-amount_placeholder[_ngcontent-%COMP%]{color:#757575}.instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.instant-trade-bottom-form[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{display:block;margin-top:6px}html.iframe[_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{margin-top:0;margin-left:4px}.instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%]{position:absolute;bottom:-33px;left:0;display:flex;align-items:center}.instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:first-child{margin-right:15px}.instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{white-space:nowrap}html.iframe[_nghost-%COMP%]   .instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:block;height:27px;padding:5px 10px;color:var(--tui-text-02);font-size:12px;line-height:17px;background-color:var(--primary-background);border-radius:10px}html.iframe:not(.dark)[_nghost-%COMP%]   .instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .instant-trade-bottom-form__iframe-info[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%]{padding:0!important}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%]   app-swap-button-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%]   app-swap-button-container[_ngcontent-%COMP%]{width:100%;margin-top:16px!important}.instant-trade-bottom-form__swap[_ngcontent-%COMP%]   app-swap-button-container[_ngcontent-%COMP%]{display:block;margin-top:16px}html.iframe-horizontal[_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%]   app-swap-button-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .instant-trade-bottom-form__swap[_ngcontent-%COMP%]   app-swap-button-container[_ngcontent-%COMP%]{margin-top:0;margin-left:12px}.instant-trade-bottom-form[_ngcontent-%COMP%]   app-target-network-address[_ngcontent-%COMP%]{display:block;margin-top:10px}html.iframe-vertical[_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]   app-target-network-address[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .instant-trade-bottom-form[_ngcontent-%COMP%]   app-target-network-address[_ngcontent-%COMP%]{margin-top:15px}@media (max-width: 651px){.instant-trade-bottom-form[_ngcontent-%COMP%]{padding:20px}.instant-trade-bottom-form__swap[_ngcontent-%COMP%]{padding:0 20px}.instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{margin-bottom:0}}@media (max-width: 420px){.instant-trade-bottom-form__token-amount[_ngcontent-%COMP%]{text-align:left}.instant-trade-bottom-form[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{margin-left:0}}.premium-button[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:15px 30px;border:1px solid rgba(255,255,255,.1490196078);border-radius:11px;margin-top:30px;cursor:pointer}.premium-txt[_ngcontent-%COMP%]{font-size:16px!important;font-weight:650!important;margin-top:auto;margin-bottom:auto}.get-discount[_ngcontent-%COMP%]{margin-left:10px;border-radius:10px;background:#7555EE;padding:2.5px 10px;font-weight:900;font-size:10px!important;color:#fff}.modal[_ngcontent-%COMP%]{display:none;position:fixed;z-index:1;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:#000;background-color:#0006;padding-top:60px;z-index:10}.np-stats-welcome__character[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:100px;transform:scaleX(-1);margin-left:20px;position:absolute;bottom:0}.np-stats-welcome__character[_ngcontent-%COMP%]   .np-stats-welcome__coffee[_ngcontent-%COMP%]{width:40px;transform:scaleX(1);left:40px;bottom:-15px}.np-stats-welcome__character[_ngcontent-%COMP%]{display:flex;justify-content:space-between;position:relative;height:100%;width:100%}.modal-content[_ngcontent-%COMP%]{background-color:#000;margin:5% auto;border:none;width:80%;max-width:450px;height:400px;border-radius:10px;position:relative}.modal-header[_ngcontent-%COMP%]{width:100%;background:rgb(132,61,248);height:90px;border-top-left-radius:10px;border-top-right-radius:10px}.close[_ngcontent-%COMP%]{color:#fff;float:right;font-size:28px;font-weight:700;margin-top:10px;margin-right:10px;text-shadow:-1px 0 black,0 1px black,1px 0 black,0 -1px black;position:absolute;right:0}.np-stats-welcome__character[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{max-width:200px;text-align:center;font-weight:900;color:#fff;text-shadow:-1px 0 black,0 1px black,1px 0 black,0 -1px black;position:absolute;left:30%;top:10px}.close[_ngcontent-%COMP%]:hover, .close[_ngcontent-%COMP%]:focus{color:#000;text-decoration:none;cursor:pointer}.modal-inner-content[_ngcontent-%COMP%]{height:100%}.flying-content[_ngcontent-%COMP%]{height:100%;background:rgb(14,14,15);position:absolute;width:100%;border-bottom-left-radius:30px;border-bottom-right-radius:30px}.main-text[_ngcontent-%COMP%]{text-align:center;font-size:18px;max-width:90%;margin:30px auto auto}.section[_ngcontent-%COMP%]{display:flex;justify-content:space-around}.section[_ngcontent-%COMP%]   .label[_ngcontent-%COMP%]{color:#a0aec4;width:50%;text-align:center}.section[_ngcontent-%COMP%]   .value[_ngcontent-%COMP%]{width:50%;text-align:center;color:#fff}.sections-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:column;grid-gap:15px;padding:50px 30px 20px;font-size:16px;font-weight:900}.mdx[_ngcontent-%COMP%]{margin:40px 0 0;padding:10px 0;border:solid 1px gray;border-radius:4px}.mdx-text[_ngcontent-%COMP%]{font-weight:600;display:inline-block;-webkit-background-clip:text;background-clip:text;color:#7555EE}@media (max-width: 900px){.modal-content[_ngcontent-%COMP%]{width:90%;max-width:600px}}@media (max-width: 600px){.np-stats-welcome__character[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin-left:0}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var zt = p(22529),
        Fc = p(74306),
        Ni = p(94618);
      const Ri = Object.fromEntries(
        Object.values(o.BLOCKCHAIN_NAME).map((n) => [
          n,
          { key: n, name: ge.h[n], img: rn.v[n] },
        ])
      );
      var Yt = p(81731);
      function Bc(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                2,
                1,
                "crossChainPage.swapSchemeModal.transactionCompleted"
              ),
              " "
            ));
      }
      function Hc(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                2,
                1,
                "crossChainPage.swapSchemeModal.transactionIsBeingProcessed"
              ),
              " "
            ));
      }
      function Lc(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1),
          e.ɵɵpipe(2, "translate"),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                2,
                1,
                "crossChainPage.swapSchemeModal.transactionNotCompleted"
              ),
              " "
            ));
      }
      function $c(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 32), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/white_loader.svg"
              : "assets/images/icons/black_loader.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Vc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 33), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/checkmark/checkmark-thin-white.svg"
              : "assets/images/icons/checkmark/checkmark-thin-black.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function jc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 32), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/white_loader.svg"
              : "assets/images/icons/black_loader.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function zc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 33), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/checkmark/checkmark-thin-white.svg"
              : "assets/images/icons/checkmark/checkmark-thin-black.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Yc(n, a) {
        1 & n && e.ɵɵelement(0, "div", 34);
      }
      function Uc(n, a) {
        1 & n && e.ɵɵelement(0, "hr");
      }
      function Wc(n, a) {
        1 & n && e.ɵɵelement(0, "div", 34);
      }
      function Gc(n, a) {
        1 & n && e.ɵɵelement(0, "hr");
      }
      function Kc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 32), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/white_loader.svg"
              : "assets/images/icons/black_loader.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Xc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 32), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/white_loader.svg"
              : "assets/images/icons/black_loader.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Zc(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 33), 2 & n)) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵproperty(
            "src",
            t
              ? "assets/images/icons/checkmark/checkmark-thin-white.svg"
              : "assets/images/icons/checkmark/checkmark-thin-black.svg",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Qc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-rubic-button", 35),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.revertTrade());
            }),
            e.ɵɵpipe(1, "async"),
            e.ɵɵtext(2),
            e.ɵɵpipe(3, "translate"),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵproperty("loading", e.ɵɵpipeBind1(1, 2, t.revertBtnLoading$)),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(3, 4, "common.revert"),
              " "
            );
        }
      }
      const Di = function (n, a) {
        return { scheme__line_default: n, scheme__line_success: a };
      };
      function Jc(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 1),
            e.ɵɵtemplate(2, Bc, 3, 3, "ng-container", 2),
            e.ɵɵtemplate(3, Hc, 3, 3, "ng-container", 2),
            e.ɵɵtemplate(4, Lc, 3, 3, "ng-container", 2),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "div", 3),
            e.ɵɵtext(6),
            e.ɵɵpipe(7, "translate"),
            e.ɵɵelementStart(8, "span", 4),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.closeModalAndOpenMyTrades());
            }),
            e.ɵɵtext(9),
            e.ɵɵpipe(10, "translate"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(11, "div", 5)(12, "div", 6),
            e.ɵɵelement(13, "img", 7),
            e.ɵɵelementStart(14, "div", 8)(15, "div", 9),
            e.ɵɵtext(16),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(17, "div", 10),
            e.ɵɵtext(18),
            e.ɵɵelementEnd()()(),
            e.ɵɵelement(19, "img", 11),
            e.ɵɵelementStart(20, "div", 12),
            e.ɵɵelement(21, "img", 7),
            e.ɵɵelementStart(22, "div", 8)(23, "div", 9),
            e.ɵɵtext(24),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(25, "div", 10),
            e.ɵɵtext(26),
            e.ɵɵelementEnd()()()(),
            e.ɵɵelementStart(27, "div", 13)(28, "div", 14),
            e.ɵɵelementContainerStart(29, 15),
            e.ɵɵtemplate(30, $c, 1, 1, "img", 16),
            e.ɵɵtemplate(31, Vc, 1, 1, "img", 17),
            e.ɵɵelementContainerEnd(),
            e.ɵɵelement(32, "img", 18),
            e.ɵɵelementStart(33, "div", 19),
            e.ɵɵtext(34),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(35, "div", 20),
            e.ɵɵelementContainerStart(36, 15),
            e.ɵɵtemplate(37, jc, 1, 1, "img", 16),
            e.ɵɵtemplate(38, zc, 1, 1, "img", 17),
            e.ɵɵelementContainerEnd(),
            e.ɵɵelementStart(39, "div", 21),
            e.ɵɵtemplate(40, Yc, 1, 0, "div", 22),
            e.ɵɵtemplate(41, Uc, 1, 0, "hr", 2),
            e.ɵɵelementEnd(),
            e.ɵɵelement(42, "img", 23),
            e.ɵɵelementStart(43, "div", 24),
            e.ɵɵtemplate(44, Wc, 1, 0, "div", 22),
            e.ɵɵtemplate(45, Gc, 1, 0, "hr", 2),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(46, "div", 25),
            e.ɵɵtext(47),
            e.ɵɵelement(48, "br"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(49, "div", 26),
            e.ɵɵelementContainerStart(50, 15),
            e.ɵɵtemplate(51, Kc, 1, 1, "img", 16),
            e.ɵɵtemplate(52, Xc, 1, 1, "img", 16),
            e.ɵɵtemplate(53, Zc, 1, 1, "img", 17),
            e.ɵɵelementContainerEnd(),
            e.ɵɵelement(54, "img", 27),
            e.ɵɵelementStart(55, "div", 28),
            e.ɵɵtext(56),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(57, "div", 29),
            e.ɵɵtext(58),
            e.ɵɵpipe(59, "translate"),
            e.ɵɵelementStart(60, "a", 30),
            e.ɵɵtext(61, " support@Selenion AI.org"),
            e.ɵɵelementEnd(),
            e.ɵɵtext(62, ". "),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(63, Qc, 4, 6, "app-rubic-button", 31),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(2),
            e.ɵɵproperty(
              "ngIf",
              t.srcStatus === i.CrossChainTxStatus.SUCCESS &&
                t.dstStatus === i.CrossChainTxStatus.SUCCESS
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              t.srcStatus === i.CrossChainTxStatus.PENDING ||
                t.dstStatus === i.CrossChainTxStatus.PENDING ||
                t.tradeProcessingStatus === i.CrossChainTxStatus.PENDING ||
                t.dstStatus === i.CrossChainTxStatus.REVERT
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              t.srcStatus === i.CrossChainTxStatus.FAIL ||
                t.dstStatus === i.CrossChainTxStatus.FAIL
            ),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                7,
                37,
                "crossChainPage.swapSchemeModal.transactionCanBeTracked"
              ),
              " "
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                10,
                39,
                "crossChainPage.swapSchemeModal.recentTrades"
              ),
              ""
            ),
            e.ɵɵadvance(4),
            e.ɵɵproperty(
              "src",
              i.fromToken.image ||
                "/logo.png",
              e.ɵɵsanitizeUrl
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(i.fromToken.symbol),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.fromBlockchain.name),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "src",
              i.toToken.image ||
                "/logo.png",
              e.ɵɵsanitizeUrl
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(i.toToken.symbol),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.toBlockchain.name),
            e.ɵɵadvance(1),
            e.ɵɵclassProp(
              "scheme_failed",
              t.srcStatus === i.CrossChainTxStatus.FAIL ||
                t.dstStatus === i.CrossChainTxStatus.FAIL
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngSwitch", t.srcStatus),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.PENDING),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.SUCCESS),
            e.ɵɵadvance(1),
            e.ɵɵproperty("src", i.srcProvider.image, e.ɵɵsanitizeUrl),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.srcProvider.name),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngSwitch", t.tradeProcessingStatus),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.PENDING),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.SUCCESS),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(
                43,
                Di,
                t.srcStatus === i.CrossChainTxStatus.FAIL ||
                  t.dstStatus === i.CrossChainTxStatus.FAIL,
                t.srcStatus === i.CrossChainTxStatus.SUCCESS
              )
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.srcStatus === i.CrossChainTxStatus.PENDING),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.srcStatus !== i.CrossChainTxStatus.PENDING),
            e.ɵɵadvance(1),
            e.ɵɵproperty("src", i.bridgeType.image, e.ɵɵsanitizeUrl),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(
                46,
                Di,
                t.srcStatus === i.CrossChainTxStatus.FAIL ||
                  t.dstStatus === i.CrossChainTxStatus.FAIL,
                t.dstStatus === i.CrossChainTxStatus.SUCCESS
              )
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              t.dstStatus === i.CrossChainTxStatus.PENDING ||
                t.dstStatus === i.CrossChainTxStatus.REVERT
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              t.dstStatus !== i.CrossChainTxStatus.PENDING &&
                t.dstStatus !== i.CrossChainTxStatus.REVERT
            ),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.bridgeType.name),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngSwitch", t.dstStatus),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.PENDING),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.REVERT),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngSwitchCase", i.CrossChainTxStatus.SUCCESS),
            e.ɵɵadvance(1),
            e.ɵɵproperty("src", i.dstProvider.image, e.ɵɵsanitizeUrl),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate(i.dstProvider.name),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(
                59,
                41,
                "crossChainPage.swapSchemeModal.ifTransactionNotCompleted"
              ),
              " "
            ),
            e.ɵɵadvance(5),
            e.ɵɵproperty("ngIf", t.dstStatus === i.CrossChainTxStatus.REVERT);
        }
      }
      const qc = function (n, a, t) {
        return { srcStatus: n, dstStatus: a, tradeProcessingStatus: t };
      };
      function el(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Jc, 64, 49, "ng-container", 0),
            e.ɵɵpipe(2, "async"),
            e.ɵɵpipe(3, "async"),
            e.ɵɵpipe(4, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngLet",
              e.ɵɵpureFunction3(
                7,
                qc,
                e.ɵɵpipeBind1(2, 1, t.srcTxStatus$),
                e.ɵɵpipeBind1(3, 3, t.dstTxStatus$),
                e.ɵɵpipeBind1(4, 5, t.tradeProcessingStatus$)
              )
            );
        }
      }
      let tl = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _, g, C) {
            (this.headerStore = t),
              (this.errorService = i),
              (this.notificationService = r),
              (this.themeService = s),
              (this.translateService = c),
              (this.recentTradesStoreService = l),
              (this.commonModalService = d),
              (this.context = _),
              (this.destroy$ = g),
              (this.sdkService = C),
              (this._srcTxStatus$ = new A.X(o.TxStatus.PENDING)),
              (this.srcTxStatus$ = this._srcTxStatus$.asObservable()),
              (this._dstTxStatus$ = new A.X(o.TxStatus.UNKNOWN)),
              (this.dstTxStatus$ = this._dstTxStatus$.asObservable()),
              (this._tradeProcessingStatus$ = new A.X(o.TxStatus.UNKNOWN)),
              (this.tradeProcessingStatus$ =
                this._tradeProcessingStatus$.asObservable()),
              (this.CrossChainTxStatus = o.TxStatus),
              (this._revertBtnLoading$ = new A.X(!1)),
              (this.revertBtnLoading$ = this._revertBtnLoading$.asObservable()),
              (this.isDarkTheme$ = this.themeService.theme$.pipe(
                (0, x.U)((b) => "dark" === b)
              )),
              this.setTradeData(this.context.data);
          }
          ngOnInit() {
            this.initSrcTxStatusPolling(),
              this.initTradeProcessingStatusPolling(),
              this.initDstTxStatusPolling();
          }
          initSrcTxStatusPolling() {
            (0, vt.F)(5e3)
              .pipe(
                (0, gn.g)(new Date(Date.now() + 2e3)),
                (0, Pe.O)(-1),
                (0, N.w)(() =>
                  (0, Ne.D)(
                    this.sdkService.crossChainStatusManager.getCrossChainStatus(
                      {
                        fromBlockchain: this.fromToken.blockchain,
                        toBlockchain: this.toToken.blockchain,
                        srcTxHash: this.srcTxHash,
                        txTimestamp: this.timestamp,
                        lifiBridgeType: this.bridgeType.name,
                        viaUuid: this.viaUuid,
                        rangoRequestId: this.rangoRequestId,
                        amountOutMin: this.amountOutMin,
                        changenowId: this.changenowId,
                      },
                      this.crossChainProvider
                    )
                  )
                ),
                (0, fe.b)((t) => this._srcTxStatus$.next(t.srcTxStatus)),
                (0, zt.o)((t) => t.srcTxStatus === o.TxStatus.PENDING),
                (0, P.R)(this.destroy$)
              )
              .subscribe();
          }
          initTradeProcessingStatusPolling() {
            this.srcTxStatus$
              .pipe(
                (0, Z.h)((t) => t === o.TxStatus.SUCCESS),
                (0, fe.b)(() =>
                  this._tradeProcessingStatus$.next(o.TxStatus.PENDING)
                ),
                (0, N.w)(() =>
                  (0, vt.F)(7e3).pipe(
                    (0, Pe.O)(-1),
                    (0, N.w)(() => {
                      const t =
                        this.srcWeb3Public instanceof o.EvmWeb3Public
                          ? this.srcWeb3Public.getTransactionReceipt
                          : this.srcWeb3Public.getTransactionInfo;
                      return (0, yn.D)([
                        this.srcWeb3Public.getBlockNumber(),
                        t(this.srcTxHash),
                      ]).pipe(
                        (0, x.U)(([i, r]) =>
                          i - r.blockNumber >
                          (this.fromToken.blockchain ===
                          o.BLOCKCHAIN_NAME.ETHEREUM
                            ? 5
                            : this.fromToken.blockchain ===
                              o.BLOCKCHAIN_NAME.TRON
                            ? 20
                            : 10)
                            ? o.TxStatus.SUCCESS
                            : o.TxStatus.PENDING
                        ),
                        (0, Dt.K)(
                          (i) => (
                            console.debug(
                              "[General] error getting current block number",
                              i
                            ),
                            (0, V.of)(o.TxStatus.PENDING)
                          )
                        )
                      );
                    }),
                    (0, fe.b)((t) => this._tradeProcessingStatus$.next(t))
                  )
                ),
                (0, zt.o)((t) => t === o.TxStatus.PENDING),
                (0, P.R)(this.destroy$)
              )
              .subscribe();
          }
          initDstTxStatusPolling() {
            this.tradeProcessingStatus$
              .pipe(
                (0, Z.h)((t) => t === o.TxStatus.SUCCESS),
                (0, fe.b)(() => this._dstTxStatus$.next(o.TxStatus.PENDING)),
                (0, N.w)(() =>
                  (0, vt.F)(1e4).pipe(
                    (0, Pe.O)(-1),
                    (0, N.w)(() =>
                      (0, Ne.D)(
                        this.sdkService.crossChainStatusManager.getCrossChainStatus(
                          {
                            fromBlockchain: this.fromToken.blockchain,
                            toBlockchain: this.toToken.blockchain,
                            srcTxHash: this.srcTxHash,
                            txTimestamp: this.timestamp,
                            lifiBridgeType: this.bridgeType.name.toLowerCase(),
                            viaUuid: this.viaUuid,
                            rangoRequestId: this.rangoRequestId,
                            amountOutMin: this.amountOutMin,
                            changenowId: this.changenowId,
                          },
                          this.crossChainProvider
                        )
                      )
                    )
                  )
                ),
                (0, fe.b)((t) => {
                  this._dstTxStatus$.next(t.dstTxStatus);
                }),
                (0, zt.o)((t) => t.dstTxStatus === o.TxStatus.PENDING),
                (0, P.R)(this.destroy$)
              )
              .subscribe();
          }
          revertTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              let i;
              const r = () => {
                i = t.notificationService.show(
                  t.translateService.instant("bridgePage.progressMessage"),
                  {
                    label: t.translateService.instant(
                      "notifications.tradeInProgress"
                    ),
                    status: "info",
                    autoClose: !1,
                  }
                );
              };
              t._revertBtnLoading$.next(!0);
              try {
                t.crossChainProvider ===
                  Ni.CROSS_CHAIN_TRADE_TYPE.CELER_BRIDGE &&
                  (yield o.CrossChainCbridgeManager.makeRefund(
                    t.fromBlockchain.key,
                    t.srcTxHash,
                    t.amountOutMin,
                    r
                  )),
                  t.crossChainProvider ===
                    Ni.CROSS_CHAIN_TRADE_TYPE.SYMBIOSIS &&
                    (yield t.sdkService.symbiosis.revertTrade(t.srcTxHash, {
                      onConfirm: r,
                    })),
                  i.unsubscribe(),
                  t.notificationService.show(
                    t.translateService.instant("bridgePage.successMessage"),
                    {
                      label: t.translateService.instant(
                        "notifications.successfulTradeTitle"
                      ),
                      status: "success",
                      autoClose: 15e3,
                    }
                  ),
                  t.recentTradesStoreService.updateTrade({
                    ...t.recentTradesStoreService.getSpecificCrossChainTrade(
                      t.srcTxHash,
                      t.fromToken.blockchain
                    ),
                    calculatedStatusFrom: o.TxStatus.SUCCESS,
                    calculatedStatusTo: o.TxStatus.FALLBACK,
                  }),
                  t.context.completeWith(!0);
              } catch (s) {
                t.errorService.catch(s);
              } finally {
                t._revertBtnLoading$.next(!1), i?.unsubscribe();
              }
            })();
          }
          closeModalAndOpenMyTrades() {
            this.context.completeWith(!1),
              this.commonModalService
                .openRecentTradesModal({
                  size: this.headerStore.isMobile ? "page" : "xl",
                })
                .subscribe();
          }
          setTradeData(t) {
            (this.srcProvider = t.srcProvider),
              (this.dstProvider = t.dstProvider),
              (this.fromToken = t.fromToken),
              (this.toToken = t.toToken),
              (this.fromBlockchain = Ri[this.fromToken.blockchain]),
              (this.toBlockchain = Ri[this.toToken.blockchain]),
              (this.srcTxHash = t.srcTxHash),
              (this.crossChainProvider = t.crossChainProvider),
              (this.srcWeb3Public = o.Injector.web3PublicService.getWeb3Public(
                t.fromToken.blockchain
              )),
              (this.bridgeType = t.bridgeType),
              (this.viaUuid = t.viaUuid),
              (this.rangoRequestId = t.rangoRequestId),
              (this.timestamp = t.timestamp),
              (this.amountOutMin = t.amountOutMin),
              (this.changenowId = t.changenowId);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(Mt.N),
              e.ɵɵdirectiveInject(gt.r),
              e.ɵɵdirectiveInject(dt.T),
              e.ɵɵdirectiveInject(Yt.f),
              e.ɵɵdirectiveInject(R.sK),
              e.ɵɵdirectiveInject(Vt.o),
              e.ɵɵdirectiveInject(Fc.g),
              e.ɵɵdirectiveInject(L.yf),
              e.ɵɵdirectiveInject(w.a3, 2),
              e.ɵɵdirectiveInject(Ge.w)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["polymorpheus-swap-scheme-modal"]],
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 2,
            vars: 3,
            consts: [
              [4, "ngLet"],
              [1, "title"],
              [4, "ngIf"],
              [1, "description"],
              [1, "highlight_green", 3, "click"],
              [1, "pair"],
              [1, "pair__from"],
              ["alt", "", 1, "pair__token-image", 3, "src"],
              [1, "pair__data"],
              [1, "pair__symbol"],
              [1, "pair__blockchain"],
              [
                "src",
                "assets/images/icons/arrow/long-arrow-right-grey.svg",
                "alt",
                "",
                1,
                "pair__arrow",
              ],
              [1, "pair__to"],
              [1, "scheme"],
              [1, "scheme__src"],
              [3, "ngSwitch"],
              [
                "class",
                "scheme__status-icon scheme__status-icon_rotating",
                "alt",
                "",
                3,
                "src",
                4,
                "ngSwitchCase",
              ],
              [
                "class",
                "scheme__status-icon",
                "alt",
                "",
                3,
                "src",
                4,
                "ngSwitchCase",
              ],
              [1, "scheme__src-icon", 3, "src"],
              [1, "scheme__src-name"],
              [1, "scheme__pool"],
              [1, "scheme__line", "scheme__line_src", 3, "ngClass"],
              ["class", "scheme__line-dashed", 4, "ngIf"],
              ["alt", "Bridge provider", 1, "scheme__pool-icon", 3, "src"],
              [
                1,
                "scheme__line",
                "scheme__line_default",
                "scheme__line_dst",
                3,
                "ngClass",
              ],
              [1, "scheme__pool-name"],
              [1, "scheme__dst"],
              [1, "scheme__dst-icon", 3, "src"],
              [1, "scheme__dst-name"],
              [1, "caption"],
              [
                "href",
                "mailto:support@Selenion AI.org",
                1,
                "highlight_black-white",
              ],
              [
                "appearance",
                "primary",
                "size",
                "s",
                3,
                "loading",
                "onClick",
                4,
                "ngIf",
              ],
              [
                "alt",
                "",
                1,
                "scheme__status-icon",
                "scheme__status-icon_rotating",
                3,
                "src",
              ],
              ["alt", "", 1, "scheme__status-icon", 3, "src"],
              [1, "scheme__line-dashed"],
              ["appearance", "primary", "size", "s", 3, "loading", "onClick"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, el, 5, 11, "ng-container", 0),
                e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.isDarkTheme$));
            },
            dependencies: [m.mk, m.O5, m.RF, m.n9, se.j, F.e, m.Ov, R.X$],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}  .tui-dialog{border:none}.title[_ngcontent-%COMP%]{color:#000;font-weight:700;font-size:26px;line-height:31px;letter-spacing:normal;margin-bottom:8px;text-align:center}html.iframe-horizontal[_nghost-%COMP%]   .title[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-bottom:30px}body.hide-unused-ui[_nghost-%COMP%]   .title[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-bottom:20px}@media (max-width: 768px){.title[_ngcontent-%COMP%]{max-width:320px;margin:20px 20px 8px;font-size:20px;line-height:24px;text-align:left}body.hide-unused-ui[_nghost-%COMP%]   .title[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin:20px}html.iframe[_nghost-%COMP%]   .title[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin:20px 20px 40px}}html.dark[_nghost-%COMP%]   .title[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .title[_ngcontent-%COMP%]{color:#fff}.description[_ngcontent-%COMP%]{color:#a2a1a5;font-weight:500;font-size:16px;line-height:19px;letter-spacing:normal;margin-bottom:56px;text-align:center}@media (max-width: 768px){.description[_ngcontent-%COMP%]{margin:0 20px 30px;font-size:13px;line-height:15px;text-align:left}}body.hide-unused-ui[_nghost-%COMP%]   .description[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .description[_ngcontent-%COMP%]{display:none}html.iframe[_nghost-%COMP%]   .description[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .description[_ngcontent-%COMP%]{display:none}.description[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{cursor:pointer}.pair[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;margin:0 auto 56px}@media (max-width: 768px){.pair[_ngcontent-%COMP%]{margin:0 20px 70px}}html.iframe-horizontal[_nghost-%COMP%]   .pair[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .pair[_ngcontent-%COMP%]{display:none}.pair__arrow[_ngcontent-%COMP%]{width:32px;margin:0 65px}@media (max-width: 768px){.pair__arrow[_ngcontent-%COMP%]{margin:0 32px}}.pair__from[_ngcontent-%COMP%], .pair__to[_ngcontent-%COMP%]{display:flex;align-items:center;width:calc(100% - 162px)}@media (max-width: 768px){.pair__from[_ngcontent-%COMP%], .pair__to[_ngcontent-%COMP%]{width:calc(100% - 96px)}}.pair__from[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], .pair__to[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:42px;height:42px;margin-right:8px;border-radius:100%}@media (max-width: 768px){.pair__from[_ngcontent-%COMP%]   img[_ngcontent-%COMP%], .pair__to[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:38px;height:38px}}.pair__from[_ngcontent-%COMP%]{justify-content:flex-end}.pair__to[_ngcontent-%COMP%]{justify-content:flex-start}.pair__symbol[_ngcontent-%COMP%]{color:#000;font-weight:500;font-size:20px;line-height:17px;letter-spacing:normal;margin-bottom:4px}html.dark[_nghost-%COMP%]   .pair__symbol[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .pair__symbol[_ngcontent-%COMP%]{color:#e8e8ea}@media (max-width: 768px){.pair__symbol[_ngcontent-%COMP%]{margin-bottom:0;font-size:16px;line-height:17px}}.pair__blockchain[_ngcontent-%COMP%]{color:#8e8d91;font-weight:500;font-size:18px;line-height:16px;letter-spacing:normal}@media (max-width: 768px){.pair__blockchain[_ngcontent-%COMP%]{font-size:14px;line-height:16px}}.scheme[_ngcontent-%COMP%]{position:relative;display:flex;justify-content:space-between;max-width:600px;margin:0 auto 16px}@media (max-width: 768px){.scheme[_ngcontent-%COMP%]{margin:0 20px 40px}}.scheme__status-icon[_ngcontent-%COMP%]{position:absolute;top:-25px}.scheme__status-icon_rotating[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_rotating 2s linear infinite}.scheme_failed[_ngcontent-%COMP%]{opacity:.4}.scheme__pool[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;flex-grow:1;align-items:center}.scheme__pool-icon[_ngcontent-%COMP%]{position:relative;z-index:3;width:32px;height:32px;margin-bottom:8px;border-radius:100%}.scheme__pool-name[_ngcontent-%COMP%]{color:#000;font-weight:500;font-size:18px;line-height:21px;letter-spacing:normal;text-align:center}html.dark[_nghost-%COMP%]   .scheme__pool-name[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .scheme__pool-name[_ngcontent-%COMP%]{color:#fff;font-weight:600}@media (max-width: 768px){.scheme__pool-name[_ngcontent-%COMP%]{font-size:14px;line-height:16px}}.scheme__pool-name[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#8e8d91;font-weight:400;font-size:14px;line-height:17px;letter-spacing:normal}html.dark[_nghost-%COMP%]   .scheme__pool-name[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .scheme__pool-name[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:#fff}.scheme__util[_ngcontent-%COMP%]{position:absolute;display:flex;justify-content:space-between;width:100%;height:100%}.scheme__util-left[_ngcontent-%COMP%], .scheme__util-right[_ngcontent-%COMP%]{width:32px;height:100%;background-color:#f44336}.scheme__src[_ngcontent-%COMP%], .scheme__dst[_ngcontent-%COMP%]{position:relative;z-index:3;display:flex;flex-direction:column;align-items:center;width:120px}@media (max-width: 768px){.scheme__src[_ngcontent-%COMP%], .scheme__dst[_ngcontent-%COMP%]{width:90px}}.scheme__src-icon[_ngcontent-%COMP%], .scheme__dst-icon[_ngcontent-%COMP%]{width:32px;height:32px;margin-bottom:8px;border-radius:100%}.scheme__src-name[_ngcontent-%COMP%], .scheme__dst-name[_ngcontent-%COMP%]{color:#000;font-weight:500;font-size:18px;line-height:21px;letter-spacing:normal;text-align:center}html.dark[_nghost-%COMP%]   .scheme__src-name[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .scheme__src-name[_ngcontent-%COMP%], html.dark[_nghost-%COMP%]   .scheme__dst-name[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .scheme__dst-name[_ngcontent-%COMP%]{color:#fff;font-weight:600}@media (max-width: 768px){.scheme__src-name[_ngcontent-%COMP%], .scheme__dst-name[_ngcontent-%COMP%]{font-size:14px;line-height:16px}}.scheme__line[_ngcontent-%COMP%]{position:absolute;width:60%}.scheme__line-dashed[_ngcontent-%COMP%]{height:2px;background:url(/assets/images/icons/dashed-line.svg)}.scheme__line[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{width:100%;height:2px}.scheme__line_default[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{background:#242327}.scheme__line_success[_ngcontent-%COMP%]   hr[_ngcontent-%COMP%]{background:var(--primary-color)}.scheme__line_src[_ngcontent-%COMP%]{top:1em;left:-3em;z-index:2}@media (max-width: 768px){.scheme__line_src[_ngcontent-%COMP%]{left:-2em}}.scheme__line_dst[_ngcontent-%COMP%]{top:1em;right:-3em;z-index:1}@media (max-width: 768px){.scheme__line_dst[_ngcontent-%COMP%]{right:-2em}}.caption[_ngcontent-%COMP%]{color:#525155;font-weight:400;font-size:14px;line-height:17px;letter-spacing:normal;max-width:575px;margin:0 auto 1.5em;text-align:center}html.iframe-horizontal[_nghost-%COMP%]   .caption[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .caption[_ngcontent-%COMP%]{margin-bottom:10px}html.dark[_nghost-%COMP%]   .caption[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .caption[_ngcontent-%COMP%]{color:#8e8d91}@media (max-width: 768px){.caption[_ngcontent-%COMP%]{margin:0 20px;font-size:11px;line-height:15px;text-align:left}}.caption[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}app-rubic-button[_ngcontent-%COMP%]{display:block;max-width:469px;margin:32px auto 0}.highlight_green[_ngcontent-%COMP%]{color:var(--primary-color)}.highlight_black-white[_ngcontent-%COMP%]{color:#000}html.dark[_nghost-%COMP%]   .highlight_black-white[_ngcontent-%COMP%], html.dark   [_nghost-%COMP%]   .highlight_black-white[_ngcontent-%COMP%]{color:#fff}@keyframes _ngcontent-%COMP%_rotating{0%{transform:rotate(0)}to{transform:rotate(360deg)}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var wn = p(98210);
      const f = "assets/images/icons/providers/on-chain/",
        D = "assets/images/icons/providers/bridge/",
        ze = {
          [o.ON_CHAIN_TRADE_TYPE.ACRYPTOS]: {
            name: "Acryptos",
            image: `${f}acryptos.png`,
            color: "#FF0A1C",
          },
          [o.ON_CHAIN_TRADE_TYPE.ALDRIN_EXCHANGE]: {
            name: "AldrinExchange",
            image: `${f}aldrin.svg`,
            color: "#383838",
          },
          [o.ON_CHAIN_TRADE_TYPE.ALGEBRA]: {
            name: "Algebra",
            image: `${f}algebra.svg`,
            color: "#00CAB2",
          },
          [o.ON_CHAIN_TRADE_TYPE.ANNEX]: {
            name: "Annex",
            image: `${f}annex.webp`,
            color: "#FFAD4F",
          },
          [o.ON_CHAIN_TRADE_TYPE.APE_SWAP]: {
            name: "Acryptos",
            image: `${f}ape.svg`,
            color: "#A16552",
          },
          [o.ON_CHAIN_TRADE_TYPE.ARTH_SWAP]: {
            name: "ArthSwap",
            image: `${f}arth.png`,
            color: "#00C6EE",
          },
          [o.ON_CHAIN_TRADE_TYPE.ASTRO_SWAP]: {
            name: "AstroSwap",
            image: `${f}astroswap.png`,
            color: "#adaaaa",
          },
          [o.ON_CHAIN_TRADE_TYPE.AURORA_SWAP]: {
            name: "AuroraSwap",
            image: `${f}auroraswap.svg`,
            color: "#34A5F5",
          },
          [o.ON_CHAIN_TRADE_TYPE.BABY_SWAP]: {
            name: "BabySwap",
            image: `${f}babyswap.svg`,
            color: "#E89B37",
          },
          [o.ON_CHAIN_TRADE_TYPE.BALANCER]: {
            name: "Balancer",
            image: `${f}balancer.svg`,
            color: "white",
          },
          [o.ON_CHAIN_TRADE_TYPE.BEAM_SWAP]: {
            name: "BeamSwap",
            image: `${f}beamswap.png`,
            color: "#26B7F0",
          },
          [o.ON_CHAIN_TRADE_TYPE.BI_SWAP]: {
            name: "BiSwap",
            image: `${f}biswap.svg`,
            color: "#EE3652",
          },
          [o.ON_CHAIN_TRADE_TYPE.BRIDGERS]: {
            name: "Bridgers",
            image: `${f}../bridge/bridgers.png`,
            color: "white",
          },
          [o.ON_CHAIN_TRADE_TYPE.CLAIM_SWAP]: {
            name: "ClaimSwap",
            image: `${f}claimswap.png`,
            color: "#181E6A",
          },
          [o.ON_CHAIN_TRADE_TYPE.CREMA_FINANCE]: {
            name: "CremaFinance",
            image: `${f}cremafinance.ico`,
            color: "#6AE2DC",
          },
          [o.ON_CHAIN_TRADE_TYPE.CRO_SWAP]: {
            name: "CroSwap",
            image: `${f}croswap.svg`,
            color: "#020426",
          },
          [o.ON_CHAIN_TRADE_TYPE.CRONA_SWAP]: {
            name: "CronaSwap",
            image: `${f}cronaswap.webp`,
            color: "#020426",
          },
          [o.ON_CHAIN_TRADE_TYPE.CROPPER_FINANCE]: {
            name: "CropperFinance",
            image: `${f}cropperfinance.ico`,
            color: "#9B5FE3",
          },
          [o.ON_CHAIN_TRADE_TYPE.CROW_FI]: {
            name: "CrowFi",
            image: `${f}crowfi.png`,
            color: "#0D3D49",
          },
          [o.ON_CHAIN_TRADE_TYPE.CRO_DEX]: {
            name: "CroDex",
            image: `${f}crodex.png`,
            color: "#F05A28",
          },
          [o.ON_CHAIN_TRADE_TYPE.CURVE]: {
            name: "Curve",
            image: `${f}curve.svg`,
            color: "#19E0CE",
          },
          [o.ON_CHAIN_TRADE_TYPE.ELK]: {
            name: "Elk",
            image: `${f}elk.png`,
            color: "#009A5C",
          },
          [o.ON_CHAIN_TRADE_TYPE.DEFI_PLAZA]: {
            name: "DefiPlaza",
            image: `${f}defiplaza.png`,
            color: "#5D10C0",
          },
          [o.ON_CHAIN_TRADE_TYPE.DEFI_SWAP]: {
            name: "DefiSwap",
            image: `${f}defiswap.webp`,
            color: "#012C70",
          },
          [o.ON_CHAIN_TRADE_TYPE.DFYN]: {
            name: "Dfyn",
            image: `${f}dfyn.svg`,
            color: "#828CBE",
          },
          [o.ON_CHAIN_TRADE_TYPE.DODO]: {
            name: "Dodo",
            image: `${f}dodo.png`,
            color: "#efc20b",
          },
          [o.ON_CHAIN_TRADE_TYPE.DYSTOPIA]: {
            name: "Dystopia",
            image: `${f}dystopia.png`,
            color: "#085F8E",
          },
          [o.ON_CHAIN_TRADE_TYPE.HONEY_SWAP]: {
            name: "HoneySwap",
            image: `${f}honeyswap.webp`,
            color: "#efc20b",
          },
          [o.ON_CHAIN_TRADE_TYPE.JET_SWAP]: {
            name: "JetSwap",
            image: `${f}jetswap.png`,
            color: "#F7C415",
          },
          [o.ON_CHAIN_TRADE_TYPE.JOE]: {
            name: "Joe",
            image: `${f}joe.png`,
            color: "#6665DD",
          },
          [o.ON_CHAIN_TRADE_TYPE.JUPITER]: {
            name: "Jupiter",
            image: `${f}jupiter.svg`,
            color: "#34A5F5",
          },
          [o.ON_CHAIN_TRADE_TYPE.JUPITER_SWAP]: {
            name: "JupiterSwap",
            image: `${f}jupiterswap.svg`,
            color: "#F27523",
          },
          [o.ON_CHAIN_TRADE_TYPE.J_SWAP]: {
            name: "JSwap",
            image: `${f}jswap.jpg`,
            color: "#5b55e3",
          },
          [o.ON_CHAIN_TRADE_TYPE.KYBER_SWAP]: {
            name: "KyberSwap",
            image: `${f}kyberswap.svg`,
            color: "#31CB9E",
          },
          [o.ON_CHAIN_TRADE_TYPE.LUA_SWAP]: {
            name: "LuaSwap",
            image: `${f}luaswap.png`,
            color: "#FABD45",
          },
          [o.ON_CHAIN_TRADE_TYPE.MAVERICK]: {
            name: "Maverick",
            image: `${f}maverick.png`,
            color: "#6401FF",
          },
          [o.ON_CHAIN_TRADE_TYPE.MDEX]: {
            name: "MDEX",
            image: `${f}mdex.svg`,
            color: "#50B0E4",
          },
          [o.ON_CHAIN_TRADE_TYPE.MESH_SWAP]: {
            name: "MeshSwap",
            image: `${f}meshswap.svg`,
            color: "#BF96FF",
          },
          [o.ON_CHAIN_TRADE_TYPE.MM_FINANCE]: {
            name: "MMFinance",
            image: `${f}mmfinance.png`,
            color: "#F0BC82",
          },
          [o.ON_CHAIN_TRADE_TYPE.MOJITO_SWAP]: {
            name: "MojitoSwap",
            image: `${f}mojitoswap.svg`,
            color: "#0AC4DD",
          },
          [o.ON_CHAIN_TRADE_TYPE.MUTE_SWAP]: {
            name: "MuteSwap",
            image: `${f}muteswap.webp`,
            color: "white",
          },
          [o.ON_CHAIN_TRADE_TYPE.NET_SWAP]: {
            name: "NetSwap",
            image: `${f}netswap.png`,
            color: "#257AF1",
          },
          [o.ON_CHAIN_TRADE_TYPE.OMNIDEX]: {
            name: "Omnidex",
            image: `${f}omnidex.png`,
            color: "#B18D4F",
          },
          [o.ON_CHAIN_TRADE_TYPE.ONE_INCH]: {
            name: "1inch",
            image: `${f}oneinch.svg`,
            color: "#94A6C3",
          },
          [o.ON_CHAIN_TRADE_TYPE.ONE_MOON]: {
            name: "OneMoon",
            image: `${f}onemoon.ico`,
            color: "#0B86FF",
          },
          [o.ON_CHAIN_TRADE_TYPE.ONE_SOL]: {
            name: "1sol",
            image: `${f}onesol.png`,
            color: "white",
          },
          [o.ON_CHAIN_TRADE_TYPE.OOLONG_SWAP]: {
            name: "OolongSwap",
            image: `${f}oolongswap.png`,
            color: "#F5A14A",
          },
          [o.ON_CHAIN_TRADE_TYPE.OPEN_OCEAN]: {
            name: "Open Ocean",
            image: `${f}../bridge/openocean.png`,
            color: "#15D9E1",
          },
          [o.ON_CHAIN_TRADE_TYPE.ORCA_SWAP]: {
            name: "OrcaSwap",
            image: `${f}orcaswap.svg`,
            color: "#F2C45B",
          },
          [o.ON_CHAIN_TRADE_TYPE.OSMOSIS_SWAP]: {
            name: "OsmosisSwap",
            image: `${f}../bridge/osmosis.svg`,
            color: "#5E12A0",
          },
          [o.ON_CHAIN_TRADE_TYPE.PANCAKE_SWAP]: {
            name: "PancakeSwap",
            image: `${f}pancakeswap.svg`,
            color: "#00ADE8",
          },
          [o.ON_CHAIN_TRADE_TYPE.PANGOLIN]: {
            name: "Pangolin",
            image: `${f}pangolin.svg`,
            color: "#FC5408",
          },
          [o.ON_CHAIN_TRADE_TYPE.PARA_SWAP]: {
            name: "ParaSwap",
            image: `${f}paraswap.svg`,
            color: "#2e58b0",
          },
          [o.ON_CHAIN_TRADE_TYPE.PEGASYS]: {
            name: "Pegasys",
            image: `${f}pegasys.png`,
            color: "#2CC4D2",
          },
          [o.ON_CHAIN_TRADE_TYPE.PHOTON_SWAP]: {
            name: "PhotonSwap",
            image: `${f}photonswap.png`,
            color: "#8829E2",
          },
          [o.ON_CHAIN_TRADE_TYPE.POLYDEX]: {
            name: "Polydex",
            image: `${f}polydex.svg`,
            color: "#0D2866",
          },
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP]: {
            name: "QuickSwap",
            image: `${f}quickswap.svg`,
            color: "#36C2EA",
          },
          [o.ON_CHAIN_TRADE_TYPE.QUICK_SWAP_V3]: {
            name: "QuickSwapV3",
            image: `${f}quickswap.svg`,
            color: "#36C2EA",
          },
          [o.ON_CHAIN_TRADE_TYPE.RAYDIUM]: {
            name: "Raydium",
            image: `${f}raydium.svg`,
            color: "#3875FD",
          },
          [o.ON_CHAIN_TRADE_TYPE.REF_FINANCE]: {
            name: "Ref Finance",
            image: `${f}ref-finance.svg`,
            color: "grey",
          },
          [o.ON_CHAIN_TRADE_TYPE.REN_BTC]: {
            name: "renBTC",
            image: `${f}renbtc.svg`,
            color: "grey",
          },
          [o.ON_CHAIN_TRADE_TYPE.SABER_STABLE_SWAP]: {
            name: "SaberStableSwap",
            image: `${f}saberstableswap.png`,
            color: "#5156C0",
          },
          [o.ON_CHAIN_TRADE_TYPE.SAROS_SWAP]: {
            name: "SarosSwap",
            image: `${f}sarosswap.png`,
            color: "#6CBCCE",
          },
          [o.ON_CHAIN_TRADE_TYPE.SERUM]: {
            name: "Serum",
            image: `${f}serum.png`,
            color: "#38B9CC",
          },
          [o.ON_CHAIN_TRADE_TYPE.SHIBA_SWAP]: {
            name: "ShibaSwap",
            image: `${f}shibaswap.svg`,
            color: "#6CBCCE",
          },
          [o.ON_CHAIN_TRADE_TYPE.SMOOTHY]: {
            name: "Smoothy",
            image: `${f}smoothy.png`,
            color: "#BC2723",
          },
          [o.ON_CHAIN_TRADE_TYPE.SOLAR_BEAM]: {
            name: "SolarBeam",
            image: `${f}solarbeam.svg`,
            color: "#F2A272",
          },
          [o.ON_CHAIN_TRADE_TYPE.SOUL_SWAP]: {
            name: "SoulSwap",
            image: `${f}soulswap.png`,
            color: "#B06DED",
          },
          [o.ON_CHAIN_TRADE_TYPE.SPIRIT_SWAP]: {
            name: "SpiritSwap",
            image: `${f}spiritswap.png`,
            color: "#59C3C8",
          },
          [o.ON_CHAIN_TRADE_TYPE.SPL_TOKEN_SWAP]: {
            name: "SplTokenSwap",
            image: `${f}spltokenswap.svg`,
            color: "#15F095",
          },
          [o.ON_CHAIN_TRADE_TYPE.SPOOKY_SWAP]: {
            name: "SpookySwap",
            image: `${f}spookyswap.svg`,
            color: "#59C3C8",
          },
          [o.ON_CHAIN_TRADE_TYPE.STELLA_SWAP]: {
            name: "StellaSwap",
            image: `${f}stellaswap.svg`,
            color: "#E2107B",
          },
          [o.ON_CHAIN_TRADE_TYPE.SURFDEX]: {
            name: "Surfdex",
            image: `${f}surfswap.png`,
            color: "#39E4DD",
          },
          [o.ON_CHAIN_TRADE_TYPE.SUSHI_SWAP]: {
            name: "SushiSwap",
            image: `${f}sushiswap.svg`,
            color: "#E05DAA",
          },
          [o.ON_CHAIN_TRADE_TYPE.SYMBIOSIS_SWAP]: {
            name: "Symbiosis Dex",
            image: "assets/images/icons/providers/bridge/symbiosis.png",
            color: "#79d778",
          },
          [o.ON_CHAIN_TRADE_TYPE.SYNC_SWAP]: {
            name: "Sync Swap",
            image: "assets/images/icons/providers/bridge/syncswap.svg",
            color: "#79d778",
          },
          [o.ON_CHAIN_TRADE_TYPE.TRADER]: {
            name: "The Trader",
            image: `${f}sushiswap.svg`,
            color: "#E05DAA",
          },
          [o.ON_CHAIN_TRADE_TYPE.TRISOLARIS]: {
            name: "Trisolaris",
            image: `${f}trisolaris.svg`,
            color: "#00F4FF",
          },
          [o.ON_CHAIN_TRADE_TYPE.UBE_SWAP]: {
            name: "UbeSwap",
            image: `${f}ubeswap.svg`,
            color: "#6D619A",
          },
          [o.ON_CHAIN_TRADE_TYPE.UNISWAP_V2]: {
            name: "Uniswap V2",
            image: `${f}uniswap-2.svg`,
            color: "#F9DBEA",
          },
          [o.ON_CHAIN_TRADE_TYPE.UNI_SWAP_V3]: {
            name: "Uniswap V3",
            image: `${f}uniswap-3.svg`,
            color: "#FD017A",
          },
          [o.ON_CHAIN_TRADE_TYPE.VERSE]: {
            name: "Verse",
            image: `${f}verse.png`,
            color: "#0085FF",
          },
          [o.ON_CHAIN_TRADE_TYPE.VIPER_SWAP]: {
            name: "Viper",
            image: `${f}viperswap.svg`,
            color: "#00805C",
          },
          [o.ON_CHAIN_TRADE_TYPE.VOLTAGE_SWAP]: {
            name: "VoltageSwap",
            image: `${f}voltageswap.png`,
            color: "#23A863",
          },
          [o.ON_CHAIN_TRADE_TYPE.VVS_FINANCE]: {
            name: "VVSFinance",
            image: `${f}vvsfinance.png`,
            color: "#2B3852",
          },
          [o.ON_CHAIN_TRADE_TYPE.WAGYU_SWAP]: {
            name: "WagyuSwap",
            image: `${f}wagyuswap.png`,
            color: "#DE2549",
          },
          [o.ON_CHAIN_TRADE_TYPE.WANNA_SWAP]: {
            name: "Wannaswap",
            image: `${f}wannaswap.svg`,
            color: "#FACB5B",
          },
          [o.ON_CHAIN_TRADE_TYPE.WAULT_SWAP]: {
            name: "WaultSwap",
            image: `${f}waultswap.png`,
            color: "#1E7C77",
          },
          [o.ON_CHAIN_TRADE_TYPE.WOO_FI]: {
            name: "WooFi",
            image: `${f}woofi.png`,
            color: "#72BEF4",
          },
          [o.ON_CHAIN_TRADE_TYPE.WRAPPED]: {
            name: "Wrapped",
            image: `${f}wrapped.png`,
            color: "#34A5F5",
          },
          [o.ON_CHAIN_TRADE_TYPE.ZAPPY]: {
            name: "Zappy",
            image: `${f}zappy.svg`,
            color: "#00e7e7",
          },
          [o.ON_CHAIN_TRADE_TYPE.ZIP_SWAP]: {
            name: "ZipSwap",
            image: `${f}zipswap.svg`,
            color: "#34A5F5",
          },
          [o.ON_CHAIN_TRADE_TYPE.ZRX]: {
            name: "0x",
            image: `${f}zrx.svg`,
            color: "#34A5F5",
          },
          [o.ON_CHAIN_TRADE_TYPE.YUZU_SWAP]: {
            name: "YuzuSwap",
            image: `${f}yuzuswap.png`,
            color: "#EE5466",
          },
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V1]: {
            name: "PulseX V1",
            image: `${f}pulsex.png`,
            color: "#00ff73",
          },
          [o.ON_CHAIN_TRADE_TYPE.PULSEX_V2]: {
            name: "PulseX V2",
            image: `${f}pulsex.png`,
            color: "#ff0006",
          },
          [o.BRIDGE_TYPE.ACROSS]: {
            name: "Across",
            image: `${D}across.svg`,
            color: "#29a98b",
          },
          [o.BRIDGE_TYPE.ANY_SWAP]: {
            name: "AnySwap",
            image: `${D}anyswap.svg`,
            color: "#5F6BFB",
          },
          [o.BRIDGE_TYPE.ARBITRUM_BRIDGE]: {
            name: "Arbitrum Bridge",
            image: `${D}arbitrum-bridge.svg`,
            color: "#1275b7",
          },
          [o.BRIDGE_TYPE.AVALANCHE_BRIDGE]: {
            name: "Avalanche Bridge",
            image: `${D}avalanche-bridge.svg`,
            color: "#c2c2c2",
          },
          [o.BRIDGE_TYPE.BRIDGERS]: {
            name: "Bridgers",
            image: `${D}bridgers.png`,
            color: "#E6F3FF",
          },
          [o.BRIDGE_TYPE.CELER]: {
            name: "cBridge",
            image: `${D}celer.svg`,
            color: "#FFFFFF",
          },
          [o.BRIDGE_TYPE.CELER_BRIDGE]: {
            name: "cBridge",
            image: `${D}celer.svg`,
            color: "#FFFFFF",
          },
          [o.BRIDGE_TYPE.CONNEXT]: {
            name: "Connext",
            image: `${D}connext.svg`,
            color: "#8e28fe",
          },
          [o.BRIDGE_TYPE.DEBRIDGE]: {
            name: "DeBridge",
            image: `${D}debridge.svg`,
            color: "#bf38ee",
          },
          [o.BRIDGE_TYPE.HOP]: {
            name: "Hop",
            image: `${D}hop.svg`,
            color: "#de7fb8",
          },
          [o.BRIDGE_TYPE.HYPHEN]: {
            name: "Hyphen",
            image: `${D}hyphen.svg`,
            color: "#353392",
          },
          [o.BRIDGE_TYPE.CHANGENOW]: {
            name: "ChangeNow",
            image: `${D}changenow.png`,
            color: "#8888bb",
          },
          [o.BRIDGE_TYPE.LIFI]: {
            name: "Lifi",
            image: `${D}lifi.svg`,
            color: "#bf38ee",
          },
          [o.BRIDGE_TYPE.MAKERS_WORMHOLE]: {
            name: "Maker's wormhole",
            image: `${D}wormhole.svg`,
            color: "white",
          },
          [o.BRIDGE_TYPE.MULTICHAIN]: {
            name: "Multichain",
            image: `${D}multichain.png`,
            color: "#452fbf",
          },
          [o.BRIDGE_TYPE.OPTIMISM_GATEWAY]: {
            name: "Optimism Gateway",
            image: `${D}optimism-gateway.svg`,
            color: "#FF0420",
          },
          [o.BRIDGE_TYPE.OSMOSIS_BRIDGE]: {
            name: "Osmosis Bridge",
            image: `${D}osmosis.svg`,
            color: "#5E12A0",
          },
          [o.BRIDGE_TYPE.POLYGON]: {
            name: "Polygon bridge",
            image: `${D}polygon-bridge.png`,
            color: "#5d25ba",
          },
          [o.BRIDGE_TYPE.RANGO]: {
            name: "Rango",
            image: `${D}rango.svg`,
            color: "#128535",
          },
          [o.BRIDGE_TYPE.REFUEL]: {
            name: "Refuel",
            image: `${D}refuel.png`,
            color: "#FEA700",
          },
          [o.BRIDGE_TYPE.SATELLITE]: {
            name: "Satellite",
            image: `${D}satellite.svg`,
            color: "#3C82F9",
          },
          [o.BRIDGE_TYPE.STARGATE]: {
            name: "Stargate",
            image: `${D}stargate.svg`,
            color: "#999999",
          },
          [o.BRIDGE_TYPE.SYMBIOSIS]: {
            name: "Symbiosis",
            image: `${D}symbiosis.png`,
            color: "#0dc449",
          },
          [o.BRIDGE_TYPE.SYNAPSE]: {
            name: "Synapse",
            image: `${D}synapse.svg`,
            color: "#b90aba",
          },
          [o.BRIDGE_TYPE.THORCHAIN]: {
            name: "Thorchain",
            image: `${D}thorchain.svg`,
            color: "#33FF99",
          },
          [o.BRIDGE_TYPE.VIA]: {
            name: "Via",
            image: `${D}via.ico`,
            color: "#008141",
          },
          [o.BRIDGE_TYPE.WORMHOLE]: {
            name: "Wormhole",
            image: `${D}wormhole.svg`,
            color: "white",
          },
          [o.BRIDGE_TYPE.YPOOL]: {
            name: "YPool",
            image: `${D}ypool.svg`,
            color: "#15D9E1",
          },
          [o.BRIDGE_TYPE.OPEN_OCEAN]: {
            name: "Open Ocean",
            image: `${D}openocean.png`,
            color: "#15D9E1",
          },
          [o.BRIDGE_TYPE.XY]: {
            name: "XY",
            image: `${D}xy.svg`,
            color: "#1687ee",
          },
          [o.BRIDGE_TYPE.CELER_BRIDGE]: {
            name: "cBridge",
            image: `${D}cbridge.svg`,
            color: "#FFFFFF",
          },
        },
        rl = {
          [o.CROSS_CHAIN_TRADE_TYPE.CELER]: "celer",
          [o.CROSS_CHAIN_TRADE_TYPE.RANGO]: "rango",
          [o.CROSS_CHAIN_TRADE_TYPE.SYMBIOSIS]: "symbiosis",
          [o.CROSS_CHAIN_TRADE_TYPE.LIFI]: "lifi",
          [o.CROSS_CHAIN_TRADE_TYPE.VIA]: "via",
          [o.CROSS_CHAIN_TRADE_TYPE.BRIDGERS]: "bridgers",
          [o.CROSS_CHAIN_TRADE_TYPE.DEBRIDGE]: "dln",
          [o.CROSS_CHAIN_TRADE_TYPE.MULTICHAIN]: "multichain",
          [o.CROSS_CHAIN_TRADE_TYPE.XY]: "xy",
          [o.CROSS_CHAIN_TRADE_TYPE.CELER_BRIDGE]: "celer_bridge",
          [o.CROSS_CHAIN_TRADE_TYPE.CHANGENOW]: "changenow",
          [o.CROSS_CHAIN_TRADE_TYPE.STARGATE]: "stargate",
          [o.CROSS_CHAIN_TRADE_TYPE.ARBITRUM]: "rbc_arbitrum_bridge",
        };
      let ol = (() => {
        class n {
          constructor(t, i, r, s, c) {
            (this.httpService = t),
              (this.authService = i),
              (this.walletConnectorService = r),
              (this.isMobile = s),
              (this.window = c),
              (this.apiEndpoint = "crosschain_trades/trade");
          }
          saveNotWhitelistedProvider(t, i, r) {
            return this.httpService.post("info/new_provider", {
              network: rt.d[i],
              title: rl[r],
              address:
                t.providerRouter +
                (t.providerGateway ? `_${t.providerGateway}` : ""),
              cause: t.cause,
            });
          }
          createTrade(t, i) {
            var r = this;
            return (0, O.Z)(function* () {
              const {
                  fromBlockchain: s,
                  toBlockchain: c,
                  fromAmount: l,
                  fromAddress: d,
                  fromDecimals: _,
                  toAmount: g,
                  toDecimals: C,
                  toAddress: b,
                } = Ke.getCrossChainSwapParams(i),
                k = {
                  from_network: rt.d[s],
                  to_network: rt.d[c],
                  provider: i.type,
                  from_token: d,
                  to_token: b,
                  from_amount: o.Web3Pure.toWei(l, _),
                  to_amount: o.Web3Pure.toWei(g, C),
                  user: r.authService.userAddress,
                  tx_hash: t,
                  wallet_name:
                    r.walletConnectorService.provider.detailedWalletName,
                  device_type: r.isMobile ? "mobile" : "desktop",
                  domain:
                    r.window.location !== r.window.parent.location
                      ? r.window.document.referrer
                      : r.window.document.location.href,
                };
              yield (0,
              nt.z)(r.httpService.post(r.apiEndpoint, k).pipe((0, gn.g)(1e3)));
            })();
          }
          patchTrade(t, i) {
            var r = this;
            return (0, O.Z)(function* () {
              const s = {
                success: i,
                hash: t,
                user: r.authService.userAddress,
              };
              yield (0, nt.z)(r.httpService.patch(r.apiEndpoint, s));
            })();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(hn.O),
              e.ɵɵinject(U.e),
              e.ɵɵinject($e.j),
              e.ɵɵinject(Te.fL),
              e.ɵɵinject(xe.m9)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          }));
        }
        return n;
      })();
      const Fi = [o.BRIDGE_TYPE.CHANGENOW];
      let Bi = (() => {
        class n extends Ci {
          constructor(t, i, r, s, c, l, d, _, g, C, b, k, y, X, te) {
            super("cross-chain-routing"),
              (this.sdkService = t),
              (this.settingsService = i),
              (this.walletConnectorService = r),
              (this.iframeService = s),
              (this.recentTradesStoreService = c),
              (this.headerStore = l),
              (this.dialogService = d),
              (this.gtmService = _),
              (this.gasService = g),
              (this.authService = C),
              (this.queryParamsService = b),
              (this.targetNetworkAddressService = k),
              (this.platformConfigurationService = y),
              (this.crossChainApiService = X),
              (this.tokensService = te),
              (this.defaultTimeout = 25e3);
          }
          get receiverAddress() {
            return this.settingsService.crossChainRoutingValue
              .showReceiverAddress
              ? this.targetNetworkAddressService.address
              : null;
          }
          isSupportedBlockchain(t) {
            return Object.values(
              this.sdkService.crossChain.tradeProviders
            ).some((i) => i.isSupportedBlockchain(t));
          }
          areSupportedBlockchains(t, i) {
            return Object.values(
              this.sdkService.crossChain.tradeProviders
            ).some((r) => r.areSupportedBlockchains(t, i));
          }
          calculateTrade(t, i, r, s, c) {
            const l =
                this.settingsService.crossChainRoutingValue.slippageTolerance /
                100,
              d = this.receiverAddress,
              { disabledCrossChainTradeTypes: _, disabledBridgeTypes: g } =
                this.platformConfigurationService.disabledProviders,
              C = this.queryParamsService.disabledLifiBridges,
              k = Array.from(
                new Set([
                  ...i,
                  ...(_ || []),
                  ...(this.queryParamsService.disabledProviders || []),
                ])
              ),
              y = {
                fromSlippageTolerance: l / 2,
                toSlippageTolerance: l / 2,
                slippageTolerance: l,
                timeout: this.defaultTimeout,
                disabledProviders: k,
                lifiDisabledBridgeTypes: [
                  ...(g?.[o.CROSS_CHAIN_TRADE_TYPE.LIFI] || []),
                  ...(C || []),
                ],
                rangoDisabledBridgeTypes: g?.[o.CROSS_CHAIN_TRADE_TYPE.RANGO],
                ...(d && { receiverAddress: d }),
                changenowFullyEnabled: !0,
                useProxy:
                  this.platformConfigurationService.useCrossChainChainProxy,
              };
            return (0, yn.D)([
              this.sdkService.deflationTokenManager.isDeflationToken(
                new o.Token(r)
              ),
              this.tokensService.getAndUpdateTokenPrice(r, !0),
              this.tokensService.getAndUpdateTokenPrice(s, !0),
            ]).pipe(
              (0, N.w)(([X, te, oe]) => {
                const he = Object.fromEntries(
                    Object.values(o.CROSS_CHAIN_TRADE_TYPE).map((et) => [
                      et,
                      !1,
                    ])
                  ),
                  re = new o.PriceToken({
                    ...new o.Token(r),
                    price: new M.Z(te),
                  }),
                  ke = new o.PriceToken({
                    ...new o.Token(s),
                    price: new M.Z(oe),
                  });
                return this.sdkService.crossChain
                  .calculateTradesReactively(
                    re,
                    c,
                    ke,
                    X.isDeflation ? { ...y, useProxy: he } : y
                  )
                  .pipe(
                    (0, N.w)((et) => {
                      const {
                        total: Ng,
                        calculated: Rg,
                        wrappedTrade: tt,
                      } = et;
                      tt?.error instanceof o.NotWhitelistedProviderError &&
                        this.saveNotWhitelistedProvider(
                          tt.error,
                          r.blockchain,
                          tt.tradeType
                        );
                      const ur = tt?.trade;
                      return (0, Ne.D)(
                        t && ur ? (0, Ne.D)(ur.needApprove()) : (0, V.of)(!1)
                      ).pipe(
                        (0, x.U)((Dg) => ({
                          total: Ng,
                          calculated: Rg,
                          lastCalculatedTrade: tt
                            ? {
                                ...tt,
                                needApprove: Dg,
                                route: this.parseRoute(tt),
                              }
                            : null,
                        }))
                      );
                    })
                  );
              })
            );
          }
          parseRoute(t) {
            if (!t?.trade) return null;
            let i = {
              fromProvider: t.trade.onChainSubtype.from,
              toProvider: t.trade.onChainSubtype.to,
              bridgeProvider: t.tradeType,
            };
            return this.queryParamsService.enabledProviders
              ? i
              : (t.trade instanceof o.LifiCrossChainTrade ||
                  t.trade instanceof o.ViaCrossChainTrade ||
                  t.trade instanceof o.RangoCrossChainTrade) &&
                t.trade.bridgeType
              ? { ...i, bridgeProvider: t.trade.bridgeType }
              : i;
          }
          approve(t) {
            var i = this;
            return (0, O.Z)(function* () {
              i.checkBlockchainsAvailable(t),
                i.checkDeviceAndShowNotification();
              const r = t.trade.from.blockchain,
                s = wn.u[r]
                  ? o.Web3Pure.toWei(
                      yield i.gasService.getGasPriceInEthUnits(r)
                    )
                  : null;
              let c;
              const l = {
                onTransactionHash: () => {
                  c = i.notificationsService.showApproveInProgress();
                },
                ...(s && { gasPrice: s }),
              };
              try {
                yield t.trade.approve(l),
                  i.notificationsService.showApproveSuccessful();
              } catch (d) {
                if (d instanceof o.UnnecessaryApproveError) return;
                throw d;
              } finally {
                c?.unsubscribe();
              }
            })();
          }
          swapTrade(t, i) {
            var r = this;
            return (0, O.Z)(function* () {
              r.checkBlockchainsAvailable(t),
                r.checkDeviceAndShowNotification();
              const [s, c] = yield Promise.all([
                  r.tokensService.findToken(t.trade.from),
                  r.tokensService.findToken(t.trade.to),
                ]),
                l = r.authService.userAddress;
              let d;
              const g = t.trade.from.blockchain,
                C = wn.u[g]
                  ? o.Web3Pure.toWei(
                      yield r.gasService.getGasPriceInEthUnits(g)
                    )
                  : null,
                b = r.receiverAddress,
                k = {
                  onConfirm: (y) => {
                    (d = y),
                      i?.(),
                      r.crossChainApiService.createTrade(y, t.trade);
                    const X = Date.now(),
                      te =
                        t.trade instanceof o.ViaCrossChainTrade && t.trade.uuid,
                      oe =
                        t.trade instanceof o.RangoCrossChainTrade &&
                        t.trade.requestId,
                      he =
                        t.trade instanceof o.ChangenowCrossChainTrade &&
                        t.trade.id,
                      re = {
                        srcTxHash: y,
                        fromToken: s,
                        toToken: c,
                        crossChainTradeType: t.tradeType,
                        timestamp: X,
                        bridgeType: t.trade.bridgeType,
                        amountOutMin: t.trade.toTokenAmountMin.toFixed(),
                        ...(te && { viaUuid: te }),
                        ...(oe && { rangoRequestId: oe }),
                        ...(he && { changenowId: he }),
                      };
                    r.openSwapSchemeModal(t, y, X, s, c);
                    try {
                      r.recentTradesStoreService.saveTrade(l, re);
                    } catch {}
                    r.notifyGtmAfterSignTx(y, s, c, t.trade.from.tokenAmount);
                  },
                  ...(b && { receiverAddress: b }),
                  ...(C && { gasPrice: C }),
                  ...(r.queryParamsService.testMode && { testMode: !0 }),
                  ...(r.platformConfigurationService
                    .useCrossChainChainProxy && {
                    useProxy:
                      r.platformConfigurationService.useCrossChainChainProxy[
                        t.tradeType
                      ],
                  }),
                };
              try {
                yield t.trade.swap(k),
                  r.showSuccessTrxNotification(),
                  yield r.crossChainApiService.patchTrade(d, !0);
              } catch (y) {
                throw (
                  (d &&
                    y instanceof Error &&
                    y.message.includes("Transaction was not mined") &&
                    (yield r.crossChainApiService.patchTrade(d, !1)),
                  y instanceof o.NotWhitelistedProviderError &&
                    r.saveNotWhitelistedProvider(
                      y,
                      t.trade.from.blockchain,
                      t.tradeType
                    ),
                  y)
                );
              }
            })();
          }
          checkBlockchainsAvailable(t) {
            const i = t.trade.from.blockchain,
              r = t.trade.to.blockchain;
            if (!this.platformConfigurationService.isAvailableBlockchain(i))
              throw new Ct(ge.h[i]);
            if (!this.platformConfigurationService.isAvailableBlockchain(r))
              throw new Ct(ge.h[r]);
          }
          checkDeviceAndShowNotification() {
            this.iframeService.isIframe &&
              "mobile" === this.iframeService.device &&
              this.notificationsService.showOpenMobileWallet();
          }
          notifyGtmAfterSignTx(t, i, r, s) {
            const c = new M.Z(1);
            this.gtmService.fireTxSignedEvent(
              S.V.CROSS_CHAIN_ROUTING,
              t,
              i.symbol,
              r.symbol,
              c,
              s.multipliedBy(i.price)
            );
          }
          openSwapSchemeModal(t, i, r, s, c) {
            const { trade: l, route: d } = t,
              _ = l.bridgeType;
            let g = ze[_];
            const C = d.fromProvider
                ? ze[d.fromProvider]
                : { ...g, name: g.name },
              b = d.toProvider ? ze[d.toProvider] : { ...g, name: g.name };
            Fi.some((oe) => oe === _) &&
              (g = { ...g, name: g.name + " (Centralized)" });
            const k =
                t.trade instanceof o.ViaCrossChainTrade ? t.trade.uuid : void 0,
              y =
                t.trade instanceof o.RangoCrossChainTrade
                  ? t.trade.requestId
                  : void 0,
              X = t.trade.toTokenAmountMin.toFixed(),
              te =
                t.trade instanceof o.ChangenowCrossChainTrade
                  ? t.trade.id
                  : void 0;
            this.dialogService
              .open(new L.Al(tl), {
                size: this.headerStore.isMobile ? "page" : "l",
                data: {
                  fromToken: s,
                  toToken: c,
                  srcProvider: C,
                  dstProvider: b,
                  crossChainProvider: t.tradeType,
                  srcTxHash: i,
                  bridgeType: g,
                  viaUuid: k,
                  rangoRequestId: y,
                  timestamp: r,
                  amountOutMin: X,
                  changenowId: te,
                },
              })
              .subscribe();
          }
          saveNotWhitelistedProvider(t, i, r) {
            this.crossChainApiService
              .saveNotWhitelistedProvider(t, i, r)
              .subscribe();
          }
          getChangenowPaymentInfo(t) {
            var i = this;
            return (0, O.Z)(function* () {
              const r = i.receiverAddress;
              return {
                paymentInfo: yield t.getChangenowPostTrade(r),
                receiverAddress: r,
              };
            })();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(Ge.w),
              e.ɵɵinject(ve),
              e.ɵɵinject($e.j),
              e.ɵɵinject(Q.b),
              e.ɵɵinject(Vt.o),
              e.ɵɵinject(Mt.N),
              e.ɵɵinject(De.RO),
              e.ɵɵinject(Ue.k),
              e.ɵɵinject(It.Q),
              e.ɵɵinject(U.e),
              e.ɵɵinject(Ae.E),
              e.ɵɵinject(Oe),
              e.ɵɵinject(Et.L),
              e.ɵɵinject(ol),
              e.ɵɵinject(Ee.H)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var al = p(2273),
        kn = p(60607);
      class An extends z.q {
        constructor() {
          super(
            null,
            {},
            "The swap between this pair of tokens is currently unavailable. Please try again later."
          ),
            Object.setPrototypeOf(this, An.prototype);
        }
      }
      const sl = An;
      class Mn extends z.q {
        constructor(a) {
          super(
            null,
            {},
            a
              ? `Swaps to and from ${ge.h[a]} are temporarily disabled for extended maintenance.`
              : "Selected blockchains are not supported in Cross-Chain."
          ),
            Object.setPrototypeOf(this, Mn.prototype);
        }
      }
      const cl = Mn;
      var ll = p(68315);
      class En extends xn.V {
        constructor() {
          super("errors.crossChainIsUnavailable"),
            Object.setPrototypeOf(this, En.prototype);
        }
      }
      const pl = En;
      var In = p(72549),
        ne = (() => {
          return (
            ((n = ne || (ne = {})).NONE = "none"),
            (n.APPROVE_STARTED = "approve started"),
            (n.SWAP_STARTED = "swap started"),
            ne
          );
          var n;
        })();
      class Nn extends xn.V {
        constructor() {
          super("errors.crossChainSwapUnavailable"),
            Object.setPrototypeOf(this, Nn.prototype);
        }
      }
      const dl = Nn;
      function Hi(n, a) {
        return (
          n.onChainSubtype.from === a.onChainSubtype.from &&
          n.onChainSubtype.to === a.onChainSubtype.to &&
          n.bridgeType === a.bridgeType
        );
      }
      var Li = p(11951);
      let ot = (() => {
        class n {
          constructor(t, i, r, s, c, l, d, _, g, C, b, k, y, X, te, oe) {
            (this.swapFormService = t),
              (this.swapTypeService = i),
              (this.refreshService = r),
              (this.authService = s),
              (this.crossChainCalculationService = c),
              (this.tokensService = l),
              (this.settingsService = d),
              (this.targetNetworkAddressService = _),
              (this.gtmService = g),
              (this.errorsService = C),
              (this.iframeService = b),
              (this.dialogService = k),
              (this.tradeService = y),
              (this.changenowPostTradeService = X),
              (this.router = te),
              (this.injector = oe),
              (this._calculateTrade$ = new Ce.x()),
              (this._tradeStatus$ = new A.X(h.DISABLED)),
              (this.tradeStatus$ = this._tradeStatus$.asObservable()),
              (this._isCalculating$ = new A.X(!1)),
              (this.isCalculating$ = this._isCalculating$.asObservable()),
              (this._taggedTrades$ = new A.X([])),
              (this.taggedTrades$ = this._taggedTrades$.asObservable()),
              (this._selectedTrade$ = new A.X(null)),
              (this.selectedTrade$ = this._selectedTrade$.asObservable()),
              (this._selectedTradeError$ = new A.X(null)),
              (this.selectedTradeError$ =
                this._selectedTradeError$.asObservable()),
              (this.updatedSelectedTrade = null),
              (this._criticalError$ = new A.X(null)),
              (this.criticalError$ = this._criticalError$.asObservable()),
              (this.replacedTaggedTrades = []),
              (this.disabledTradesTypes = []),
              (this._displayApproveButton$ = new A.X(!1)),
              (this.displayApproveButton$ =
                this._displayApproveButton$.asObservable()),
              (this.isSwapStarted = ne.NONE),
              (this.isTradeSelectedByUser = !1),
              (this.isButtonHovered = !1),
              (this.refreshServiceCallsCounter = 0),
              this.subscribeOnCalculation(),
              this.subscribeOnFormChanges(),
              this.subscribeOnSettingsChanges(),
              this.subscribeOnReceiverAddressChanges(),
              this.subscribeOnUserAddressChanges(),
              this.subscribeOnRefreshServiceCalls(),
              this.subscribeOnIsButtonHoveredChanges();
          }
          static setTags(t) {
            return {
              ...t,
              tags: {
                minAmountWarning: t.error instanceof o.MinAmountError,
                maxAmountWarning: t.error instanceof o.MaxAmountError,
              },
            };
          }
          get tradeStatus() {
            return this._tradeStatus$.getValue();
          }
          set tradeStatus(t) {
            this._tradeStatus$.next(t);
          }
          set isCalculating(t) {
            this._isCalculating$.next(t);
          }
          get taggedTrades() {
            return this._taggedTrades$.getValue();
          }
          set taggedTrades(t) {
            this._taggedTrades$.next(t);
          }
          get selectedTrade() {
            return this._selectedTrade$.getValue();
          }
          set selectedTrade(t) {
            this._selectedTrade$.next(t),
              this._selectedTradeError$.next(
                t?.error ? this.parseCalculationError(t.error) : null
              );
          }
          set criticalError(t) {
            this._criticalError$.next(t);
          }
          set displayApproveButton(t) {
            this._displayApproveButton$.next(t);
          }
          get inputValue() {
            const t = this.swapFormService.inputValue;
            if (
              t.fromAssetType &&
              !o.BlockchainsInfo.isBlockchainName(t.fromAssetType)
            )
              throw new z.q("Cannot use cross chain");
            return {
              ...t,
              fromBlockchain: t.fromAssetType,
              fromToken: t.fromAsset,
            };
          }
          subscribeOnCalculation() {
            this._calculateTrade$
              .pipe(
                (0, Ve.b)(200),
                (0, x.U)((t) =>
                  t.stop || !this.swapFormService.isFilled
                    ? ((this.tradeStatus = h.DISABLED),
                      this.swapTypeService.getSwapProviderType() ===
                        S.V.CROSS_CHAIN_ROUTING &&
                        (this.refreshService.setStopped(),
                        this.swapFormService.outputControl.patchValue({
                          toAmount: new M.Z(NaN),
                        })),
                      { ...t, stop: !0 })
                    : { ...t, stop: !1 }
                ),
                (0, N.w)((t) => {
                  if (t.stop) return (0, V.of)(null);
                  const {
                    fromBlockchain: i,
                    fromToken: r,
                    toToken: s,
                    fromAmount: c,
                  } = this.inputValue;
                  let l = !1;
                  try {
                    l =
                      Boolean(this.authService.userAddress) &&
                      this.authService.userChainType ===
                        o.BlockchainsInfo.getChainType(i);
                  } catch {}
                  return (
                    l
                      ? (0, Ne.D)(
                          this.tokensService.getAndUpdateTokenBalance(r)
                        )
                      : (0, V.of)(null)
                  ).pipe(
                    (0, N.w)((_) =>
                      !t.isForced && null !== _ && _.lt(c)
                        ? (0, V.of)(null)
                        : (t.isForced && this.unsetCalculatedTrades(),
                          this.tradeStatus !== h.READY_TO_APPROVE &&
                            this.tradeStatus !== h.READY_TO_SWAP &&
                            this.tradeStatus !== h.OLD_TRADE_DATA &&
                            (this.tradeStatus = h.LOADING),
                          (this.isCalculating = !0),
                          this.refreshService.setRefreshing(),
                          this.crossChainCalculationService
                            .calculateTrade(
                              l,
                              this.disabledTradesTypes,
                              r,
                              s,
                              c
                            )
                            .pipe(
                              (0, fe.b)(
                                ({
                                  total: C,
                                  calculated: b,
                                  lastCalculatedTrade: k,
                                }) => {
                                  const y = b === C;
                                  y &&
                                    ((this.isCalculating = !1),
                                    this.refreshService.setStopped()),
                                    this.checkLastCalculatedTrade(k, y);
                                }
                              ),
                              (0, Dt.K)(
                                (C) => (
                                  (this.tradeStatus = h.DISABLED),
                                  (this.isCalculating = !1),
                                  this.refreshService.setStopped(),
                                  (this.criticalError =
                                    this.parseCalculationError(C)),
                                  (0, V.of)(null)
                                )
                              )
                            ))
                    )
                  );
                })
              )
              .subscribe();
          }
          checkLastCalculatedTrade(t, i) {
            let r = !1;
            if (t?.error) {
              const s = this.parseCalculationError(t.error);
              (this.isExecutionCriticalError(s) || !t?.trade) &&
                ((r = !0), this.disableUnavailableTrade(t.tradeType, !1));
            }
            if (t && !r)
              if (
                (this.updateTradesList(t),
                (this.isTradeSelectedByUser ||
                  this.isButtonHovered ||
                  this.isSwapStarted !== ne.NONE) &&
                  t?.trade?.to.tokenAmount.gt(0))
              )
                this.compareSelectedTradeToBestTrade();
              else {
                const s = this.taggedTrades[0];
                (s?.trade?.to.tokenAmount.gt(0) || i) &&
                  this.updateSelectedTrade(s);
              }
            else i && this.updateSelectedTrade(this.taggedTrades[0] || null);
          }
          updateTradesList(t) {
            let i = this.taggedTrades.filter(
              (c) => c.tradeType !== t.tradeType
            );
            this.replacedTaggedTrades = this.replacedTaggedTrades.filter(
              (c) => c.tradeType !== t.tradeType
            );
            const r = n.setTags(t),
              s = t.trade;
            if (s) {
              const c = i.find((l) => {
                const d = l.trade;
                return !!d && Hi(d, s);
              });
              if (c) {
                if (
                  !c.trade.isAggregator ||
                  c.trade.to.tokenAmount.gt(s.to.tokenAmount)
                )
                  return (
                    (this.replacedTaggedTrades =
                      this.replacedTaggedTrades.concat(r)),
                    void (this.taggedTrades = i)
                  );
                (this.replacedTaggedTrades =
                  this.replacedTaggedTrades.concat(c)),
                  (i = i.filter((l) => l.tradeType !== c.tradeType));
              }
            }
            this.taggedTrades = i.concat(r).sort(o.compareCrossChainTrades);
          }
          compareSelectedTradeToBestTrade() {
            let t;
            (t = this.isTradeSelectedByUser
              ? this.taggedTrades.find(
                  (i) => i?.trade && Hi(i?.trade, this.selectedTrade.trade)
                )
              : this.tradeStatus === h.READY_TO_APPROVE ||
                (this.isSwapStarted === ne.NONE && this.isButtonHovered)
              ? this.taggedTrades[0]
              : this.taggedTrades.find((i) => !i.needApprove && !i.error)),
              t &&
                (this.selectedTrade &&
                (this.selectedTrade.tradeType !== t.tradeType ||
                  !this.selectedTrade.trade.to.tokenAmount.eq(
                    t.trade.to.tokenAmount
                  ) ||
                  (!this.selectedTrade.error && t.error))
                  ? ((this.updatedSelectedTrade = t),
                    (this.tradeStatus === h.READY_TO_APPROVE ||
                      this.tradeStatus === h.READY_TO_SWAP) &&
                      (this.tradeStatus = h.OLD_TRADE_DATA))
                  : (this.selectedTrade = t));
          }
          updateRate() {
            this.updatedSelectedTrade
              ? this.updateSelectedTrade(this.updatedSelectedTrade)
              : ((this.tradeStatus = h.LOADING), this.startRecalculation());
          }
          updateSelectedTrade(t, i = !1) {
            if (
              ((this.selectedTrade = t),
              (this.updatedSelectedTrade = null),
              t?.trade?.to.tokenAmount.gt(0))
            ) {
              this.swapFormService.outputControl.patchValue({
                toAmount: t.trade.to.tokenAmount,
              });
              const { error: r, needApprove: s } = t;
              r
                ? (this.tradeStatus = h.DISABLED)
                : ((this.tradeStatus = s
                    ? h.READY_TO_APPROVE
                    : h.READY_TO_SWAP),
                  (this.displayApproveButton = s)),
                i &&
                  ((this.isTradeSelectedByUser = !0),
                  (this.tradeSelectedByUserTimeout = setTimeout(() => {
                    this.isTradeSelectedByUser = !1;
                  }, 1e7)));
            } else
              this.swapFormService.outputControl.patchValue({
                toAmount: new M.Z(NaN),
              }),
                (this.tradeStatus = h.DISABLED),
                (this.criticalError = this.parseCalculationError(t?.error));
          }
          parseCalculationError(t) {
            if (t instanceof o.NotSupportedTokensError)
              return new z.q(
                "Currently, Rubic does not support swaps between these tokens."
              );
            if (t instanceof o.UnsupportedReceiverAddressError)
              return new z.q(
                "This provider doesn\u2019t support the receiver address."
              );
            if (t instanceof o.CrossChainIsUnavailableError) return new pl();
            if (t instanceof o.LowSlippageError)
              return new z.q("Slippage is too low for transaction.");
            if (t instanceof o.TooLowAmountError)
              return new z.q(
                "The swap can't be executed with the entered amount of tokens. Please change it to the greater amount."
              );
            if (t?.message?.includes("No available routes"))
              return new z.q("No available routes.");
            if (t?.message?.includes("There are no providers for trade"))
              return new z.q("There are no providers for trade.");
            if (t?.message?.includes("Representation of "))
              return new z.q(
                "The swap between this pair of blockchains is currently unavailable."
              );
            const i = t && Ze.E.parseError(t);
            return !i || i instanceof kn.M ? new sl() : i;
          }
          subscribeOnFormChanges() {
            this.swapFormService.inputValueDistinct$.subscribe(() => {
              this.startRecalculation();
            });
          }
          subscribeOnSettingsChanges() {
            this.settingsService.crossChainRoutingValueChanges
              .pipe(
                (0, Pe.O)(this.settingsService.crossChainRoutingValue),
                (0, ce.x)((t, i) => t.slippageTolerance === i.slippageTolerance)
              )
              .subscribe(() => {
                this.startRecalculation();
              });
          }
          subscribeOnReceiverAddressChanges() {
            (0, j.a)([
              this.settingsService.crossChainRoutingValueChanges.pipe(
                (0, Pe.O)(this.settingsService.crossChainRoutingValue),
                (0, x.U)((t) => t.showReceiverAddress)
              ),
              this.targetNetworkAddressService.address$,
              this.swapFormService.fromBlockchain$,
            ])
              .pipe(
                (0, x.U)(([t, i, r]) => (!t || Xn[r] ? null : i)),
                (0, ce.x)((t, i) => (!t && !i) || t === i)
              )
              .subscribe(() => {
                this.startRecalculation();
              });
          }
          subscribeOnUserAddressChanges() {
            this.authService.currentUser$
              .pipe(
                (0, x.U)((t) => t?.address),
                (0, ce.x)()
              )
              .subscribe(() => {
                this.startRecalculation();
              });
          }
          unsetCalculatedTrades() {
            (this.taggedTrades = []),
              (this.replacedTaggedTrades = []),
              (this.disabledTradesTypes = []),
              this.updateSelectedTrade(null),
              this.unsetTradeSelectedByUser(),
              (this.criticalError = null),
              (this.isSwapStarted = ne.NONE),
              (this.refreshServiceCallsCounter = 0);
          }
          subscribeOnRefreshServiceCalls() {
            this.refreshService.onRefresh$.subscribe(({ isForced: t }) => {
              if (t)
                this.unsetTradeSelectedByUser(),
                  (this.isSwapStarted = ne.NONE),
                  (this.refreshServiceCallsCounter = 0),
                  this.startRecalculation();
              else {
                if (
                  !this.authService.userAddress ||
                  !this.selectedTrade ||
                  this.selectedTrade.error
                )
                  return;
                if (this.refreshServiceCallsCounter >= 4)
                  return void (this.tradeStatus = h.OLD_TRADE_DATA);
                (this.refreshServiceCallsCounter += 1),
                  this.startRecalculation(!1);
              }
            });
          }
          unsetTradeSelectedByUser() {
            (this.isTradeSelectedByUser = !1),
              clearTimeout(this.tradeSelectedByUserTimeout);
          }
          startRecalculation(t = !0) {
            if (
              this.swapTypeService.getSwapProviderType() !==
              S.V.CROSS_CHAIN_ROUTING
            )
              return void this._calculateTrade$.next({ stop: !0 });
            const { fromAssetType: i, toBlockchain: r } =
                this.swapFormService.inputValue,
              s = i;
            if (
              !this.crossChainCalculationService.areSupportedBlockchains(s, r)
            ) {
              let c;
              return (
                this.crossChainCalculationService.isSupportedBlockchain(s)
                  ? this.crossChainCalculationService.isSupportedBlockchain(
                      r
                    ) || (c = r)
                  : (c = s),
                (this.criticalError = new cl(c)),
                void this._calculateTrade$.next({ stop: !0 })
              );
            }
            t && this.unsetCalculatedTrades(),
              this._calculateTrade$.next({ isForced: t });
          }
          subscribeOnIsButtonHoveredChanges() {
            this.tradeService.isButtonHovered$.subscribe((t) => {
              (this.isButtonHovered = t),
                !t &&
                  this.isSwapStarted === ne.NONE &&
                  this.updatedSelectedTrade &&
                  this.updateSelectedTrade(this.updatedSelectedTrade);
            });
          }
          approveTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              (t.isSwapStarted = ne.APPROVE_STARTED),
                (t.tradeStatus = h.APPROVE_IN_PROGRESS),
                t.refreshService.startInProgress();
              try {
                const i = t.selectedTrade.trade.from.blockchain;
                yield t.crossChainCalculationService.approve(t.selectedTrade),
                  t.updatedSelectedTrade
                    ? (t.tradeStatus = h.OLD_TRADE_DATA)
                    : ((t.tradeStatus = h.READY_TO_SWAP),
                      (t.selectedTrade = {
                        ...t.selectedTrade,
                        needApprove: !1,
                      })),
                  t.gtmService.updateFormStep(
                    S.V.CROSS_CHAIN_ROUTING,
                    "approve"
                  ),
                  yield t.tokensService.updateNativeTokenBalance(i);
              } catch (i) {
                const r = Ze.E.parseError(i);
                r instanceof In.v && (t.isSwapStarted = ne.NONE),
                  t.errorsService.catch(r),
                  (t.tradeStatus = t.updatedSelectedTrade
                    ? h.OLD_TRADE_DATA
                    : h.READY_TO_APPROVE);
              }
              t.refreshService.stopInProgress();
            })();
          }
          swapTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              if (
                (t.isSwapStarted === ne.NONE &&
                  (t.isSwapStarted = ne.SWAP_STARTED),
                t.selectedTrade.trade.type ===
                  o.CROSS_CHAIN_TRADE_TYPE.CHANGENOW &&
                  !o.BlockchainsInfo.isEvmBlockchainName(
                    t.selectedTrade.trade.from.blockchain
                  ))
              )
                return void (yield t.handleChangenowNonEvmTrade());
              if (
                !t.isSlippageCorrect() ||
                !(yield t.settingsService.checkSlippageAndPriceImpact(
                  S.V.CROSS_CHAIN_ROUTING,
                  t.selectedTrade.trade
                ))
              )
                return;
              (t.tradeStatus = h.SWAP_IN_PROGRESS),
                t.refreshService.startInProgress();
              const i = t.selectedTrade;
              try {
                yield t.crossChainCalculationService.swapTrade(i, () => {
                  (t.isSwapStarted = ne.NONE),
                    t.unsetTradeSelectedByUser(),
                    t.updatedSelectedTrade &&
                      t.updateSelectedTrade(t.updatedSelectedTrade),
                    (t.tradeStatus = h.READY_TO_SWAP),
                    t.refreshService.stopInProgress(),
                    t.startRecalculation();
                });
                const r = i.trade.from;
                yield t.tokensService.updateTokenBalanceAfterCcrSwap(r);
              } catch (r) {
                t.handleSwapError(r, i.tradeType);
              }
            })();
          }
          handleChangenowNonEvmTrade() {
            var t = this;
            return (0, O.Z)(function* () {
              (t.tradeStatus = h.SWAP_IN_PROGRESS),
                t.refreshService.startInProgress();
              try {
                const { paymentInfo: i, receiverAddress: r } =
                  yield t.crossChainCalculationService.getChangenowPaymentInfo(
                    t.selectedTrade.trade
                  );
                t.changenowPostTradeService.updateTrade(i, r),
                  yield t.router.navigate(["/changenow-post"], {
                    queryParamsHandling: "merge",
                  }),
                  (t.isSwapStarted = ne.NONE),
                  t.unsetTradeSelectedByUser(),
                  t.updatedSelectedTrade &&
                    t.updateSelectedTrade(t.updatedSelectedTrade),
                  (t.tradeStatus = h.READY_TO_SWAP);
              } catch (i) {
                t.handleSwapError(i, o.CROSS_CHAIN_TRADE_TYPE.CHANGENOW);
              }
            })();
          }
          isSlippageCorrect() {
            if (
              this.settingsService.crossChainRoutingValue
                .autoSlippageTolerance ||
              [
                o.CROSS_CHAIN_TRADE_TYPE.VIA,
                o.CROSS_CHAIN_TRADE_TYPE.BRIDGERS,
              ].every((i) => i !== this.selectedTrade.trade.type)
            )
              return !0;
            const t = this.iframeService.isIframe ? "fullscreen" : "s";
            return (
              this.dialogService
                .open(new L.Al(Oi, this.injector), { size: t })
                .subscribe(),
              !1
            );
          }
          handleSwapError(t, i) {
            const r = Ze.E.parseError(t);
            this.isExecutionCriticalError(r)
              ? ((this.isSwapStarted = ne.NONE),
                this.unsetTradeSelectedByUser(),
                this.errorsService.catch(new dl()),
                this.disableUnavailableTrade(i, !0))
              : (r instanceof In.v &&
                  this.isSwapStarted === ne.SWAP_STARTED &&
                  (this.isSwapStarted = ne.NONE),
                this.errorsService.catch(r)),
              (this.tradeStatus = this.updatedSelectedTrade
                ? h.OLD_TRADE_DATA
                : h.READY_TO_SWAP),
              this.refreshService.stopInProgress();
          }
          isExecutionCriticalError(t) {
            return [al.Z, ll.Z, kn.M].some((i) => t instanceof i);
          }
          disableUnavailableTrade(t, i) {
            (this.taggedTrades = this.taggedTrades.filter(
              (r) => r.tradeType !== t
            )),
              this.replacedTaggedTrades.forEach((r) => {
                this.updateTradesList(r);
              }),
              this.disabledTradesTypes.push(t),
              i && this.updateSelectedTrade(this.taggedTrades[0]);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(E.q),
              e.ɵɵinject(ae.H),
              e.ɵɵinject(pt),
              e.ɵɵinject(U.e),
              e.ɵɵinject(Bi),
              e.ɵɵinject(Ee.H),
              e.ɵɵinject(ve),
              e.ɵɵinject(Oe),
              e.ɵɵinject(Ue.k),
              e.ɵɵinject(gt.r),
              e.ɵɵinject(Q.b),
              e.ɵɵinject(De.RO),
              e.ɵɵinject(Je),
              e.ɵɵinject(Li.W),
              e.ɵɵinject(At.F0),
              e.ɵɵinject(e.INJECTOR)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      function ml(n, a) {
        if (
          (1 & n && e.ɵɵelement(0, "app-iframe-asset-type-indicator", 8), 2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet;
          e.ɵɵproperty("assetType", t.toBlockchain);
        }
      }
      function _l(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵelementStart(1, "span", 10),
          e.ɵɵtext(2, "Loading"),
          e.ɵɵelementEnd(),
          e.ɵɵelementContainerEnd());
      }
      function ul(n, a) {
        1 & n && e.ɵɵelement(0, "app-tokens-rate");
      }
      const gl = function (n) {
        return { minRound: 3, maxRound: 5, decimals: n };
      };
      function hl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵtemplate(4, ul, 1, 0, "app-tokens-rate", 11),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngLet,
            i = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind3(
                2,
                1,
                e.ɵɵpipeBind1(3, 5, t),
                "toClosestValue",
                e.ɵɵpureFunction1(
                  7,
                  gl,
                  null == i.toToken ? null : i.toToken.decimals
                )
              ),
              " "
            );
        }
      }
      function fl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "translate"),
            e.ɵɵelement(3, "div", 12),
            e.ɵɵpipe(4, "translate"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(2, 3, "errors.tradingIsNotAvailable"),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(4, 5, t.errorText)
            );
        }
      }
      function vl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, _l, 3, 0, "ng-container", 9),
            e.ɵɵtemplate(2, hl, 5, 9, "ng-container", 9),
            e.ɵɵtemplate(3, fl, 5, 7, "ng-container", 9),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2).ngLet,
            r = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !r.errorText && !t && i),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", (null == t ? null : t.gt(0)) && !r.errorText),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", r.errorText);
        }
      }
      const Cl = function (n) {
        return { "bottom-amount__output_error": n };
      };
      function xl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 4),
            e.ɵɵtemplate(1, ml, 1, 1, "app-iframe-asset-type-indicator", 5),
            e.ɵɵelementStart(2, "div", 6),
            e.ɵɵtemplate(3, vl, 4, 3, "ng-container", 7),
            e.ɵɵpipe(4, "async"),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("onlyFrame", "vertical"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(5, Cl, t.errorText)),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(4, 3, t.toAmount$));
        }
      }
      function bl(n, a) {
        1 & n && e.ɵɵelement(0, "app-tokens-rate");
      }
      function yl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 1),
            e.ɵɵtemplate(1, xl, 5, 7, "div", 2),
            e.ɵɵpipe(2, "async"),
            e.ɵɵtemplate(3, bl, 1, 0, "app-tokens-rate", 3),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.formData$));
        }
      }
      let $i = (() => {
        class n {
          constructor(t) {
            (this.swapFormService = t),
              (this.errorText = ""),
              (this.formData$ = this.swapFormService.inputValue$),
              (this.isFormFilled$ = this.swapFormService.isFilled$),
              (this.toAmount$ = this.swapFormService.outputValue$.pipe(
                (0, x.U)((i) =>
                  i.toAmount?.isFinite() ? M.Z.max(0, i.toAmount) : null
                )
              ));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(E.q));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-to-amount-estimated"]],
            inputs: { errorText: "errorText" },
            decls: 2,
            vars: 3,
            consts: [
              ["class", "bottom-amount", 4, "ngLet"],
              [1, "bottom-amount"],
              ["class", "bottom-amount__blockchain-and-value", 4, "ngLet"],
              [4, "onlyFrame"],
              [1, "bottom-amount__blockchain-and-value"],
              [3, "assetType", 4, "onlyFrame"],
              [1, "bottom-amount__output", 3, "ngClass"],
              [4, "ngLet"],
              [3, "assetType"],
              [4, "ngIf"],
              [1, "blink-animation"],
              [4, "noFrame"],
              [
                "tuiHintMode",
                "error",
                1,
                "bottom-amount__hint",
                "bottom-amount__hint_error",
                3,
                "inlineSVG",
                "tuiHint",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, yl, 4, 3, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.isFormFilled$));
            },
            dependencies: [
              m.mk,
              m.O5,
              F.e,
              me.a,
              Me.T,
              Lt,
              H.D,
              G.d$,
              Tn,
              m.Ov,
              be.N,
              R.X$,
              ye.f,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{overflow:hidden}html.iframe-horizontal   [_nghost-%COMP%]{width:100%}.bottom-amount[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-end;justify-content:space-between;max-width:350px;height:58px;margin-bottom:10px}html.iframe[_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]{height:100%}html.iframe-vertical[_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]{align-items:flex-start;justify-content:unset;max-width:unset}html.iframe-horizontal[_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]{margin-bottom:0}.bottom-amount__blockchain-and-value[_ngcontent-%COMP%]{display:flex;width:100%;height:100%}html.iframe-vertical[_nghost-%COMP%]   .bottom-amount__blockchain-and-value[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-amount__blockchain-and-value[_ngcontent-%COMP%]{margin-bottom:10px}.bottom-amount__blockchain-and-value[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%]{margin-right:15px}.bottom-amount[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{display:block}html.iframe-horizontal[_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{position:absolute;bottom:-33px;left:5px}html.iframe-vertical[_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-amount[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{margin-left:5px}.bottom-amount__output[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;height:100%;overflow:auto;font-size:22px;line-height:35px;letter-spacing:.1em;text-align:left;transition:opacity ease-in-out .3s}@media (max-width: 420px){.bottom-amount__output[_ngcontent-%COMP%]{text-align:left}}html.iframe-horizontal[_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%]{font-size:16px;white-space:nowrap;text-align:left}html.iframe-vertical[_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%]{width:100%;height:50px;padding:0 16px;color:var(--primary-text);font-size:18px;line-height:50px;text-align:start;background-color:var(--primary-background);border-radius:10px}html.iframe-vertical:not(.dark)[_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%], html.iframe-vertical:not(.dark)   [_nghost-%COMP%]   .bottom-amount__output[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}.bottom-amount__output[_ngcontent-%COMP%]::-webkit-scrollbar{display:none}.bottom-amount__output_error[_ngcontent-%COMP%]{flex-direction:row;height:35px;font-weight:300;font-size:16px;letter-spacing:1px}.bottom-amount__output[_ngcontent-%COMP%]   .blink-animation[_ngcontent-%COMP%]{color:var(--tui-text-01);font-size:22px;letter-spacing:1px;opacity:1;animation:_ngcontent-%COMP%_blink 2s ease-in-out infinite}.bottom-amount__hint[_ngcontent-%COMP%]{display:flex;align-items:center;width:15px;margin-left:10px;cursor:help}.bottom-amount__hint[_ngcontent-%COMP%]     svg path{fill:#dfcb5f}@keyframes _ngcontent-%COMP%_blink{0%{opacity:1}50%{opacity:.25}to{opacity:1}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var we = p(45261);
      let xt = (() => {
        class n {
          constructor() {}
          get leftColor() {
            return this.handleThemeColor(this.fromProvider.color);
          }
          get rightColor() {
            return this.handleThemeColor(this.toProvider.color);
          }
          set route(t) {
            (this.bridgeProvider = n.getRoute(
              t.bridgeProvider,
              t.bridgeProvider
            )),
              (this.fromProvider = n.getRoute(
                t?.fromProvider,
                t.bridgeProvider
              )),
              (this.toProvider = n.getRoute(t?.toProvider, t.bridgeProvider));
          }
          static getRoute(t, i) {
            const r = Fi.some((s) => s === i);
            return t
              ? { ...ze[t], ...(r && { name: `${ze[t].name} (Centralized)` }) }
              : { ...ze[i], name: r ? ze[i].name : `${ze[i].name} Pool` };
          }
          isBlackColor(t) {
            const i = t.toLowerCase();
            return "#000" === i || "black" === i || "#000000" === i;
          }
          isWhiteColor(t) {
            const i = t.toLowerCase();
            return "#fff" === i || "white" === i || "#ffffff" === i;
          }
          handleThemeColor(t) {
            const i = this.isBlackColor(t),
              r = this.isWhiteColor(t);
            return "dark" === this.theme && i
              ? "white"
              : "light" === this.theme && r
              ? "black"
              : t;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-cross-chain-route"]],
            inputs: { theme: "theme", route: "route" },
            decls: 18,
            vars: 10,
            consts: [
              [1, "route"],
              [1, "dex"],
              [1, "dex__icon"],
              ["alt", "Source trade provider", 3, "src"],
              [1, "dex__name"],
              [1, "route__line", "route__line_left"],
              ["alt", "Bridge provider", 1, "dex", 3, "src"],
              [1, "route__line", "route__line_right"],
              ["alt", "Target trade provider", 3, "src"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "div", 2),
                e.ɵɵelement(3, "img", 3),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(4, "div", 4),
                e.ɵɵtext(5),
                e.ɵɵelementEnd()(),
                e.ɵɵelement(6, "div", 5),
                e.ɵɵelementStart(7, "div", 1)(8, "div", 2),
                e.ɵɵelement(9, "img", 6),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(10, "div", 4),
                e.ɵɵtext(11),
                e.ɵɵelementEnd()(),
                e.ɵɵelement(12, "div", 7),
                e.ɵɵelementStart(13, "div", 1)(14, "div", 2),
                e.ɵɵelement(15, "img", 8),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(16, "div", 4),
                e.ɵɵtext(17),
                e.ɵɵelementEnd()()()),
                2 & i &&
                  (e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "src",
                    null == r.fromProvider ? null : r.fromProvider.image,
                    e.ɵɵsanitizeUrl
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵtextInterpolate(
                    null == r.fromProvider ? null : r.fromProvider.name
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵstyleProp("--left-color", r.leftColor),
                  e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "src",
                    null == r.bridgeProvider ? null : r.bridgeProvider.image,
                    e.ɵɵsanitizeUrl
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵtextInterpolate(
                    null == r.bridgeProvider ? null : r.bridgeProvider.name
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵstyleProp("--right-color", r.rightColor),
                  e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "src",
                    null == r.toProvider ? null : r.toProvider.image,
                    e.ɵɵsanitizeUrl
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵtextInterpolate1(
                    " ",
                    null == r.toProvider ? null : r.toProvider.name,
                    " "
                  ));
            },
            styles: [
              '[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{z-index:-1;display:block}.info[_ngcontent-%COMP%]{display:flex;align-items:center;width:-moz-fit-content;width:fit-content;margin-bottom:24px;font-size:14px;border-radius:100px}.info__chip[_ngcontent-%COMP%]{padding:6px 20px;color:var(--primary-text);line-height:22px;border-radius:100px}.info__chip_colored[_ngcontent-%COMP%]{background:rgba(253,99,0,.15);border-radius:100px}.info__chip[_ngcontent-%COMP%]:not(:last-child){margin-right:6px}.info__chip[_ngcontent-%COMP%]:last-child{padding-left:14px}.route[_ngcontent-%COMP%]{position:relative;display:flex;padding:0 23px}.route__line[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap}.route__line[_ngcontent-%COMP%]:after{display:inline-block;width:100%;padding-left:5px;font-size:28px;letter-spacing:2px;vertical-align:3px;background-repeat:repeat;background-size:100%;-webkit-background-clip:text;content:"..........................................................................................................";-webkit-text-fill-color:transparent}.route__line_left[_ngcontent-%COMP%]:after{color:var(--left-color);background-image:linear-gradient(90deg,rgba(0,0,0,0),var(--left-color) 40%)}.route__line_right[_ngcontent-%COMP%]{margin-left:-4.5px}.route__line_right[_ngcontent-%COMP%]:after{color:var(--right-color);background-image:linear-gradient(90deg,var(--right-color) 40%,rgba(0,0,0,0))}.route[_ngcontent-%COMP%]   .dex[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;align-items:center;width:40px}.route[_ngcontent-%COMP%]   .dex__icon[_ngcontent-%COMP%]{position:relative;width:32px;height:32px;margin-bottom:10px}.route[_ngcontent-%COMP%]   .dex__icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:32px;height:32px;border-radius:4px}.route[_ngcontent-%COMP%]   .dex__name[_ngcontent-%COMP%]{width:200px;color:var(--primary-text);font-weight:400;font-size:10px;line-height:18px;text-align:center}@media (max-width: 651px){.route[_ngcontent-%COMP%]   .dex__name[_ngcontent-%COMP%]{width:80px}}.route[_ngcontent-%COMP%]   .dex__cap[_ngcontent-%COMP%]{color:var(--secondary-text);font-weight:500;font-size:16px;line-height:19px;text-align:center}',
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Sl = p(48382);
      const Vi = [
        "Celer",
        "Symbiosis",
        "deBridge",
        "Connext",
        "Hop",
        "Multichain",
        "Biconomy",
        "Optimism Gateway",
        "Polygon",
        "Avalanche Bridge",
        "Arbitrum Bridge",
      ];
      var Ol = p(37221);
      function Pl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"),
            e.ɵɵtext(1, " Finding Optimal Route"),
            e.ɵɵelement(2, "span", 5),
            e.ɵɵtext(3),
            e.ɵɵpipe(4, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(3),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind1(4, 1, t.fakeProvider$),
              " "
            );
        }
      }
      function wl(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1, " We have selected the best Route available for you "),
          e.ɵɵelement(2, "img", 7),
          e.ɵɵelementContainerEnd());
      }
      function kl(n, a) {
        1 & n && e.ɵɵtext(0, "Optimal routing not found");
      }
      function Al(n, a) {
        if (
          (1 & n &&
            (e.ɵɵtemplate(0, wl, 3, 0, "ng-container", 3),
            e.ɵɵtemplate(
              1,
              kl,
              1,
              0,
              "ng-template",
              null,
              6,
              e.ɵɵtemplateRefExtractor
            )),
          2 & n)
        ) {
          const t = e.ɵɵreference(2),
            i = e.ɵɵnextContext(3);
          e.ɵɵproperty("ngIf", i.isBestRouteFound)("ngIfElse", t);
        }
      }
      function Ml(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 2),
            e.ɵɵtemplate(1, Pl, 5, 3, "span", 3),
            e.ɵɵpipe(2, "async"),
            e.ɵɵtemplate(
              3,
              Al,
              3,
              2,
              "ng-template",
              null,
              4,
              e.ɵɵtemplateRefExtractor
            ),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵreference(4),
            i = e.ɵɵnextContext(2);
          e.ɵɵproperty("@fadeAnimation", void 0),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(2, 3, i.isCalculating$))(
              "ngIfElse",
              t
            );
        }
      }
      function El(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div"),
            e.ɵɵtemplate(1, Ml, 5, 5, "div", 1),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(2, 1, t.displayText$));
        }
      }
      let Il = (() => {
        class n {
          constructor(t, i) {
            (this.crossChainFormService = t),
              (this.swapFormService = i),
              (this.isCalculating$ = this.crossChainFormService.isCalculating$),
              (this.displayCounter$ = (0, j.a)([
                this.swapFormService.isFilled$,
                this.crossChainFormService.isCalculating$,
              ]).pipe(
                (0, Ol.C)(),
                (0, N.w)(([r, s]) =>
                  r
                    ? s
                      ? (0, Fe.H)(0, 1).pipe(
                          (0, x.U)((c) => c > 0),
                          (0, $t.q)(2)
                        )
                      : (0, V.of)(!0)
                    : (0, V.of)(!1)
                )
              )),
              (this.displayText$ = this.isCalculating$.pipe(
                (0, ce.x)(),
                (0, N.w)((r) =>
                  (0, Sl.s)(
                    () => r,
                    (0, Fe.H)(1).pipe((0, x.U)(() => !0)),
                    (0, Fe.H)(2e3).pipe((0, x.U)(() => !1))
                  )
                )
              )),
              (this.fakeProvider$ = (0, Fe.H)(0, 1200).pipe(
                (0, x.U)(
                  () =>
                    Vi[
                      (function Tl(n) {
                        return Math.floor(Math.random() * n);
                      })(Vi.length)
                    ]
                )
              ));
          }
          get isBestRouteFound() {
            const { selectedTrade: t } = this.crossChainFormService;
            return (
              !t?.error &&
              this.crossChainFormService.selectedTrade?.trade?.to.tokenAmount.isFinite()
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(ot),
              e.ɵɵdirectiveInject(E.q)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-trades-counter"]],
            decls: 2,
            vars: 3,
            consts: [
              [4, "ngIf"],
              ["class", "calculated-trades", 4, "ngIf"],
              [1, "calculated-trades"],
              [4, "ngIf", "ngIfElse"],
              ["calculationFinished", ""],
              [1, "calculated-trades__dashes"],
              ["routeNotFound", ""],
              [
                "src",
                "assets/images/icons/checkmark/checkmark-thin-white.svg",
                "alt",
                "Success calculating",
                1,
                "calculated-trades__success-icon",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, El, 3, 3, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(1, 1, r.displayCounter$));
            },
            dependencies: [m.O5, m.Ov],
            styles: [
              '[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.calculated-trades[_ngcontent-%COMP%]{display:flex;align-items:center;height:45px;color:var(--secondary-text);font-size:14px;line-height:120%;letter-spacing:.08em}.calculated-trades__dashes[_ngcontent-%COMP%]{display:inline-block;width:15px}.calculated-trades__dashes[_ngcontent-%COMP%]:after{display:inline-block;animation:_ngcontent-%COMP%_dotty steps(1,end) 2s infinite;content:""}@keyframes _ngcontent-%COMP%_dotty{0%{content:"."}33%{content:".."}66%{content:"..."}to{content:"."}}.calculated-trades__success-icon[_ngcontent-%COMP%]{width:14px;height:14px;margin-left:5px}',
            ],
            data: {
              animation: [
                (0, J.X$)("fadeAnimation", [
                  (0, J.eR)(":enter", [
                    (0, J.oB)({ opacity: 0 }),
                    (0, J.jt)("200ms", (0, J.oB)({ opacity: 1 })),
                  ]),
                  (0, J.eR)(":leave", [
                    (0, J.oB)({ opacity: 1 }),
                    (0, J.jt)("600ms", (0, J.oB)({ opacity: 0 })),
                  ]),
                ]),
              ],
            },
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var ji = p(1383);
      function Nl(n, a) {
        if ((1 & n && e.ɵɵelement(0, "tui-badge", 7), 2 & n)) {
          const t = e.ɵɵnextContext().$implicit,
            i = e.ɵɵnextContext(2);
          e.ɵɵproperty("value", i.getMinMaxError(t));
        }
      }
      const Rl = function (n) {
          return { trade_selected: n };
        },
        Dl = function (n) {
          return { minRound: 3, maxRound: 5, decimals: n };
        };
      function Fl(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "li", 2),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(2);
              return e.ɵɵresetView(c.selectTrade(s));
            }),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementStart(3, "div", 3),
            e.ɵɵelement(4, "app-cross-chain-route", 4),
            e.ɵɵelementStart(5, "span"),
            e.ɵɵtext(6),
            e.ɵɵpipe(7, "withRound"),
            e.ɵɵpipe(8, "bigNumberFormat"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "div", 5),
            e.ɵɵtemplate(10, Nl, 1, 1, "tui-badge", 6),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = a.index,
            r = e.ɵɵnextContext().ngLet,
            s = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(
                14,
                Rl,
                e.ɵɵpipeBind1(2, 6, s.selectedTrade$).tradeType === t.tradeType
              )
            )("@fadeAnimation", void 0),
            e.ɵɵadvance(3),
            e.ɵɵproperty("route", t.route)("theme", r),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind3(
                7,
                8,
                e.ɵɵpipeBind1(
                  8,
                  12,
                  null == t.trade || null == t.trade.to
                    ? null
                    : t.trade.to.tokenAmount
                ),
                "toClosestValue",
                e.ɵɵpureFunction1(
                  16,
                  Dl,
                  null == t.trade || null == t.trade.to
                    ? null
                    : t.trade.to.decimals
                )
              ),
              " "
            ),
            e.ɵɵadvance(4),
            e.ɵɵproperty(
              "ngIf",
              i > 0 && (t.tags.minAmountWarning || t.tags.maxAmountWarning)
            );
        }
      }
      function Bl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "ul"),
            e.ɵɵtemplate(2, Fl, 11, 18, "ng-container", 1),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("@listAnimation", void 0),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngForOf", t.taggedTrades)(
              "ngForTrackBy",
              t.trackByType
            );
        }
      }
      let Hl = (() => {
        class n {
          constructor(t, i, r) {
            (this.cdr = t),
              (this.crossChainFormService = i),
              (this.themeService = r),
              (this.selectionHandler = new e.EventEmitter()),
              (this.selectedTrade$ = this.crossChainFormService.selectedTrade$),
              (this.theme$ = this.themeService.theme$);
          }
          getMinMaxError(t) {
            const i = t.error,
              r =
                (i instanceof o.MinAmountError ||
                  i instanceof o.MinAmountError) &&
                i.tokenSymbol.toLowerCase().includes("usd");
            return i instanceof o.MaxAmountError
              ? `Max: ${i.maxAmount.toFixed(2)}${r ? "$" : ""}`
              : i instanceof o.MinAmountError
              ? `Min: ${i.minAmount.toFixed(2)}${r ? "$" : ""}`
              : void 0;
          }
          selectTrade(t) {
            this.crossChainFormService.updateSelectedTrade(t, !0),
              this.selectionHandler.emit();
          }
          trackByType(t, i) {
            return i.tradeType;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(ot),
              e.ɵɵdirectiveInject(Yt.f)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-trades-list"]],
            inputs: { taggedTrades: "taggedTrades" },
            outputs: { selectionHandler: "selectionHandler" },
            decls: 2,
            vars: 3,
            consts: [
              [4, "ngLet"],
              [4, "ngFor", "ngForOf", "ngForTrackBy"],
              [1, "trade", 3, "ngClass", "click"],
              [1, "trade__container"],
              [3, "route", "theme"],
              [1, "trade__statuses"],
              ["status", "warning", 3, "value", 4, "ngIf"],
              ["status", "warning", 3, "value"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, Bl, 3, 3, "ng-container", 0),
                e.ɵɵpipe(1, "async")),
                2 & i && e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.theme$));
            },
            dependencies: [m.mk, m.sg, m.O5, F.e, ji.g, xt, m.Ov, be.N, ye.f],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}ul[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:10px;padding:0 21px}.trade[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;height:52px;padding:10px 0;border:1px solid var(--transparent-line);border-radius:14px;transition:.2s ease-in-out}@media (max-width: 560px){.trade[_ngcontent-%COMP%]{height:auto}}.trade__container[_ngcontent-%COMP%]{display:flex;gap:20px;align-items:center;width:85%}@media (max-width: 560px){.trade__container[_ngcontent-%COMP%]{flex-direction:column}.trade__container[_ngcontent-%COMP%]   app-cross-chain-route[_ngcontent-%COMP%]{width:100%}}.trade__statuses[_ngcontent-%COMP%]{display:flex;gap:5px}.trade_selected[_ngcontent-%COMP%]{border:1px solid var(--primary-color)}.trade[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:flex}.trade[_ngcontent-%COMP%]:hover{background:var(--transparent-line);cursor:pointer}app-cross-chain-route[_ngcontent-%COMP%]{display:block;width:55%}[_nghost-%COMP%]     .route{padding:0!important}[_nghost-%COMP%]     .route__line:after{font-size:18px}[_nghost-%COMP%]     .dex__name{display:none}[_nghost-%COMP%]     .dex__icon{margin-bottom:0!important}",
            ],
            data: { animation: [q.qy, q.nW] },
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Ll(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 9)(1, "h3"),
            e.ɵɵtext(2, "Routes"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "div", 10)(4, "button", 11),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(4);
              return e.ɵɵresetView(r.toggleExpanded());
            }),
            e.ɵɵtext(5, " Other Routes "),
            e.ɵɵelement(6, "img", 12),
            e.ɵɵelementEnd()()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵadvance(6),
            e.ɵɵclassProp("trade-panel__expand-arrow_opened", t.expanded);
        }
      }
      const $l = function (n) {
          return { "trade-panel__trades-content_expanded": n };
        },
        Vl = function () {
          return [];
        };
      function jl(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Ll, 7, 2, "div", 6),
            e.ɵɵelementStart(2, "div", 7)(3, "tui-scrollbar")(
              4,
              "app-trades-list",
              8
            ),
            e.ɵɵlistener("selectionHandler", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.handleSelection());
            }),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.length > 1),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(3, $l, i.expanded)),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "taggedTrades",
              i.showTradesList ? t : e.ɵɵpureFunction0(5, Vl)
            );
        }
      }
      function zl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelement(0, "app-cross-chain-route", 14), e.ɵɵpipe(1, "async")),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().ngIf,
            i = e.ɵɵnextContext(3);
          e.ɵɵproperty("route", t)("theme", e.ɵɵpipeBind1(1, 2, i.theme$));
        }
      }
      function Yl(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, zl, 2, 4, "app-cross-chain-route", 13),
          e.ɵɵelementContainerEnd());
      }
      function Ul(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 3),
            e.ɵɵelement(2, "app-trades-counter"),
            e.ɵɵelementStart(3, "div", 4),
            e.ɵɵtemplate(4, jl, 5, 6, "ng-container", 2),
            e.ɵɵpipe(5, "async"),
            e.ɵɵelementEnd()(),
            e.ɵɵtemplate(6, Yl, 2, 0, "ng-container", 5),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(4),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(5, 2, i.taggedTrades$)),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", null == t ? null : t.route);
        }
      }
      function Wl(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 1),
            e.ɵɵelementContainerStart(1),
            e.ɵɵtemplate(2, Ul, 7, 4, "ng-container", 2),
            e.ɵɵpipe(3, "async"),
            e.ɵɵelementContainerEnd(),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(2),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(3, 1, t.selectedTrade$));
        }
      }
      let Gl = (() => {
        class n {
          constructor(t, i, r, s, c, l) {
            (this.cdr = t),
              (this.crossChainFormService = i),
              (this.swapFormService = r),
              (this.window = s),
              (this.destroy$ = c),
              (this.themeService = l),
              (this.taggedTrades$ =
                this.crossChainFormService.taggedTrades$.pipe(
                  (0, x.U)((d) => d.filter((_) => _.trade))
                )),
              (this.selectedTrade$ = this.crossChainFormService.selectedTrade$),
              (this.fromAmount$ = this.swapFormService.inputValue$.pipe(
                (0, x.U)((d) => d.fromAmount)
              )),
              (this.expanded = !1),
              (this.showTradesList = !1),
              (this.theme$ = this.themeService.theme$),
              this.formSubscribe();
          }
          formSubscribe() {
            this.swapFormService.inputValueDistinct$
              .pipe((0, P.R)(this.destroy$))
              .subscribe(() => {
                this.expanded = !1;
              });
          }
          handleSelection() {
            (this.showTradesList = !1),
              (this.expanded = !1),
              this.cdr.detectChanges();
          }
          toggleExpanded() {
            this.expanded
              ? ((this.showTradesList = !1),
                setTimeout(() => {
                  (this.expanded = !1), this.cdr.detectChanges();
                }, 150))
              : ((this.expanded = !0), (this.showTradesList = !0));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(ot),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(xe.m9),
              e.ɵɵdirectiveInject(w.a3, 2),
              e.ɵɵdirectiveInject(Yt.f)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-best-trade-panel"]],
            features: [
              e.ɵɵProvidersFeature([
                { provide: we.dx, useFactory: () => 1e4 },
                w.a3,
              ]),
            ],
            decls: 2,
            vars: 3,
            consts: [
              ["class", "cross-wrapper", 4, "ngIf"],
              [1, "cross-wrapper"],
              [4, "ngLet"],
              [1, "trade-panel"],
              [1, "trade-panel__row"],
              [4, "ngIf"],
              ["class", "trade-panel__header", 4, "ngIf"],
              [1, "trade-panel__trades-content", 3, "ngClass"],
              [3, "taggedTrades", "selectionHandler"],
              [1, "trade-panel__header"],
              [1, "trade-panel__text"],
              [1, "trade-panel__expand-button", 3, "click"],
              [
                "src",
                "assets/images/icons/arrow-down.svg",
                "alt",
                "expand",
                1,
                "trade-panel__expand-arrow",
              ],
              [3, "route", "theme", 4, "noFrame"],
              [3, "route", "theme"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵtemplate(0, Wl, 4, 3, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i)
              ) {
                let s;
                e.ɵɵproperty(
                  "ngIf",
                  null == (s = e.ɵɵpipeBind1(1, 1, r.fromAmount$))
                    ? null
                    : s.isFinite()
                );
              }
            },
            dependencies: [m.mk, m.O5, F.e, me.a, Ie.IB, xt, Il, Hl, m.Ov],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{display:flex;flex-direction:column;justify-content:center}.trade-panel[_ngcontent-%COMP%]{position:relative;height:100%}.trade-panel__header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;width:100%;min-height:45px}.trade-panel__text[_ngcontent-%COMP%]{display:flex;grid-gap:8px;align-items:center;justify-content:center;color:var(--primary-color);font-weight:500;font-size:15px;background:black;padding:15px;border-radius:30px;color:#fff;margin-top:auto;margin-bottom:auto;background:var(--tui-secondary)}.trade-panel__expand-button[_ngcontent-%COMP%]{margin-left:auto;color:var(--primary-text)}.trade-panel__expand-arrow[_ngcontent-%COMP%]{width:13px;margin-left:6px;transition:.2s ease-in-out}.trade-panel__expand-arrow_opened[_ngcontent-%COMP%]{transform:rotate(180deg)}.trade-panel__trades-content[_ngcontent-%COMP%]{position:absolute;left:-24px;z-index:999;box-sizing:content-box;width:100%;height:0;padding:0 24px;background:var(--form-background);border-bottom-right-radius:19px;border-bottom-left-radius:19px}@media (max-width: 651px){.trade-panel__trades-content[_ngcontent-%COMP%]{left:0;padding:0}}.trade-panel__trades-content_expanded[_ngcontent-%COMP%]{height:176px}@media (max-width: 651px){.trade-panel__trades-content_expanded[_ngcontent-%COMP%]{height:186px}}.trade-panel__trades-content[_ngcontent-%COMP%]   tui-scrollbar[_ngcontent-%COMP%]{max-height:100%}app-cross-chain-route[_ngcontent-%COMP%]{margin-top:25px;margin-bottom:10px}.cross-wrapper[_ngcontent-%COMP%]{padding:10px 30px 30px;border-radius:30px;margin-top:30px;border:1px solid rgba(255,255,255,.1490196078)}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Kl(n, a) {
        1 & n && e.ɵɵelement(0, "app-to-amount-estimated", 10),
          2 & n && e.ɵɵproperty("errorText", a.ngLet);
      }
      function Xl(n, a) {
        1 & n && e.ɵɵelement(0, "app-target-network-address");
      }
      function Zl(n, a) {
        1 & n && e.ɵɵelement(0, "app-best-trade-panel");
      }
      function Ql(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtemplate(1, Zl, 1, 0, "app-best-trade-panel", 11),
          e.ɵɵelementContainerEnd());
      }
      function Jl(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "section", 1)(2, "div", 2)(3, "div", 3)(
              4,
              "div"
            ),
            e.ɵɵelement(5, "app-select-asset-button-tokens", 4),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(6, Kl, 1, 1, "app-to-amount-estimated", 5),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(7, Xl, 1, 0, "app-target-network-address", 6),
            e.ɵɵpipe(8, "async"),
            e.ɵɵelementStart(9, "div", 7)(10, "div", 8)(
              11,
              "app-swap-button-container",
              9
            ),
            e.ɵɵlistener("onUpdateRateClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onUpdateRate());
            })("onSwapClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onSwapTrade());
            })("onApproveClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.onApproveTrade());
            }),
            e.ɵɵpipe(12, "async"),
            e.ɵɵpipe(13, "async"),
            e.ɵɵpipe(14, "async"),
            e.ɵɵpipe(15, "async"),
            e.ɵɵpipe(16, "async"),
            e.ɵɵelementEnd()()(),
            e.ɵɵtemplate(17, Ql, 2, 0, "ng-container", 6),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(6),
            e.ɵɵproperty(
              "ngLet",
              (null == t ? null : t.translateKey) ||
                (null == t ? null : t.message)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              e.ɵɵpipeBind1(8, 8, i.displayTargetAddressInput$)
            ),
            e.ɵɵadvance(4),
            e.ɵɵproperty("needApprove", e.ɵɵpipeBind1(12, 10, i.needApprove$))(
              "withApproveButton",
              e.ɵɵpipeBind1(13, 12, i.displayApproveButton$)
            )("status", e.ɵɵpipeBind1(14, 14, i.tradeStatus$))(
              "error",
              e.ɵɵpipeBind1(15, 16, i.selectedTradeError$)
            )("nonEvmChangenow", e.ɵɵpipeBind1(16, 18, i.nonEvmChangenow$)),
            e.ɵɵadvance(6),
            e.ɵɵproperty("ngIf", !t);
        }
      }
      function ql(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Jl, 18, 20, "ng-container", 0),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.criticalError$));
        }
      }
      let ep = (() => {
          class n {
            constructor(t, i, r) {
              (this.settingsService = t),
                (this.crossChainFormService = i),
                (this.swapFormService = r),
                (this.tradeStatusChange = new e.EventEmitter()),
                (this.TRADE_STATUS = h),
                (this.displayTargetAddressInput$ =
                  this.settingsService.crossChainRoutingValueChanges.pipe(
                    (0, Pe.O)(this.settingsService.crossChainRoutingValue),
                    (0, x.U)((s) => s.showReceiverAddress)
                  )),
                (this.tradeStatus$ = this.crossChainFormService.tradeStatus$),
                (this.needApprove$ =
                  this.crossChainFormService.selectedTrade$.pipe(
                    (0, x.U)((s) => s?.needApprove || !1)
                  )),
                (this.displayApproveButton$ =
                  this.crossChainFormService.displayApproveButton$),
                (this.criticalError$ =
                  this.crossChainFormService.criticalError$),
                (this.selectedTradeError$ =
                  this.crossChainFormService.selectedTradeError$),
                (this.nonEvmChangenow$ =
                  this.crossChainFormService.selectedTrade$.pipe(
                    (0, x.U)(
                      (s) =>
                        s?.tradeType === o.CROSS_CHAIN_TRADE_TYPE.CHANGENOW &&
                        !o.BlockchainsInfo.isEvmBlockchainName(
                          this.swapFormService.inputValue.fromAssetType
                        )
                    )
                  )),
                this.crossChainFormService.tradeStatus$.subscribe((s) => {
                  this.tradeStatusChange.emit(s);
                });
            }
            onUpdateRate() {
              this.crossChainFormService.updateRate();
            }
            onApproveTrade() {
              this.crossChainFormService.approveTrade();
            }
            onSwapTrade() {
              this.crossChainFormService.swapTrade();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(ve),
                e.ɵɵdirectiveInject(ot),
                e.ɵɵdirectiveInject(E.q)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-cross-chain-bottom-form"]],
              outputs: { tradeStatusChange: "tradeStatusChange" },
              decls: 2,
              vars: 3,
              consts: [
                [4, "ngLet"],
                [1, "bottom-form"],
                [1, "bottom-form__container"],
                [1, "bottom-form__estimate-container"],
                ["formType", "to"],
                [3, "errorText", 4, "ngLet"],
                [4, "ngIf"],
                [1, "bottom-form__footer"],
                [1, "bottom-form__button"],
                [
                  "buttonText",
                  "Swap",
                  3,
                  "needApprove",
                  "withApproveButton",
                  "status",
                  "error",
                  "nonEvmChangenow",
                  "onUpdateRateClick",
                  "onSwapClick",
                  "onApproveClick",
                ],
                [3, "errorText"],
                [4, "noFrame"],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, ql, 3, 3, "ng-container", 0),
                  e.ɵɵpipe(1, "async")),
                  2 & i &&
                    e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.tradeStatus$));
              },
              dependencies: [$i, Ai, ht, jt, m.O5, F.e, me.a, Gl, m.Ov],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.bottom-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%]{flex-direction:row}html.iframe-vertical[_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%]{justify-content:space-between;height:212px}.bottom-form__container[_ngcontent-%COMP%]{z-index:1;min-height:113px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{position:relative;margin:0}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{position:relative;flex-direction:row-reverse;align-items:center;width:363px;height:50px;min-height:unset;margin:0;padding:0 7px 0 16px;background:var(--primary-background);border-radius:10px}html.iframe-horizontal:not(.dark)[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-horizontal:not(.dark)   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{flex-direction:column;justify-content:flex-start;padding:0;background-color:transparent}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]   app-select-asset-button-tokens[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]   app-select-asset-button-tokens[_ngcontent-%COMP%]{margin-bottom:10px}@media (max-width: 651px){.bottom-form__container[_ngcontent-%COMP%]{height:auto;padding:30px 20px}}@media (max-width: 420px){.bottom-form__container[_ngcontent-%COMP%]{flex-direction:column}}.bottom-form__estimate-container[_ngcontent-%COMP%]{display:flex;grid-gap:10px;justify-content:space-between;min-height:105px;padding:10px 20px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:column;grid-gap:6px}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:row-reverse;align-items:center;height:100%;min-height:auto}@media (max-width: 420px){.bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:column}}.bottom-form__footer[_ngcontent-%COMP%]{margin-top:16px}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%]{margin-top:0;margin-left:12px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%]{margin-top:30px;padding:0}@media (max-width: 651px){.bottom-form__footer[_ngcontent-%COMP%]{margin-top:0}}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__button[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__button[_ngcontent-%COMP%]{width:180px}app-target-network-address[_ngcontent-%COMP%]{display:block;margin-top:10px}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Rn = (() => {
          class n {
            constructor(t, i, r, s, c) {
              (this.swapFormService = t),
                (this.refreshService = i),
                (this.onramperCalculationService = r),
                (this.swapTypeService = s),
                (this.authService = c),
                (this._calculateTrade$ = new Ce.x()),
                (this._tradeStatus$ = new A.X(h.DISABLED)),
                (this.tradeStatus$ = this._tradeStatus$.asObservable()),
                (this._tradeError$ = new A.X(null)),
                (this.tradeError$ = this._tradeError$.asObservable()),
                (this.refreshServiceCallsCounter = 0),
                this.subscribeOnCalculation(),
                this.subscribeOnFormChanges(),
                this.subscribeOnRefreshServiceCalls();
            }
            get tradeStatus() {
              return this._tradeStatus$.getValue();
            }
            set tradeStatus(t) {
              this.tradeStatus !== h.BUY_NATIVE_IN_PROGRESS &&
                this._tradeStatus$.next(t);
            }
            get tradeError() {
              return this._tradeError$.value;
            }
            set tradeError(t) {
              this._tradeError$.next(t);
            }
            get inputValue() {
              const t = this.swapFormService.inputValue;
              if (t.fromAssetType && "fiat" !== t.fromAssetType)
                throw new z.q("Cannot use onramper");
              return { ...t, fromFiat: t.fromAsset };
            }
            subscribeOnCalculation() {
              var t = this;
              this._calculateTrade$
                .pipe(
                  (0, Ve.b)(200),
                  (0, x.U)((i) =>
                    i.stop || !this.swapFormService.isFilled
                      ? ((this.tradeStatus = h.DISABLED),
                        this.swapTypeService.getSwapProviderType() ===
                          S.V.ONRAMPER &&
                          (this.refreshService.setStopped(),
                          this.swapFormService.outputControl.patchValue({
                            toAmount: null,
                          })),
                        { ...i, stop: !0 })
                      : { ...i, stop: !1 }
                  ),
                  (0, N.w)(
                    (function () {
                      var i = (0, O.Z)(function* (r) {
                        if (r.stop) return null;
                        r.isForced && t.unsetTradeData(),
                          t.tradeStatus !== h.READY_TO_APPROVE &&
                            t.tradeStatus !== h.READY_TO_SWAP &&
                            t.tradeStatus !== h.OLD_TRADE_DATA &&
                            (t.tradeStatus = h.LOADING),
                          t.refreshService.setRefreshing();
                        const s =
                          yield t.onramperCalculationService.getOutputTokenAmount(
                            t.inputValue
                          );
                        (t.tradeStatus = s?.isFinite()
                          ? h.READY_TO_BUY_NATIVE
                          : h.DISABLED),
                          t.refreshService.setStopped(),
                          t.swapFormService.outputControl.patchValue({
                            toAmount: s,
                          });
                      });
                      return function (r) {
                        return i.apply(this, arguments);
                      };
                    })()
                  ),
                  (0, Dt.K)((i, r) => {
                    (this.tradeStatus = h.DISABLED),
                      this.refreshService.setStopped();
                    const s = Ze.E.parseError(i);
                    return (
                      (this.tradeError =
                        s instanceof kn.M
                          ? new z.q("Trade is unavailable, please try later")
                          : s),
                      r
                    );
                  })
                )
                .subscribe();
            }
            subscribeOnFormChanges() {
              this.swapFormService.inputValueDistinct$.subscribe(() => {
                this.startRecalculation();
              });
            }
            subscribeOnRefreshServiceCalls() {
              this.refreshService.onRefresh$.subscribe(({ isForced: t }) => {
                if (t) this.startRecalculation();
                else {
                  if (!this.authService.userAddress || this.tradeError) return;
                  if (this.refreshServiceCallsCounter >= 4)
                    return void (this.tradeStatus = h.OLD_TRADE_DATA);
                  (this.refreshServiceCallsCounter += 1),
                    this.startRecalculation(!1);
                }
              });
            }
            unsetTradeData() {
              (this.tradeError = null),
                (this.refreshServiceCallsCounter = 0),
                this.swapFormService.outputControl.patchValue({
                  toAmount: null,
                });
            }
            startRecalculation(t = !0) {
              this.swapTypeService.getSwapProviderType() === S.V.ONRAMPER
                ? this._calculateTrade$.next({ isForced: t })
                : this._calculateTrade$.next({ stop: !0 });
            }
            updateRate() {
              (this.tradeStatus = h.LOADING), this.startRecalculation();
            }
            stopBuyNativeInProgress() {
              this._tradeStatus$.next(h.LOADING), this.startRecalculation();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(E.q),
                e.ɵɵinject(pt),
                e.ɵɵinject(Rt),
                e.ɵɵinject(ae.H),
                e.ɵɵinject(U.e)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      function tp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelement(1, "img", 3),
            e.ɵɵelementStart(2, "div", 4),
            e.ɵɵtext(3, " You will receive "),
            e.ɵɵelementStart(4, "span", 5),
            e.ɵɵtext(5),
            e.ɵɵelementEnd(),
            e.ɵɵtext(6, " to "),
            e.ɵɵelementStart(7, "span", 5),
            e.ɵɵtext(8),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngIf,
            i = e.ɵɵnextContext().ngIf;
          e.ɵɵadvance(5),
            e.ɵɵtextInterpolate(t),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(i);
        }
      }
      function np(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 1),
            e.ɵɵtemplate(1, tp, 9, 2, "ng-container", 2),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(2, 1, t.nativeTokenSymbol$));
        }
      }
      let ip = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.authService = t),
              (this.swapFormService = i),
              (this.windowWidthService = r),
              (this.iframeService = s),
              (this.nativeTokenSymbol$ = this.swapFormService.toToken$.pipe(
                (0, x.U)((c) =>
                  c ? o.nativeTokensList[c.blockchain].symbol : null
                )
              )),
              (this.walletAddressText$ = (0, j.a)([
                this.windowWidthService.windowSize$,
                this.authService.currentUser$,
                (0, V.of)(this.iframeService.isIframe),
              ]).pipe(
                (0, x.U)(([c, l, d]) => {
                  const _ = l?.address;
                  return _
                    ? d || c <= Bt.G.MOBILE_MD_MINUS
                      ? _.slice(0, 5) + "..." + _.slice(_.length - 4)
                      : _
                    : null;
                })
              ));
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(U.e),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(cn.R),
              e.ɵɵdirectiveInject(Q.b)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-receiver-address"]],
            decls: 2,
            vars: 3,
            consts: [
              ["class", "receiver-address", 4, "ngIf"],
              [1, "receiver-address"],
              [4, "ngIf"],
              ["src", "assets/images/icons/hint.svg", "alt", "hint"],
              [1, "receiver-address__text"],
              [1, "medium"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, np, 3, 3, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty(
                    "ngIf",
                    e.ɵɵpipeBind1(1, 1, r.walletAddressText$)
                  );
            },
            dependencies: [m.O5, m.Ov],
            styles: [
              ".receiver-address[_ngcontent-%COMP%]{display:flex;grid-gap:8px}.receiver-address__text[_ngcontent-%COMP%]{font-size:13px;letter-spacing:.4px}.medium[_ngcontent-%COMP%]{font-weight:500}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function rp(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 2),
            e.ɵɵelement(2, "app-select-asset-button-tokens", 3)(
              3,
              "app-to-amount-estimated",
              4
            ),
            e.ɵɵelementEnd(),
            e.ɵɵelement(4, "app-receiver-address"),
            e.ɵɵelementStart(5, "div", 5)(6, "app-swap-button-container", 6),
            e.ɵɵlistener("onUpdateRateClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onUpdateRate());
            })("onBuyNativeClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onBuyNative());
            }),
            e.ɵɵpipe(7, "async"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty(
              "errorText",
              (null == t ? null : t.translateKey) ||
                (null == t ? null : t.message)
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty("needApprove", !1)("withApproveButton", !1)(
              "status",
              e.ɵɵpipeBind1(7, 6, i.tradeStatus$)
            )("error", t)("isOnramper", !0);
        }
      }
      let op = (() => {
        class n {
          constructor(t, i) {
            (this.onramperFormService = t),
              (this.onramperFormCalculationService = i),
              (this.tradeStatus$ =
                this.onramperFormCalculationService.tradeStatus$.pipe(
                  (0, Ve.b)(200)
                )),
              (this.tradeError$ =
                this.onramperFormCalculationService.tradeError$);
          }
          onUpdateRate() {
            this.onramperFormCalculationService.updateRate();
          }
          onBuyNative() {
            this.onramperFormService.widgetOpened = !0;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(mt),
              e.ɵɵdirectiveInject(Rn)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-onramper-bottom-form"]],
            decls: 3,
            vars: 3,
            consts: [
              [1, "bottom-form"],
              [4, "ngLet"],
              [1, "bottom-form__output"],
              ["formType", "to"],
              [3, "errorText"],
              [1, "bottom-form__button"],
              [
                "buttonText",
                "Swap",
                3,
                "needApprove",
                "withApproveButton",
                "status",
                "error",
                "isOnramper",
                "onUpdateRateClick",
                "onBuyNativeClick",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtemplate(1, rp, 8, 8, "ng-container", 1),
                e.ɵɵpipe(2, "async"),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, r.tradeError$)));
            },
            dependencies: [$i, ht, jt, F.e, ip, m.Ov],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.bottom-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}html.iframe-vertical[_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%]{justify-content:space-between;height:212px;padding:0!important}.bottom-form__output[_ngcontent-%COMP%]{z-index:9999;display:flex;grid-gap:10px;justify-content:space-between;min-height:65px;margin:30px 0 15px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__output[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__output[_ngcontent-%COMP%]{flex-direction:column;grid-gap:6px;margin:0}.bottom-form[_ngcontent-%COMP%]   app-receiver-address[_ngcontent-%COMP%]{height:20px;margin-top:10px}.bottom-form__button[_ngcontent-%COMP%]{margin-top:16px}@media (max-width: 651px){.bottom-form[_ngcontent-%COMP%]{height:auto;padding:0 20px}}@media (max-width: 420px){.bottom-form[_ngcontent-%COMP%], .bottom-form__output[_ngcontent-%COMP%]{flex-direction:column}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      const ap = {
        apiKey: Jn.d,
        color: "00e28e",
        supportSell: !1,
        supportSwap: !1,
        isAddressEditable: !1,
      };
      let zi = (() => {
        class n {
          constructor(t, i, r) {
            (this.themeService = t),
              (this.swapFormService = i),
              (this.authService = r);
          }
          getWidgetUrl() {
            return this.themeService.theme$.pipe(
              (0, x.U)((t) => {
                const i = "dark" === t,
                  r = this.swapFormService.inputValue.fromAsset.symbol,
                  s = Qn[this.swapFormService.inputValue.toBlockchain],
                  c = s,
                  l = this.swapFormService.inputValue.fromAmount.toFixed(),
                  d = this.authService.userAddress;
                return this.parseToWidgetUrl({
                  ...ap,
                  darkMode: i,
                  defaultFiat: r,
                  defaultCrypto: s,
                  onlyCryptos: c,
                  defaultAmount: l,
                  wallets: `${s}:${d}`,
                  partnerContext: { walletAddress: d },
                });
              })
            );
          }
          parseToWidgetUrl(t) {
            const i = Object.entries(t).reduce(
              (r, [s, c]) =>
                `${r}${r ? "&" : ""}${s}=${
                  "partnerContext" !== s
                    ? c
                    : encodeURIComponent(JSON.stringify(c))
                }`,
              ""
            );
            return `https://widget.onramper.com${i ? "/?" : ""}${i}`;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵinject(Yt.f),
              e.ɵɵinject(E.q),
              e.ɵɵinject(U.e)
            );
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
          }));
        }
        return n;
      })();
      var sp = p(36993);
      function cp(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 3)(1, "app-back-button", 4),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.closeWidget());
            }),
            e.ɵɵelementEnd()();
        }
      }
      let lp = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.onramperFormService = t),
              (this.onramperWidgetService = i),
              (this.iframeService = r),
              (this.window = s),
              (this.widgetUrl$ = this.onramperWidgetService.getWidgetUrl()),
              (this.widgetWidth$ = (0, _i.R)(this.window, "resize").pipe(
                (0, Pe.O)(null),
                (0, x.U)(
                  () => Math.min(565, this.window.innerWidth - 40) + "px"
                )
              )),
              (this.isIframe = this.iframeService.isIframe),
              (this.iframeSize = { width: "350px", height: "500px" });
          }
          closeWidget() {
            this.onramperFormService.widgetOpened = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(mt),
              e.ɵɵdirectiveInject(zi),
              e.ɵɵdirectiveInject(Q.b),
              e.ɵɵdirectiveInject(xe.m9)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-onramper-widget"]],
            decls: 6,
            vars: 11,
            consts: [
              [1, "widget-container"],
              ["class", "widget-container__back-button", 4, "ngIf"],
              [
                "title",
                "Onramper widget",
                "allow",
                "accelerometer; autoplay; camera; gyroscope; payment",
                3,
                "src",
                "height",
                "width",
              ],
              [1, "widget-container__back-button"],
              [3, "onClick"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtemplate(1, cp, 2, 0, "div", 1),
                e.ɵɵelement(2, "iframe", 2),
                e.ɵɵpipe(3, "safeSanitizer"),
                e.ɵɵpipe(4, "async"),
                e.ɵɵpipe(5, "async"),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.isIframe),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "src",
                    e.ɵɵpipeBind2(
                      3,
                      4,
                      e.ɵɵpipeBind1(4, 7, r.widgetUrl$),
                      "resourceUrl"
                    ),
                    e.ɵɵsanitizeResourceUrl
                  )("height", r.isIframe ? r.iframeSize.height : "660px")(
                    "width",
                    r.isIframe
                      ? r.iframeSize.width
                      : e.ɵɵpipeBind1(5, 9, r.widgetWidth$)
                  ));
            },
            dependencies: [m.O5, _n, m.Ov, sp.l],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.widget-container[_ngcontent-%COMP%]{position:relative;height:660px;background:var(--form-background);border-radius:19px}html.iframe-vertical[_nghost-%COMP%]   .widget-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .widget-container[_ngcontent-%COMP%]{height:500px}.widget-container[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{border-radius:19px}.widget-container__back-button[_ngcontent-%COMP%]{position:absolute;top:0;left:-55px}.widget-container__back-button[_ngcontent-%COMP%]     app-rubic-button tui-wrapper{background:var(--form-background)}@media (max-width: 768px){.widget-container__back-button[_ngcontent-%COMP%]{display:none}}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      class Dn extends z.q {
        constructor() {
          super("You rejected the signing."),
            Object.setPrototypeOf(this, Dn.prototype);
        }
      }
      let pp = (() => {
        class n {
          constructor(t) {
            this.httpService = t;
          }
          createTrade(t, i, r, s) {
            const { fromAsset: c, toToken: l, fromAmount: d } = i,
              g = {
                hash: t,
                network: rt.d[c.blockchain],
                from_token: c.address,
                to_token: l.address,
                from_amount: o.Web3Pure.toWei(d, c.decimals),
                to_amount: o.Web3Pure.toWei(r, l.decimals),
                user: s,
                provider: "oneinch",
              };
            this.httpService.post("limit_orders/limit_order", g).subscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵinject(hn.O));
          });
          static #t = (this.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          }));
        }
        return n;
      })();
      var u = p(70655),
        Ut = p(35302),
        I = p(73442);
      let dp = (() => {
          let n = class {
            transform(t, i, ...r) {
              return i(t, ...r);
            }
          };
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵpipe = e.ɵɵdefinePipe({
              name: "tuiMapper",
              type: n,
              pure: !0,
            })),
            n
          );
        })(),
        mp = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({})),
            n
          );
        })();
      var at = p(27670),
        Wt = p(60390),
        $ = p(39193),
        bt = p(45657),
        _p = p(70589),
        Yi = p(38190),
        Ui = p(67795);
      const up = ["*", [["input"]]],
        gp = function (n, a, t, i, r) {
          return [n, a, t, i, r];
        };
      var Gt;
      let ie = (Gt = class extends Ut.F9 {
        constructor(a, t, i) {
          super(a, t),
            (this.numberFormat = i),
            (this.min = -1 / 0),
            (this.max = 1 / 0),
            (this.decimal = "not-zero"),
            (this.precision = 2),
            (this.prefix = ""),
            (this.postfix = ""),
            (this.mask = (r, s, c, l) => ({
              mask: (0, at.EC)({
                allowNegative: r,
                decimalLimit: c,
                allowDecimal: "never" !== s,
                requireDecimal: "always" === s,
                autoCorrectDecimalSymbol: !1,
                decimalSymbol: this.numberFormat.decimalSeparator,
                thousandSymbol: this.numberFormat.thousandSeparator,
              }),
              pipe: (0, at.qs)(
                "always" === s ? c : 0,
                this.numberFormat.decimalSeparator,
                this.numberFormat.thousandSeparator,
                l || void 0,
                r
              ),
              guide: !1,
            }));
        }
        get nativeFocusableElement() {
          return !this.primitiveTextfield || this.computedDisabled
            ? null
            : this.primitiveTextfield.nativeFocusableElement;
        }
        get focused() {
          return !!this.primitiveTextfield && this.primitiveTextfield.focused;
        }
        get isNegativeAllowed() {
          return this.min < 0;
        }
        get inputMode() {
          return "never" === this.decimal ? "numeric" : "decimal";
        }
        get calculatedMaxLength() {
          return (
            18 +
            ("never" !== this.decimal &&
            this.nativeValue.includes(this.numberFormat.decimalSeparator)
              ? this.precision + 1
              : 0) +
            this.numberFormat.thousandSeparator.repeat(5).length
          );
        }
        get formattedValue() {
          const a = this.value || 0,
            i = Math.abs(a) % 1 > 0;
          let r = "always" === this.decimal || i ? this.precision : 0;
          const s = i ? (0, Wt.Nk)(a, this.precision) : "";
          return (
            this.focused && "always" !== this.decimal && (r = s.length),
            (0, Wt.uf)(
              a,
              r,
              this.numberFormat.decimalSeparator,
              this.numberFormat.thousandSeparator,
              this.numberFormat.zeroPadding
            )
          );
        }
        get computedValue() {
          return this.focused
            ? this.nativeValue
            : null === this.value
            ? ""
            : this.formattedValue;
        }
        onZero(a) {
          const t =
              this.nativeValue.split(this.numberFormat.decimalSeparator)[1] ||
              "",
            { nativeFocusableElement: i } = this;
          t.length < this.precision ||
            !i ||
            !i.selectionStart ||
            "0" !== this.nativeValue[i.selectionStart] ||
            (a.preventDefault(), i.selectionStart++);
        }
        onValueChange(a) {
          if ((0, at.Y5)(a)) return void this.updateValue(null);
          if (this.isNativeValueNotFinished) return;
          const t = this.absoluteCapInputValue(a);
          null === t ||
            isNaN(t) ||
            (this.updateValue(t),
            t !==
              (0, at.uk)(
                a,
                this.numberFormat.decimalSeparator,
                this.numberFormat.thousandSeparator
              ) && (this.nativeValue = this.formattedValue));
        }
        onKeyDown(a) {
          if (-1 !== $.YZ.indexOf(a.key)) {
            if ("never" === this.decimal) return void a.preventDefault();
            this.nativeValue.includes(this.numberFormat.decimalSeparator) &&
              (a.preventDefault(), this.setCaretAfterComma());
          }
        }
        onFocused(a) {
          if ((this.updateFocused(a), a)) return;
          const t = this.nativeNumberValue;
          if (isNaN(t)) return void this.clear();
          const i = Math.min(this.max, Math.max(this.min, t));
          this.updateValue(i), (this.nativeValue = this.formattedValue);
        }
        onHovered(a) {
          this.updateHovered(a);
        }
        onPressed(a) {
          this.updatePressed(a);
        }
        get isNativeValueNotFinished() {
          const a = this.nativeNumberValue;
          return a < 0 ? a > this.max : a < this.min;
        }
        get nativeValue() {
          return this.nativeFocusableElement
            ? this.nativeFocusableElement.value
            : "";
        }
        get nativeNumberValue() {
          return (0, at.uk)(
            this.nativeValue,
            this.numberFormat.decimalSeparator,
            this.numberFormat.thousandSeparator
          );
        }
        set nativeValue(a) {
          !this.primitiveTextfield ||
            !this.nativeFocusableElement ||
            ((this.primitiveTextfield.value = a),
            (this.nativeFocusableElement.value = a));
        }
        clear() {
          (this.nativeValue = ""), this.updateValue(null);
        }
        absoluteCapInputValue(a) {
          const t = (0, at.uk)(
              a,
              this.numberFormat.decimalSeparator,
              this.numberFormat.thousandSeparator
            ),
            i =
              t < 0
                ? Math.max(Math.max(this.min, Number.MIN_SAFE_INTEGER), t)
                : Math.min(t, Math.min(this.max, Number.MAX_SAFE_INTEGER));
          return isNaN(i) || i < this.min || i > this.max ? null : i;
        }
        setCaretAfterComma() {
          if (!this.nativeFocusableElement) return;
          const a = this.nativeValue.length - this.precision;
          this.nativeFocusableElement.setSelectionRange(a, a);
        }
      });
      var Wi;
      (ie.ɵfac = function (a) {
        return new (a || ie)(
          e.ɵɵdirectiveInject(v.NgControl, 10),
          e.ɵɵdirectiveInject(e.ChangeDetectorRef),
          e.ɵɵdirectiveInject(we.HO)
        );
      }),
        (ie.ɵcmp = e.ɵɵdefineComponent({
          type: ie,
          selectors: [["tui-input-number"]],
          viewQuery: function (a, t) {
            if ((1 & a && e.ɵɵviewQuery(bt.yc, 5), 2 & a)) {
              let i;
              e.ɵɵqueryRefresh((i = e.ɵɵloadQuery())) &&
                (t.primitiveTextfield = i.first);
            }
          },
          hostBindings: function (a, t) {
            1 & a &&
              e.ɵɵlistener("keydown.0", function (r) {
                return t.onZero(r);
              });
          },
          inputs: {
            min: "min",
            max: "max",
            decimal: "decimal",
            precision: "precision",
            prefix: "prefix",
            postfix: "postfix",
          },
          features: [
            e.ɵɵProvidersFeature([
              { provide: Te.KZ, useExisting: (0, e.forwardRef)(() => Gt) },
              { provide: Ut.M$, useExisting: (0, e.forwardRef)(() => Gt) },
            ]),
            e.ɵɵInheritDefinitionFeature,
          ],
          ngContentSelectors: ["*", "input"],
          decls: 4,
          vars: 23,
          consts: [
            [
              "tuiValueAccessor",
              "",
              "tuiTextfieldInputMode",
              "decimal",
              1,
              "textfield",
              3,
              "pseudoHovered",
              "pseudoFocused",
              "invalid",
              "tuiTextfieldMaxLength",
              "readOnly",
              "disabled",
              "textMask",
              "value",
              "prefix",
              "postfix",
              "focusable",
              "valueChange",
              "hoveredChange",
              "focusedChange",
              "pressedChange",
              "keydown",
            ],
          ],
          template: function (a, t) {
            1 & a &&
              (e.ɵɵprojectionDef(up),
              e.ɵɵelementStart(0, "tui-primitive-textfield", 0),
              e.ɵɵlistener("valueChange", function (r) {
                return t.onValueChange(r);
              })("hoveredChange", function (r) {
                return t.onHovered(r);
              })("focusedChange", function (r) {
                return t.onFocused(r);
              })("pressedChange", function (r) {
                return t.onPressed(r);
              })("keydown", function (r) {
                return t.onKeyDown(r);
              }),
              e.ɵɵpipe(1, "tuiMapper"),
              e.ɵɵprojection(2),
              e.ɵɵprojection(3, 1, ["ngProjectAs", "input", 5, ["input"]]),
              e.ɵɵelementEnd()),
              2 & a &&
                e.ɵɵproperty("pseudoHovered", t.pseudoHovered)(
                  "pseudoFocused",
                  t.computedFocused
                )("invalid", t.computedInvalid)(
                  "tuiTextfieldMaxLength",
                  t.calculatedMaxLength
                )("readOnly", t.readOnly)("disabled", t.computedDisabled)(
                  "textMask",
                  e.ɵɵpipeBindV(
                    1,
                    11,
                    e.ɵɵpureFunction5(
                      17,
                      gp,
                      t.isNegativeAllowed,
                      t.mask,
                      t.decimal,
                      t.precision,
                      t.nativeFocusableElement
                    )
                  )
                )("value", t.computedValue)("prefix", t.prefix)(
                  "postfix",
                  t.postfix
                )("focusable", t.focusable);
          },
          dependencies: [Ui.hd, bt.yc, bt.B1, W.D9, W.fy, Yi.n, dp],
          styles: [
            "[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:left}.textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}",
          ],
          changeDetection: 0,
        })),
        (ie.ctorParameters = () => [
          {
            type: v.NgControl,
            decorators: [
              { type: e.Optional },
              { type: e.Self },
              { type: e.Inject, args: [v.NgControl] },
            ],
          },
          {
            type: e.ChangeDetectorRef,
            decorators: [{ type: e.Inject, args: [e.ChangeDetectorRef] }],
          },
          { type: void 0, decorators: [{ type: e.Inject, args: [we.HO] }] },
        ]),
        (0, u.__decorate)(
          [(0, e.ViewChild)(bt.yc)],
          ie.prototype,
          "primitiveTextfield",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "min",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "max",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "decimal",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "precision",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "prefix",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          ie.prototype,
          "postfix",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.HostListener)("keydown.0", ["$event"])],
          ie.prototype,
          "onZero",
          null
        ),
        (ie = Gt =
          (0, u.__decorate)(
            [
              (0, u.__param)(0, (0, e.Optional)()),
              (0, u.__param)(0, (0, e.Self)()),
              (0, u.__param)(0, (0, e.Inject)(v.NgControl)),
              (0, u.__param)(1, (0, e.Inject)(e.ChangeDetectorRef)),
              (0, u.__param)(2, (0, e.Inject)(we.HO)),
            ],
            ie
          ));
      let Ye = (Wi = class extends _p.dh {
        get value() {
          return this.host.computedValue;
        }
        onValueChange(a) {
          this.host.onValueChange(a);
        }
        process(a) {
          this.input = a;
        }
        ngDoCheck() {
          this.input &&
            ((this.input.maxLength = this.host.calculatedMaxLength),
            (this.input.inputMode = "decimal"));
        }
      });
      (Ye.ɵfac = (function () {
        let n;
        return function (t) {
          return (n || (n = e.ɵɵgetInheritedFactory(Ye)))(t || Ye);
        };
      })()),
        (Ye.ɵdir = e.ɵɵdefineDirective({
          type: Ye,
          selectors: [["tui-input-number"]],
          features: [
            e.ɵɵProvidersFeature([
              { provide: we.S0, useExisting: (0, e.forwardRef)(() => Wi) },
            ]),
            e.ɵɵInheritDefinitionFeature,
          ],
        }));
      let Gi = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({
              imports: [Ui.QA, mp, bt.KW, W.cn, Yi.S],
            })),
            n
          );
        })(),
        vp = (() => {
          class n {
            constructor(t, i) {
              (this.context = t), (this.orderExpirationService = i);
              const r = this.orderExpirationService.expirationTime;
              this.timeForm = new v.FormGroup({
                hours: new v.FormControl(Math.floor(r / 60)),
                minutes: new v.FormControl(r % 60),
              });
            }
            onSet() {
              const t = this.timeForm.value;
              this.orderExpirationService.updateExpirationTime(
                Math.max(60 * t.hours + t.minutes, 1)
              ),
                this.onClose();
            }
            onClose() {
              this.context.completeWith(null);
            }
            onHoursChange(t) {
              0 === t &&
                0 === this.timeForm.value.minutes &&
                this.timeForm.controls.minutes.setValue(1);
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(L.yf),
                e.ɵɵdirectiveInject(yt)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["polymorpheus-expiration-custom"]],
              decls: 21,
              vars: 11,
              consts: [
                [1, "container", 3, "formGroup"],
                [1, "container__header"],
                [1, "inputs"],
                [1, "inputs__title"],
                [1, "inputs__flex"],
                [1, "input", "input_hours"],
                [
                  3,
                  "tuiTextfieldLabelOutside",
                  "formControlName",
                  "min",
                  "max",
                  "ngModelChange",
                ],
                [1, "input__title"],
                [1, "input", "input_minutes"],
                [
                  3,
                  "tuiTextfieldLabelOutside",
                  "formControlName",
                  "min",
                  "max",
                ],
                [1, "container__set-button", 3, "disabled", "onClick"],
                [
                  "appearance",
                  "outline",
                  1,
                  "container__cancel-button",
                  3,
                  "onClick",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "form", 0)(1, "div", 1),
                  e.ɵɵtext(2, "Set up custom period"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(3, "div", 2)(4, "label", 3),
                  e.ɵɵtext(5, "Custom period"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(6, "div", 4)(7, "div", 5)(
                    8,
                    "tui-input-number",
                    6
                  ),
                  e.ɵɵlistener("ngModelChange", function (c) {
                    return r.onHoursChange(c);
                  }),
                  e.ɵɵtext(9, " 0 "),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(10, "span", 7),
                  e.ɵɵtext(11, "Hours"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(12, "div", 8)(13, "tui-input-number", 9),
                  e.ɵɵtext(14),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(15, "span", 7),
                  e.ɵɵtext(16, "Minutes"),
                  e.ɵɵelementEnd()()()(),
                  e.ɵɵelementStart(17, "app-rubic-button", 10),
                  e.ɵɵlistener("onClick", function () {
                    return r.onSet();
                  }),
                  e.ɵɵtext(18, "Set"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(19, "app-rubic-button", 11),
                  e.ɵɵlistener("onClick", function () {
                    return r.onClose();
                  }),
                  e.ɵɵtext(20, "Cancel"),
                  e.ɵɵelementEnd()()),
                  2 & i &&
                    (e.ɵɵproperty("formGroup", r.timeForm),
                    e.ɵɵadvance(8),
                    e.ɵɵproperty("tuiTextfieldLabelOutside", !0)(
                      "formControlName",
                      "hours"
                    )("min", 0)("max", 87600),
                    e.ɵɵadvance(5),
                    e.ɵɵproperty("tuiTextfieldLabelOutside", !0)(
                      "formControlName",
                      "minutes"
                    )("min", r.timeForm.value.hours ? 0 : 1)("max", 59),
                    e.ɵɵadvance(1),
                    e.ɵɵtextInterpolate1(
                      " ",
                      r.timeForm.value.hours ? 0 : 1,
                      " "
                    ),
                    e.ɵɵadvance(3),
                    e.ɵɵproperty(
                      "disabled",
                      !r.timeForm.controls.hours.valid ||
                        !r.timeForm.controls.minutes.valid
                    ));
              },
              dependencies: [
                se.j,
                v.ɵNgNoValidate,
                v.NgControlStatus,
                v.NgControlStatusGroup,
                v.FormGroupDirective,
                v.FormControlName,
                ie,
                Ye,
                W.xT,
              ],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.container[_ngcontent-%COMP%]{position:relative;max-width:360px;padding:0}.container__header[_ngcontent-%COMP%]{margin-bottom:23px;font-weight:600;font-size:18px;line-height:120%;letter-spacing:.06em}.container__set-button[_ngcontent-%COMP%]{display:block;margin:16px 0 8px}.container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%] {--tui-height-l: 45px}.inputs__title[_ngcontent-%COMP%]{display:block;margin-bottom:10px;color:var(--secondary-text)}.inputs__flex[_ngcontent-%COMP%]{display:flex;grid-gap:16px}.input[_ngcontent-%COMP%]{position:relative;width:100%;height:40px}.input__title[_ngcontent-%COMP%]{position:absolute;top:50%;right:16px;color:var(--secondary-text);letter-spacing:.06em;transform:translateY(-50%)}.input[_ngcontent-%COMP%]  tui-primitive-textfield{--tui-height-l: 40px}.input[_ngcontent-%COMP%]  tui-primitive-textfield input{padding:0 63px 0 16px!important}.input_minutes[_ngcontent-%COMP%]  tui-primitive-textfield input{padding:0 76px 0 16px!important}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        yt = (() => {
          class n {
            constructor(t, i, r) {
              (this.dialogService = t),
                (this.windowWidthService = i),
                (this.injector = r),
                (this._expirationTime$ = new A.X(10080)),
                (this.expirationTime$ = this._expirationTime$.asObservable());
            }
            get expirationTime() {
              return this._expirationTime$.getValue();
            }
            updateExpirationTime(t) {
              this._expirationTime$.next(t);
            }
            openExpirationCustomModal() {
              return this.dialogService.open(new L.Al(vp, this.injector), {
                size:
                  this.windowWidthService.windowSize <= Bt.G.TABLET
                    ? "page"
                    : "s",
              });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(De.RO),
                e.ɵɵinject(cn.R),
                e.ɵɵinject(e.Injector)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Ki = (() => {
          class n {
            constructor(t, i, r, s, c, l, d, _, g, C, b, k, y) {
              (this.sdkService = t),
                (this.swapFormService = i),
                (this.swapTypeService = r),
                (this.swapFormQueryService = s),
                (this.authService = c),
                (this.errorsService = l),
                (this.notificationsService = d),
                (this.orderExpirationService = _),
                (this.orderRateService = g),
                (this.successTxModalService = C),
                (this.limitOrdersApiService = b),
                (this.gasService = k),
                (this.walletConnectorService = y),
                (this._tradeStatus$ = new A.X(h.DISABLED)),
                (this.tradeStatus$ = this._tradeStatus$.pipe((0, Ve.b)(200))),
                (this._displayApproveButton$ = new A.X(!1)),
                (this.displayApproveButton$ =
                  this._displayApproveButton$.asObservable()),
                (this.prevFromTokenAmount = null),
                (this.needApprove = !1),
                (this.prevAddress = this.walletConnectorService.address),
                (this._calculateTrade$ = new Ce.x()),
                (this.calculating = !1),
                this.subscribeOnCalculation(),
                this.subscribeOnFormChanges(),
                this.subscribeOnSwapTypeChanges(),
                this.subscribeOnWalletChange();
            }
            set tradeStatus(t) {
              this._tradeStatus$.next(t);
            }
            get isFormFilled() {
              const {
                  fromAsset: t,
                  fromAmount: i,
                  toToken: r,
                } = this.swapFormService.inputValue,
                { toAmount: s } = this.swapFormService.outputValue;
              return t && i?.gt(0) && r && s?.gt(0);
            }
            get inputValue() {
              const t = this.swapFormService.inputValue;
              if (
                t.fromAssetType &&
                !o.BlockchainsInfo.isBlockchainName(t.fromAssetType)
              )
                throw new z.q("Cannot use cross chain");
              return {
                ...t,
                fromBlockchain: t.fromAssetType,
                fromToken: t.fromAsset,
              };
            }
            subscribeOnCalculation() {
              this._calculateTrade$
                .pipe(
                  (0, Ve.b)(200),
                  (0, N.w)((t) => {
                    if (t.stop) return (0, V.of)(null);
                    const {
                      fromBlockchain: i,
                      fromToken: r,
                      fromAmount: s,
                    } = this.inputValue;
                    return s?.isFinite() &&
                      r &&
                      Boolean(this.authService.userAddress) &&
                      this.authService.userChainType ===
                        o.BlockchainsInfo.getChainType(i)
                      ? ((this.calculating = !0),
                        (this.tradeStatus = this.isFormFilled
                          ? h.LOADING
                          : h.DISABLED),
                        (0, Ne.D)(
                          o.TokenAmount.createToken({ ...r, tokenAmount: s })
                        ).pipe(
                          (0, q.zd)(
                            (l) =>
                              !this.prevFromTokenAmount ||
                              !(0, q.tb)(this.prevFromTokenAmount, l) ||
                              !this.prevFromTokenAmount.tokenAmount.eq(s) ||
                              t?.force,
                            (l) =>
                              (0, Ne.D)(
                                this.sdkService.limitOrderManager.needApprove(
                                  l,
                                  s
                                )
                              ).pipe(
                                (0, x.U)((d) => {
                                  (this.prevFromTokenAmount = l),
                                    (this.needApprove = d);
                                })
                              ),
                            () => (0, V.of)(null)
                          ),
                          (0, fe.b)(() => {
                            (this.calculating = !1),
                              this.isFormFilled &&
                                (this.tradeStatus = this.needApprove
                                  ? h.READY_TO_APPROVE
                                  : h.READY_TO_SWAP),
                              this._displayApproveButton$.next(
                                this.needApprove
                              );
                          })
                        ))
                      : (0, V.of)(null);
                  })
                )
                .subscribe();
            }
            subscribeOnWalletChange() {
              this.walletConnectorService.addressChange$
                .pipe(
                  (0, q.dY)(() => (0, Ne.D)(this.updateStatus({ force: !0 })))
                )
                .subscribe();
            }
            subscribeOnFormChanges() {
              this.swapFormService.inputValueDistinct$.subscribe(() => {
                this.updateStatus(), setTimeout(() => this.updateBlockchains());
              }),
                this.swapFormService.outputValueDistinct$.subscribe(() => {
                  this.tradeStatus = this.isFormFilled
                    ? this.calculating
                      ? h.LOADING
                      : this.needApprove
                      ? h.READY_TO_APPROVE
                      : h.READY_TO_SWAP
                    : h.DISABLED;
                });
            }
            subscribeOnSwapTypeChanges() {
              this.swapTypeService.swapMode$.pipe((0, ce.x)()).subscribe(() => {
                this.updateBlockchains();
              });
            }
            updateStatus(t = {}) {
              var i = this;
              return (0, O.Z)(function* () {
                i.swapTypeService.getSwapProviderType() === S.V.LIMIT_ORDER &&
                  i._calculateTrade$.next(t);
              })();
            }
            updateBlockchains() {
              if (
                this.swapTypeService.getSwapProviderType() !==
                  S.V.LIMIT_ORDER ||
                this.swapFormQueryService.initialLoading
              )
                return;
              let {
                fromToken: t,
                toToken: i,
                fromBlockchain: r,
                toBlockchain: s,
              } = this.inputValue;
              o.limitOrderSupportedBlockchains.some((l) => l === r)
                ? o.EvmWeb3Pure.isNativeAddress(t?.address) && (t = null)
                : ((r = o.BLOCKCHAIN_NAME.ETHEREUM), (t = null)),
                o.limitOrderSupportedBlockchains.some((l) => l === s)
                  ? o.EvmWeb3Pure.isNativeAddress(i?.address) && (i = null)
                  : ((s = o.BLOCKCHAIN_NAME.ETHEREUM), (i = null));
              const c = {
                fromAssetType: r,
                toBlockchain: s,
                fromAsset: t,
                toToken: i,
              };
              r !== s
                ? i && !t
                  ? this.swapFormService.inputControl.patchValue({
                      ...c,
                      fromAssetType: s,
                    })
                  : (this.swapFormService.inputControl.patchValue({
                      ...c,
                      toBlockchain: r,
                      fromAmount: null,
                      toToken: null,
                    }),
                    this.swapFormService.outputControl.patchValue({
                      toAmount: null,
                    }))
                : this.swapFormService.inputControl.patchValue(c);
            }
            approve() {
              var t = this;
              return (0, O.Z)(function* () {
                const { fromAsset: i, fromAmount: r } =
                  t.swapFormService.inputValue;
                let s;
                t.tradeStatus = h.APPROVE_IN_PROGRESS;
                try {
                  const c = i,
                    l = wn.u[c.blockchain]
                      ? o.Web3Pure.toWei(
                          yield t.gasService.getGasPriceInEthUnits(c.blockchain)
                        )
                      : null,
                    d = {
                      onTransactionHash: () => {
                        s = t.notificationsService.showApproveInProgress();
                      },
                      ...(l && { gasPrice: l }),
                    };
                  yield t.sdkService.limitOrderManager.approve(c, r, d),
                    t.notificationsService.showApproveSuccessful(),
                    (t.tradeStatus = h.READY_TO_SWAP);
                } catch (c) {
                  const l = Ze.E.parseError(c);
                  t.errorsService.catch(l),
                    (t.tradeStatus = h.READY_TO_APPROVE);
                } finally {
                  s?.unsubscribe();
                }
              })();
            }
            onCreateOrder() {
              var t = this;
              return (0, O.Z)(function* () {
                const i = t.swapFormService.inputValue,
                  { fromAsset: r, fromAmount: s, toToken: c } = i,
                  l = r,
                  { toAmount: d } = t.swapFormService.outputValue;
                t.tradeStatus = h.SWAP_IN_PROGRESS;
                try {
                  const _ = t.orderExpirationService.expirationTime,
                    g = yield t.sdkService.limitOrderManager.createOrder(
                      l,
                      c,
                      s,
                      d,
                      { deadline: _ }
                    );
                  t.limitOrdersApiService.createTrade(
                    g,
                    i,
                    d,
                    t.authService.userAddress
                  ),
                    t.successTxModalService.openLimitOrderModal();
                } catch (_) {
                  let g = Ze.E.parseError(_);
                  g instanceof In.v && (g = new Dn()), t.errorsService.catch(g);
                }
                t.tradeStatus = h.READY_TO_SWAP;
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(Ge.w),
                e.ɵɵinject(E.q),
                e.ɵɵinject(ae.H),
                e.ɵɵinject(li.B),
                e.ɵɵinject(U.e),
                e.ɵɵinject(gt.r),
                e.ɵɵinject(dt.T),
                e.ɵɵinject(yt),
                e.ɵɵinject(ft),
                e.ɵɵinject(fi.c),
                e.ɵɵinject(pp),
                e.ɵɵinject(It.Q),
                e.ɵɵinject($e.j)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })();
      var Se = (() => {
        return (
          ((n = Se || (Se = {}))[(n.NOTHING = 0)] = "NOTHING"),
          (n[(n.FINE = 1)] = "FINE"),
          (n[(n.WARNING = 2)] = "WARNING"),
          (n[(n.ERROR = 3)] = "ERROR"),
          Se
        );
        var n;
      })();
      const Kt = "assets/images/icons/",
        Xi = {
          [Se.NOTHING]: { imgSrc: `${Kt}tick.svg`, class: "" },
          [Se.FINE]: { imgSrc: `${Kt}tick.svg`, class: "fine" },
          [Se.WARNING]: {
            imgSrc: `${Kt}exclamation-yellow.svg`,
            class: "warning",
          },
          [Se.ERROR]: { imgSrc: `${Kt}exclamation-red.svg`, class: "error" },
        };
      function Cp(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, "Market rate"),
          e.ɵɵelementEnd());
      }
      function xp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"),
            e.ɵɵtext(1, " Your rate is "),
            e.ɵɵelementStart(2, "span"),
            e.ɵɵtext(3),
            e.ɵɵelementEnd(),
            e.ɵɵtext(4, " than market: "),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(2),
            e.ɵɵclassMap(
              "percent__value percent__value_" + t.percentInfo.className
            ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              "",
              t.formattedPercentDiff,
              "% ",
              t.percentInfo.percent > 0 ? "higher" : "lower",
              ""
            );
        }
      }
      function bp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate3(
              "1 ",
              i,
              " = ",
              e.ɵɵpipeBind2(
                2,
                3,
                e.ɵɵpipeBind1(3, 6, r.rate),
                "toClosestValue"
              ),
              " ",
              t,
              ""
            );
        }
      }
      function yp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate3(
              "",
              e.ɵɵpipeBind2(
                2,
                3,
                e.ɵɵpipeBind1(3, 6, r.rate),
                "toClosestValue"
              ),
              " ",
              i,
              " = 1 ",
              t,
              ""
            );
        }
      }
      function Sp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, bp, 4, 8, "span", 6),
            e.ɵɵtemplate(2, yp, 4, 8, "span", 6),
            e.ɵɵelement(3, "div", 11),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "from-to" === t.rateDirection),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "to-from" === t.rateDirection);
        }
      }
      function Tp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Sp, 4, 2, "ng-container", 6),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext(2);
          e.ɵɵadvance(1), e.ɵɵproperty("ngIf", i && t && r.rate.gt(0));
        }
      }
      function Op(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, Tp, 2, 1, "ng-container", 10),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.toTokenName$));
        }
      }
      function Pp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 9),
            e.ɵɵtemplate(1, Op, 3, 3, "ng-container", 10),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.fromTokenName$));
        }
      }
      function wp(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 12),
          e.ɵɵtext(1, "Rate is unknown"),
          e.ɵɵelementEnd());
      }
      let kp = (() => {
        class n {
          constructor(t, i, r, s) {
            (this.cdr = t),
              (this.orderRateService = i),
              (this.swapFormService = r),
              (this.destroy$ = s),
              (this.rate = new M.Z(0)),
              (this.rateDirection = "from-to"),
              (this.fromTokenName$ = this.swapFormService.fromToken$.pipe(
                (0, x.U)((c) => c?.symbol || "")
              )),
              (this.toTokenName$ = this.swapFormService.toToken$.pipe(
                (0, x.U)((c) => c?.symbol || "")
              ));
          }
          get formattedPercentDiff() {
            const t = Math.abs(this.percentInfo.percent).toString();
            return this.percentInfo.percent >= 100 ? t.slice(0, 3) : t;
          }
          ngOnInit() {
            this.orderRateService.rate$
              .pipe((0, P.R)(this.destroy$))
              .subscribe(({ value: t, percentDiff: i }) => {
                t?.isFinite()
                  ? t.eq(this.rate) ||
                    ((this.isRateUknown = !1), this.updateRateFormValue())
                  : (this.isRateUknown = !0),
                  this.updateRateLevelData(i),
                  this.cdr.markForCheck();
              });
          }
          updateRateLevelData(t) {
            let i;
            if (this.isRateUknown) i = Xi[Se.WARNING];
            else {
              let r;
              (r =
                t <= -10
                  ? Se.ERROR
                  : t <= -5
                  ? Se.WARNING
                  : t <= 0
                  ? Se.NOTHING
                  : Se.FINE),
                (i = Xi[r]);
            }
            this.percentInfo = {
              percent: t,
              iconSrc: i.imgSrc,
              className: i.class,
            };
          }
          toggleRateDirection() {
            (this.rateDirection =
              "from-to" === this.rateDirection ? "to-from" : "from-to"),
              this.rate.isFinite() &&
                this.rate.gt(0) &&
                this.updateRateFormValue();
          }
          updateRateFormValue() {
            const t = this.orderRateService.marketRate;
            this.rate =
              "from-to" === this.rateDirection ? t : new M.Z(1).div(t).dp(6);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(ft),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-order-rate"]],
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 10,
            vars: 7,
            consts: [
              [3, "click"],
              [1, "rate__header", "header"],
              [1, "header__rate", "percent"],
              [1, "percent__icon"],
              ["alt", "", 3, "src"],
              [1, "percent__title"],
              [4, "ngIf"],
              ["class", "rate__value-container", 4, "ngIf"],
              ["class", "rate__unknown-text", 4, "ngIf"],
              [1, "rate__value-container"],
              [4, "ngLet"],
              [
                "inlineSVG",
                "assets/images/swaps/icons/rate-direction-button.svg",
                1,
                "rate__direction-button",
              ],
              [1, "rate__unknown-text"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵlistener("click", function () {
                  return r.toggleRateDirection();
                }),
                e.ɵɵelementStart(1, "div", 1)(2, "div", 2)(3, "div", 3),
                e.ɵɵelement(4, "img", 4),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(5, "div", 5),
                e.ɵɵtemplate(6, Cp, 2, 0, "span", 6),
                e.ɵɵtemplate(7, xp, 5, 4, "span", 6),
                e.ɵɵelementEnd()()(),
                e.ɵɵtemplate(8, Pp, 3, 3, "div", 7),
                e.ɵɵtemplate(9, wp, 2, 0, "div", 8),
                e.ɵɵelementEnd()),
                2 & i &&
                  (e.ɵɵclassMap("rate rate_" + r.percentInfo.className),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty("src", r.percentInfo.iconSrc, e.ɵɵsanitizeUrl),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngIf", 0 === r.percentInfo.percent),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.percentInfo.percent),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.isRateUknown),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.isRateUknown));
            },
            dependencies: [m.O5, F.e, G.d$, m.Ov, be.N, ye.f],
            styles: [
              ".rate[_ngcontent-%COMP%]{padding:16px 16px 15px;background:var(--form-background);border:1px solid var(--transparent-line);border-radius:19px;cursor:pointer}.rate_fine[_ngcontent-%COMP%]{border-color:var(--primary-color)}.rate_warning[_ngcontent-%COMP%]{border-color:var(--warning-color)}.rate_error[_ngcontent-%COMP%]{border-color:var(--error-color)}.rate__header[_ngcontent-%COMP%]{margin-bottom:7px}.rate__value-container[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;justify-content:start;width:100%;height:28px;color:var(--primary-text);font-size:19px;white-space:nowrap}.rate__direction-button[_ngcontent-%COMP%]{display:flex;align-items:center;width:15px;cursor:pointer}.rate__direction-button[_ngcontent-%COMP%]     svg path{fill:var(--primary-text)}.rate__unknown-text[_ngcontent-%COMP%]{color:var(--warning-color);font-size:23px;line-height:28px;letter-spacing:.1em}.header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;height:16px;color:var(--secondary-text);line-height:120%;letter-spacing:.03em}.percent[_ngcontent-%COMP%]{display:flex;align-items:center}.percent__icon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:16px;margin-right:8px}.percent__icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:13px}.percent__value_fine[_ngcontent-%COMP%]{color:var(--primary-color)}.percent__value_warning[_ngcontent-%COMP%]{color:var(--warning-color)}.percent__value_error[_ngcontent-%COMP%]{color:var(--error-color)}.setter[_ngcontent-%COMP%]{display:flex;grid-gap:8px;align-items:center}.setter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{cursor:pointer}.setter__icon[_ngcontent-%COMP%]{width:20px;height:20px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Fn(n, a) {
        return 1 === n ? `1 ${a}` : `${n} ${a}s`;
      }
      var St = p(15411),
        Tt = p(72558);
      const Ip = [
          { label: "1 minute", minutes: 1 },
          { label: "10 minutes", minutes: 10 },
          { label: "1 hour", minutes: 60 },
          { label: "1 day", minutes: 1440 },
          { label: "7 days", minutes: 10080 },
        ],
        Zi = function (n) {
          return { container__option_highlighted: n };
        };
      function Np(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 2),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext();
              return e.ɵɵresetView(c.onOptionsClick(s));
            }),
            e.ɵɵtext(1),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = a.index,
            r = e.ɵɵnextContext();
          e.ɵɵproperty(
            "ngClass",
            e.ɵɵpureFunction1(2, Zi, r.highlightedOption === i)
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", t.label, " ");
        }
      }
      let Rp = (() => {
        class n {
          constructor(t) {
            (this.orderExpirationService = t),
              (this.onClose = new e.EventEmitter()),
              (this.options = Ip);
            const i = this.orderExpirationService.expirationTime,
              r = this.options.findIndex((s) => s.minutes === i);
            this.highlightedOption = -1 !== r ? r : this.options.length;
          }
          onOptionsClick(t) {
            this.orderExpirationService.updateExpirationTime(t.minutes),
              this.onClose.emit();
          }
          onCustomClick() {
            this.orderExpirationService.openExpirationCustomModal().subscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(yt));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-expiration-optional"]],
            outputs: { onClose: "onClose" },
            decls: 4,
            vars: 4,
            consts: [
              [1, "container"],
              [
                "class",
                "container__option",
                3,
                "ngClass",
                "click",
                4,
                "ngFor",
                "ngForOf",
              ],
              [1, "container__option", 3, "ngClass", "click"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtemplate(1, Np, 2, 4, "div", 1),
                e.ɵɵelementStart(2, "div", 2),
                e.ɵɵlistener("click", function () {
                  return r.onCustomClick();
                }),
                e.ɵɵtext(3, " Custom "),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("ngForOf", r.options),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(
                      2,
                      Zi,
                      r.highlightedOption === r.options.length
                    )
                  ));
            },
            dependencies: [m.mk, m.sg],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.container[_ngcontent-%COMP%]{width:204px;margin:0;padding:8px 16px;background:var(--form-background)}.container__option[_ngcontent-%COMP%]{display:flex;align-items:center;height:36px;font-size:14px;line-height:120%;cursor:pointer}.container__option_highlighted[_ngcontent-%COMP%]{color:var(--primary-color)}.container__option[_ngcontent-%COMP%]:not(:last-child){border-bottom:1px solid var(--transparent-line)}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Dp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 7),
            e.ɵɵtext(2),
            e.ɵɵelement(3, "img", 8),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "tuiHint",
              t.shortValue !== t.fullValue ? t.fullValue : null
            ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", t.shortValue, " "),
            e.ɵɵadvance(1),
            e.ɵɵclassProp("transaction-info__arrow_opened", i.settingsOpen);
        }
      }
      function Fp(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-expiration-optional", 9),
            e.ɵɵlistener("onClose", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onClose());
            }),
            e.ɵɵelementEnd();
        }
      }
      let Bp = (() => {
        class n {
          constructor(t) {
            (this.orderExpirationService = t),
              (this.settingsOpen = !1),
              (this.expirationValue$ =
                this.orderExpirationService.expirationTime$.pipe(
                  (0, x.U)((i) => this.getDateValues(i))
                ));
          }
          getDateValues(t) {
            const i = Math.floor(t / 60),
              r = Math.floor(i / 24),
              s = [];
            return (
              r &&
                s.push(
                  (function Ep(n) {
                    return Fn(n, "day");
                  })(r)
                ),
              i % 24 &&
                s.push(
                  (function Mp(n) {
                    return Fn(n, "hour");
                  })(i % 24)
                ),
              t % 60 &&
                s.push(
                  (function Ap(n) {
                    return Fn(n, "minute");
                  })(t % 60)
                ),
              { shortValue: s[0], fullValue: s.join(" ") }
            );
          }
          onClose() {
            this.settingsOpen = !1;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(yt));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-expires-in"]],
            decls: 10,
            vars: 5,
            consts: [
              [
                "tuiDropdownDirection",
                "bottom",
                1,
                "dropdown",
                3,
                "open",
                "content",
                "openChange",
              ],
              [1, "dropdown__container"],
              [1, "dropdown__header", "header"],
              [1, "header__title"],
              [
                "src",
                "assets/images/icons/exclamation-grey.svg",
                "alt",
                "info",
                "tuiHint",
                "Please note: When a limit order expires, no cancellation fee is charged. If a limit order is canceled manually, a gas fee is charged at the time of signing the transaction.",
                "tuiHintMode",
                "onDark",
              ],
              [4, "ngLet"],
              ["dropdown", ""],
              ["tuiHintMode", "onDark", 1, "dropdown__value", 3, "tuiHint"],
              [
                "src",
                "assets/images/icons/arrow-down.svg",
                "alt",
                "expand",
                1,
                "dropdown__arrow",
              ],
              [3, "onClose"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "tui-hosted-dropdown", 0),
                  e.ɵɵlistener("openChange", function (c) {
                    return (r.settingsOpen = c);
                  }),
                  e.ɵɵelementStart(1, "div", 1)(2, "div", 2)(3, "span", 3),
                  e.ɵɵtext(4, "Expires in"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelement(5, "img", 4),
                  e.ɵɵelementEnd(),
                  e.ɵɵtemplate(6, Dp, 4, 4, "ng-container", 5),
                  e.ɵɵpipe(7, "async"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵtemplate(
                    8,
                    Fp,
                    1,
                    0,
                    "ng-template",
                    null,
                    6,
                    e.ɵɵtemplateRefExtractor
                  )),
                2 & i)
              ) {
                const s = e.ɵɵreference(9);
                e.ɵɵproperty("open", r.settingsOpen)("content", s),
                  e.ɵɵadvance(6),
                  e.ɵɵproperty(
                    "ngLet",
                    e.ɵɵpipeBind1(7, 3, r.expirationValue$)
                  );
              }
            },
            dependencies: [F.e, St.o1, Tt.Sw, H.D, Rp, m.Ov],
            styles: [
              ".dropdown[_ngcontent-%COMP%]{position:relative;width:100%;cursor:pointer}.dropdown__container[_ngcontent-%COMP%]{padding:16px 16px 15px;background:var(--form-background);border:1px solid var(--transparent-line);border-radius:19px}.dropdown__header[_ngcontent-%COMP%]{margin-bottom:7px}.dropdown__value[_ngcontent-%COMP%]{display:flex;grid-gap:12px;align-items:center;width:-moz-fit-content;width:fit-content;height:28px;overflow:hidden;color:var(--primary-text);font-size:19px;line-height:120%;letter-spacing:.06em;white-space:nowrap}.dropdown__arrow[_ngcontent-%COMP%]{width:13px;transition:.2s ease-in-out}.dropdown__arrow_opened[_ngcontent-%COMP%]{transform:translateY(-50%) rotate(180deg)}.header[_ngcontent-%COMP%]{display:flex;align-items:center;color:var(--secondary-text);line-height:120%;letter-spacing:.03em}.header[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:6px;cursor:help}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function Hp(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "section", 1)(2, "div", 2)(3, "div", 3),
            e.ɵɵelement(4, "app-token-amount-input", 4)(5, "app-tokens-rate"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(6, "div", 5),
            e.ɵɵelement(7, "app-order-rate")(8, "app-expires-in"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "div", 6)(10, "div", 7)(
              11,
              "app-swap-button-container",
              8
            ),
            e.ɵɵlistener("onApproveClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onApprove());
            })("onSwapClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.onCreateOrder());
            }),
            e.ɵɵpipe(12, "async"),
            e.ɵɵelementEnd()()()(),
            e.ɵɵelementContainerEnd();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(11),
            e.ɵɵproperty("needApprove", i.needApprove(t))(
              "withApproveButton",
              e.ɵɵpipeBind1(12, 4, i.displayApproveButton$)
            )("status", t)("error", null);
        }
      }
      let Lp = (() => {
          class n {
            constructor(t, i, r) {
              (this.limitOrderFormService = t),
                (this.orderRateService = i),
                (this.destroy$ = r),
                (this.tradeStatus$ = this.limitOrderFormService.tradeStatus$),
                (this.displayApproveButton$ =
                  this.limitOrderFormService.displayApproveButton$);
            }
            needApprove(t) {
              return t === h.READY_TO_APPROVE;
            }
            onApprove() {
              var t = this;
              return (0, O.Z)(function* () {
                yield t.limitOrderFormService.approve();
              })();
            }
            onCreateOrder() {
              var t = this;
              return (0, O.Z)(function* () {
                yield t.limitOrderFormService.onCreateOrder();
              })();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(Ki),
                e.ɵɵdirectiveInject(ft),
                e.ɵɵdirectiveInject(w.a3, 2)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-limit-order-bottom-form"]],
              inputs: { fromAmountUpdated$: "fromAmountUpdated$" },
              features: [e.ɵɵProvidersFeature([w.a3])],
              decls: 2,
              vars: 3,
              consts: [
                [4, "ngLet"],
                [1, "bottom-form"],
                [1, "bottom-form__container"],
                [1, "bottom-form__estimate-container"],
                ["formType", "to"],
                [1, "bottom-form__settings"],
                [1, "bottom-form__footer"],
                [1, "bottom-form__button"],
                [
                  "buttonText",
                  "Place limit order",
                  3,
                  "needApprove",
                  "withApproveButton",
                  "status",
                  "error",
                  "onApproveClick",
                  "onSwapClick",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtemplate(0, Hp, 13, 6, "ng-container", 0),
                  e.ɵɵpipe(1, "async")),
                  2 & i &&
                    e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.tradeStatus$));
              },
              dependencies: [Tn, jt, mi, F.e, kp, Bp, m.Ov],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.bottom-form[_ngcontent-%COMP%]{display:flex;flex-direction:column}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%]{flex-direction:row}html.iframe-vertical[_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form[_ngcontent-%COMP%]{justify-content:space-between;height:212px}.bottom-form__container[_ngcontent-%COMP%]{z-index:1;min-height:113px;margin:0 0 16px;padding:0 24px 24px;background:var(--form-background);border-top:0;border-radius:0 0 19px 19px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{position:relative;margin:0}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{position:relative;flex-direction:row-reverse;align-items:center;width:363px;height:50px;min-height:unset;margin:0;padding:0 7px 0 16px;background:var(--primary-background);border-radius:10px}html.iframe-horizontal:not(.dark)[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-horizontal:not(.dark)   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{background-color:var(--iframe-primary-background)}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]{flex-direction:column;justify-content:flex-start;padding:0;background-color:transparent}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]   app-select-asset-button-tokens[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__container[_ngcontent-%COMP%]   app-select-asset-button-tokens[_ngcontent-%COMP%]{margin-bottom:10px}@media (max-width: 651px){.bottom-form__container[_ngcontent-%COMP%]{height:auto;margin-bottom:8px;padding:30px 20px}}@media (max-width: 420px){.bottom-form__container[_ngcontent-%COMP%]{flex-direction:column}}.bottom-form__estimate-container[_ngcontent-%COMP%]{position:relative;min-height:65px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:column;grid-gap:6px}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:row-reverse;align-items:center;height:100%;min-height:auto}@media (max-width: 420px){.bottom-form__estimate-container[_ngcontent-%COMP%]{flex-direction:column}}.bottom-form__estimate-container[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{position:absolute;right:0;bottom:22px}@media (max-width: 420px){.bottom-form__estimate-container[_ngcontent-%COMP%]   app-tokens-rate[_ngcontent-%COMP%]{position:unset}}.bottom-form__settings[_ngcontent-%COMP%]{display:flex;grid-gap:16px}@media (max-width: 651px){.bottom-form__settings[_ngcontent-%COMP%]{flex-direction:column-reverse;grid-gap:8px;margin-bottom:16px}}.bottom-form__footer[_ngcontent-%COMP%]{margin-top:16px}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%]{margin-top:0;margin-left:12px}html.iframe-vertical[_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .bottom-form__footer[_ngcontent-%COMP%]{margin-top:30px;padding:0}@media (max-width: 651px){.bottom-form__footer[_ngcontent-%COMP%]{margin-top:0}}html.iframe-horizontal[_nghost-%COMP%]   .bottom-form__button[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .bottom-form__button[_ngcontent-%COMP%]{width:180px}app-target-network-address[_ngcontent-%COMP%]{display:block;margin-top:10px}app-swap-button-container[_ngcontent-%COMP%]  .wrapper{border:1px solid var(--transparent-line)!important}app-order-rate[_ngcontent-%COMP%]{display:block;flex-shrink:0;width:343px}@media (max-width: 651px){app-order-rate[_ngcontent-%COMP%]{width:100%}}app-expires-in[_ngcontent-%COMP%]{width:100%}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Qi = (() => {
          class n {
            constructor(t) {
              (this.elementRef = t),
                (this.amountChange = new e.EventEmitter()),
                (this.minAmount = 0.01),
                (this.maxAmount = 50),
                (this.decimals = 2),
                (this.amountRegex = /^([0-9]+\.?[0-9]*|[0-9]*\.?[0-9]+)?$/),
                (this.prevValue = ""),
                (this.prevCaretPosition = 0),
                (this.isFocused = !1);
            }
            onChange() {
              const t = this.elementRef.nativeElement.value || "";
              let i = t.replaceAll(",", ""),
                r = this.elementRef.nativeElement.selectionStart;
              t && "," === t[t.length - 1] && (i += "."),
                "." === i &&
                  ("" === this.prevValue
                    ? ((i = "0."), (r = 2))
                    : ((i = ""), (r = 0)));
              const s = Number(i);
              if (this.amountRegex.test(i)) {
                s >= this.maxAmount && (i = String(this.maxAmount));
                const c = i.split(".");
                c.length > 1 &&
                  c.at(-1).length > this.decimals &&
                  (i = i.slice(0, c.length + this.decimals)),
                  (r =
                    i === this.prevValue
                      ? this.prevCaretPosition
                      : this.getNewCaretPosition(i, r));
              } else (i = this.prevValue), (r = this.prevCaretPosition);
              (this.elementRef.nativeElement.value = i),
                this.isFocused &&
                  this.elementRef.nativeElement.setSelectionRange(r, r),
                this.amountChange.emit(Number(i)),
                (this.prevValue = i),
                (this.prevCaretPosition = r);
            }
            getNewCaretPosition(t, i) {
              const s =
                this.prevValue
                  .substring(0, i - (this.prevValue.length < t.length ? 1 : 0))
                  .split(",").length - 1;
              let l = i + (t.substring(0, i).split(",").length - 1 - s);
              return l && t.length && "," === t[l - 1] && l--, l;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(e.ElementRef));
            });
            static #t = (this.ɵdir = e.ɵɵdefineDirective({
              type: n,
              selectors: [["", "appCommaToPeriod", ""]],
              hostBindings: function (i, r) {
                1 & i &&
                  e.ɵɵlistener("ngModelChange", function () {
                    return r.onChange();
                  });
              },
              inputs: {
                minAmount: "minAmount",
                maxAmount: "maxAmount",
                decimals: "decimals",
              },
              outputs: { amountChange: "amountChange" },
            }));
          }
          return n;
        })();
      var Xt = p(95595);
      const $p = ["slippageInput"],
        Vp = function (n) {
          return { "settings__button-auto_active": n };
        },
        jp = function () {
          return { standalone: !0 };
        };
      let zp = (() => {
        class n {
          constructor(t) {
            (this.settingsService = t),
              (this.defaultSlippageTolerance =
                this.settingsService.defaultItSettings.slippageTolerance);
          }
          ngOnInit() {
            this.setForm();
          }
          setForm() {
            const t = this.settingsService.instantTradeValue;
            (this.instantTradeForm = new v.FormGroup({
              autoSlippageTolerance: new v.FormControl(t.autoSlippageTolerance),
              slippageTolerance: new v.FormControl(t.slippageTolerance),
              deadline: new v.FormControl(t.deadline),
              disableMultihops: new v.FormControl(t.disableMultihops),
              autoRefresh: new v.FormControl(t.autoRefresh),
              showReceiverAddress: new v.FormControl(t.showReceiverAddress),
            })),
              (this.slippageTolerance = t.slippageTolerance),
              this.setFormChanges();
          }
          setFormChanges() {
            this.instantTradeForm.valueChanges.subscribe((t) => {
              this.settingsService.instantTrade.patchValue({ ...t });
            }),
              this.settingsService.instantTradeValueChanges.subscribe((t) => {
                this.instantTradeForm.patchValue({ ...t }, { emitEvent: !1 }),
                  (this.slippageTolerance = t.slippageTolerance);
              });
          }
          toggleAutoSlippageTolerance() {
            this.instantTradeForm.value.autoSlippageTolerance
              ? this.instantTradeForm.patchValue({ autoSlippageTolerance: !1 })
              : ((this.slippageTolerance = this.defaultSlippageTolerance),
                this.instantTradeForm.patchValue({
                  autoSlippageTolerance: !0,
                  slippageTolerance: this.slippageTolerance,
                }));
          }
          onSlippageToleranceChange(t) {
            const i = Number(t);
            (this.slippageTolerance = i || this.defaultSlippageTolerance),
              this.instantTradeForm.patchValue({
                autoSlippageTolerance: !1,
                slippageTolerance: this.slippageTolerance,
              });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(ve));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-settings-it"]],
            viewQuery: function (i, r) {
              if ((1 & i && e.ɵɵviewQuery($p, 5), 2 & i)) {
                let s;
                e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                  (r.slippageInput = s.first);
              }
            },
            decls: 53,
            vars: 52,
            consts: [
              [1, "settings"],
              [1, "settings__form", 3, "formGroup"],
              [1, "settings__form-row", "settings__form-row_large-input"],
              [
                "tuiHintMode",
                "onDark",
                1,
                "settings__hint",
                3,
                "inlineSVG",
                "tuiHint",
              ],
              [1, "settings__form-row", "settings__form-row_united"],
              [1, "settings__button-auto", 3, "ngClass", "click"],
              [1, "settings__button-auto", 3, "click"],
              [1, "slippage-container"],
              [
                "appCommaToPeriod",
                "",
                3,
                "ngModel",
                "ngModelOptions",
                "tuiTextfieldLabelOutside",
                "tuiTextfieldSize",
                "minAmount",
                "amountChange",
              ],
              [1, "settings__form-row", "settings__form-row_small-input"],
              [1, "settings__form-row"],
              [
                "id",
                "deadline",
                "formControlName",
                "deadline",
                "decimal",
                "never",
                3,
                "tuiTextfieldLabelOutside",
                "max",
                "min",
                "tuiTextfieldSize",
              ],
              [
                "id",
                "disableMultihops",
                "formControlName",
                "disableMultihops",
                1,
                "settings__toggle",
              ],
              [
                "id",
                "autoRefresh",
                "formControlName",
                "autoRefresh",
                1,
                "settings__toggle",
              ],
              [
                "id",
                "showReceiverAddress",
                "formControlName",
                "showReceiverAddress",
                1,
                "settings__toggle",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0)(1, "form", 1)(2, "div", 2)(
                  3,
                  "label"
                ),
                e.ɵɵtext(4),
                e.ɵɵpipe(5, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(6, "div", 3),
                e.ɵɵpipe(7, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(8, "div", 4)(9, "div", 5),
                e.ɵɵlistener("click", function () {
                  return r.toggleAutoSlippageTolerance();
                }),
                e.ɵɵtext(10, " Auto "),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(11, "button", 6),
                e.ɵɵlistener("click", function () {
                  return r.onSlippageToleranceChange(0.1);
                }),
                e.ɵɵtext(12, "0.1"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(13, "button", 6),
                e.ɵɵlistener("click", function () {
                  return r.onSlippageToleranceChange(0.5);
                }),
                e.ɵɵtext(14, "0.5"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(15, "div", 7)(16, "input", 8),
                e.ɵɵlistener("amountChange", function (c) {
                  return r.onSlippageToleranceChange(c);
                }),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(17, "div"),
                e.ɵɵtext(18, "%"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(19, "span"),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(20, "div", 9)(21, "div", 10)(22, "label"),
                e.ɵɵtext(23),
                e.ɵɵpipe(24, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(25, "div", 3),
                e.ɵɵpipe(26, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(27, "tui-input-number", 11),
                e.ɵɵtext(28, "20 "),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(29, "span"),
                e.ɵɵtext(30),
                e.ɵɵpipe(31, "translate"),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(32, "div", 10)(33, "label"),
                e.ɵɵtext(34),
                e.ɵɵpipe(35, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(36, "div", 3),
                e.ɵɵpipe(37, "translate"),
                e.ɵɵelement(38, "tui-toggle", 12),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(39, "div", 10)(40, "label"),
                e.ɵɵtext(41),
                e.ɵɵpipe(42, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(43, "div", 3),
                e.ɵɵpipe(44, "translate"),
                e.ɵɵelement(45, "tui-toggle", 13),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(46, "div", 10)(47, "label"),
                e.ɵɵtext(48),
                e.ɵɵpipe(49, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelement(50, "div", 3),
                e.ɵɵpipe(51, "translate"),
                e.ɵɵelement(52, "tui-toggle", 14),
                e.ɵɵelementEnd()()()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("formGroup", r.instantTradeForm),
                  e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate(
                    e.ɵɵpipeBind1(5, 27, "settings.instantTrades.slippageTitle")
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(7, 29, "settings.instantTrades.slippage")
                  ),
                  e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(
                      49,
                      Vp,
                      r.instantTradeForm.value.autoSlippageTolerance
                    )
                  ),
                  e.ɵɵadvance(7),
                  e.ɵɵproperty("ngModel", r.slippageTolerance)(
                    "ngModelOptions",
                    e.ɵɵpureFunction0(51, jp)
                  )("tuiTextfieldLabelOutside", !0)("tuiTextfieldSize", "s")(
                    "minAmount",
                    0.01
                  ),
                  e.ɵɵadvance(7),
                  e.ɵɵtextInterpolate(
                    e.ɵɵpipeBind1(
                      24,
                      31,
                      "settings.instantTrades.deadlineTitle"
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(26, 33, "settings.instantTrades.deadline")
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("tuiTextfieldLabelOutside", !0)("max", 240)(
                    "min",
                    1
                  )("tuiTextfieldSize", "s"),
                  e.ɵɵadvance(3),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind1(31, 35, "common.minutes"),
                    ""
                  ),
                  e.ɵɵadvance(4),
                  e.ɵɵtextInterpolate(
                    e.ɵɵpipeBind1(
                      35,
                      37,
                      "settings.instantTrades.multihopsTitle"
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(37, 39, "settings.instantTrades.multihops")
                  ),
                  e.ɵɵadvance(5),
                  e.ɵɵtextInterpolate(
                    e.ɵɵpipeBind1(
                      42,
                      41,
                      "settings.instantTrades.autoRefreshTitle"
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(44, 43, "settings.instantTrades.autoRefresh")
                  ),
                  e.ɵɵadvance(5),
                  e.ɵɵtextInterpolate(
                    e.ɵɵpipeBind1(
                      49,
                      45,
                      "settings.instantTrades.showReceiverAddressTitle"
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                    "tuiHint",
                    e.ɵɵpipeBind1(
                      51,
                      47,
                      "settings.instantTrades.showReceiverAddress"
                    )
                  ));
            },
            dependencies: [
              m.mk,
              Qi,
              v.ɵNgNoValidate,
              v.DefaultValueAccessor,
              v.NgControlStatus,
              v.NgControlStatusGroup,
              v.FormGroupDirective,
              v.FormControlName,
              Xt.ph,
              ie,
              Ye,
              W.xT,
              W.sz,
              G.d$,
              H.D,
              v.NgModel,
              R.X$,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{color:var(--primary-text)}.slippage-container[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center;padding-right:22px;padding-left:12px}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;height:35px;text-align:right;background:transparent;border:none;border-radius:100px}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] ~ span[_ngcontent-%COMP%]{position:absolute;left:0;z-index:-1;width:100%;height:100%;border:1px solid var(--tui-base-03);border-radius:100px;transition:var(--tui-duration) ease-in-out}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ span[_ngcontent-%COMP%]{border:2px solid var(--tui-primary)}.settings[_ngcontent-%COMP%]{min-width:265px;max-width:320px;padding:20px}.settings__form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.settings__hint[_ngcontent-%COMP%]{height:15px;margin-right:auto;margin-left:6px;cursor:pointer}.settings__hint[_ngcontent-%COMP%]     svg path{fill:var(--secondary-text)}.settings__button-auto[_ngcontent-%COMP%]{display:flex;align-items:center;box-sizing:border-box;height:35px;margin-right:10px;padding:8px 15px;color:var(--primary-text);background:none;border:1px solid transparent;border-radius:20px;cursor:pointer}.settings__button-auto_active[_ngcontent-%COMP%]{color:var(--primary-text-invert);background:var(--primary-color)}.settings__toggle[_ngcontent-%COMP%]{margin-left:15px}@media (max-width: 420px){.settings__toggle[_ngcontent-%COMP%]{transform:scale(1.25)}}.settings__form-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;width:100%;margin-bottom:15px}.settings__form-row[_ngcontent-%COMP%]:last-child{margin-bottom:0}.settings__form-row[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:300;font-size:16px}.settings__form-row_united[_ngcontent-%COMP%]{flex-wrap:nowrap}.settings__form-row_united[_ngcontent-%COMP%]   tui-input-number[_ngcontent-%COMP%]{width:100%}.settings__form-row_small-input[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{width:60px}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{color:var(--primary-text);border-radius:100px;box-shadow:none}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input{padding-right:22px!important}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input, .settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input::placeholder{text-align:right}.settings[_ngcontent-%COMP%]     input+.content .placeholder{text-align:right}.settings[_ngcontent-%COMP%]     .wrapper{display:flex}.settings[_ngcontent-%COMP%]     .value-decoration{margin-left:auto}#deadline[_ngcontent-%COMP%] + span[_ngcontent-%COMP%]{margin-left:10px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      const Yp = function (n) {
          return { "settings__button-auto_active": n };
        },
        Up = function () {
          return { standalone: !0 };
        };
      let Wp = (() => {
          class n {
            constructor(t, i, r) {
              (this.settingsService = t),
                (this.targetNetworkAddressService = i),
                (this.destroy$ = r),
                (this.minimumSlippageTolerance = 3),
                (this.defaultSlippageTolerance =
                  this.settingsService.defaultCcrSettings.slippageTolerance);
            }
            ngOnInit() {
              this.setForm();
            }
            setForm() {
              const t = this.settingsService.crossChainRoutingValue;
              (this.crossChainRoutingForm = new v.FormGroup({
                autoSlippageTolerance: new v.FormControl(
                  t.autoSlippageTolerance
                ),
                slippageTolerance: new v.FormControl(t.slippageTolerance),
                showReceiverAddress: new v.FormControl(t.showReceiverAddress),
              })),
                (this.slippageTolerance = t.slippageTolerance),
                this.setFormChanges(),
                this.targetNetworkAddressService.isAddressRequired$
                  .pipe((0, P.R)(this.destroy$))
                  .subscribe((i) => {
                    i
                      ? this.crossChainRoutingForm.controls.showReceiverAddress.disable(
                          { emitEvent: !1 }
                        )
                      : this.crossChainRoutingForm.controls.showReceiverAddress.enable(
                          { emitEvent: !1 }
                        );
                  });
            }
            setFormChanges() {
              this.crossChainRoutingForm.valueChanges
                .pipe((0, P.R)(this.destroy$))
                .subscribe((t) => {
                  this.settingsService.crossChainRouting.patchValue({ ...t });
                }),
                this.settingsService.crossChainRoutingValueChanges
                  .pipe((0, P.R)(this.destroy$))
                  .subscribe((t) => {
                    this.crossChainRoutingForm.patchValue(
                      { ...t },
                      { emitEvent: !1 }
                    ),
                      (this.slippageTolerance = t.slippageTolerance);
                  });
            }
            toggleAutoSlippageTolerance() {
              this.crossChainRoutingForm.value.autoSlippageTolerance
                ? this.crossChainRoutingForm.patchValue({
                    autoSlippageTolerance: !1,
                  })
                : ((this.slippageTolerance = this.defaultSlippageTolerance),
                  this.crossChainRoutingForm.patchValue({
                    autoSlippageTolerance: !0,
                    slippageTolerance: this.slippageTolerance,
                  }));
            }
            onSlippageToleranceChange(t) {
              (this.slippageTolerance =
                t < this.minimumSlippageTolerance
                  ? this.minimumSlippageTolerance
                  : t),
                this.crossChainRoutingForm.patchValue({
                  autoSlippageTolerance: !1,
                  slippageTolerance: this.slippageTolerance,
                });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(ve),
                e.ɵɵdirectiveInject(Oe),
                e.ɵɵdirectiveInject(w.a3, 2)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-settings-ccr"]],
              features: [e.ɵɵProvidersFeature([w.a3])],
              decls: 27,
              vars: 24,
              consts: [
                [1, "settings"],
                [1, "settings__form", 3, "formGroup"],
                [1, "settings__form-row", "settings__form-row_large-input"],
                [
                  "tuiHintMode",
                  "onDark",
                  1,
                  "settings__hint",
                  3,
                  "inlineSVG",
                  "tuiHint",
                ],
                [1, "settings__form-row", "settings__form-row_united"],
                [1, "settings__button-auto", 3, "ngClass", "click"],
                [1, "settings__button-auto", 3, "click"],
                [1, "slippage-container"],
                [
                  "appCommaToPeriod",
                  "",
                  3,
                  "ngModel",
                  "ngModelOptions",
                  "tuiTextfieldLabelOutside",
                  "tuiTextfieldSize",
                  "minAmount",
                  "amountChange",
                ],
                [1, "settings__form-row"],
                [
                  "id",
                  "showReceiverAddress",
                  "formControlName",
                  "showReceiverAddress",
                  1,
                  "settings__toggle",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "div", 0)(1, "form", 1)(2, "div", 2)(
                    3,
                    "label"
                  ),
                  e.ɵɵtext(4),
                  e.ɵɵpipe(5, "translate"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelement(6, "div", 3),
                  e.ɵɵpipe(7, "translate"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(8, "div", 4)(9, "div", 5),
                  e.ɵɵlistener("click", function () {
                    return r.toggleAutoSlippageTolerance();
                  }),
                  e.ɵɵtext(10, " Auto "),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(11, "button", 6),
                  e.ɵɵlistener("click", function () {
                    return r.onSlippageToleranceChange(3);
                  }),
                  e.ɵɵtext(12, "3"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(13, "button", 6),
                  e.ɵɵlistener("click", function () {
                    return r.onSlippageToleranceChange(5);
                  }),
                  e.ɵɵtext(14, "5"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(15, "div", 7)(16, "input", 8),
                  e.ɵɵlistener("amountChange", function (c) {
                    return r.onSlippageToleranceChange(c);
                  }),
                  e.ɵɵelementEnd(),
                  e.ɵɵelementStart(17, "div"),
                  e.ɵɵtext(18, "%"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelement(19, "span"),
                  e.ɵɵelementEnd()(),
                  e.ɵɵelementStart(20, "div", 9)(21, "label"),
                  e.ɵɵtext(22),
                  e.ɵɵpipe(23, "translate"),
                  e.ɵɵelementEnd(),
                  e.ɵɵelement(24, "div", 3),
                  e.ɵɵpipe(25, "translate"),
                  e.ɵɵelement(26, "tui-toggle", 10),
                  e.ɵɵelementEnd()()()),
                  2 & i &&
                    (e.ɵɵadvance(1),
                    e.ɵɵproperty("formGroup", r.crossChainRoutingForm),
                    e.ɵɵadvance(3),
                    e.ɵɵtextInterpolate(
                      e.ɵɵpipeBind1(
                        5,
                        13,
                        "settings.crossChainRouting.slippageTitle"
                      )
                    ),
                    e.ɵɵadvance(2),
                    e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                      "tuiHint",
                      e.ɵɵpipeBind1(
                        7,
                        15,
                        "settings.crossChainRouting.slippage"
                      )
                    ),
                    e.ɵɵadvance(3),
                    e.ɵɵproperty(
                      "ngClass",
                      e.ɵɵpureFunction1(
                        21,
                        Yp,
                        r.crossChainRoutingForm.value.autoSlippageTolerance
                      )
                    ),
                    e.ɵɵadvance(7),
                    e.ɵɵproperty("ngModel", r.slippageTolerance)(
                      "ngModelOptions",
                      e.ɵɵpureFunction0(23, Up)
                    )("tuiTextfieldLabelOutside", !0)("tuiTextfieldSize", "s")(
                      "minAmount",
                      r.minimumSlippageTolerance
                    ),
                    e.ɵɵadvance(6),
                    e.ɵɵtextInterpolate(
                      e.ɵɵpipeBind1(
                        23,
                        17,
                        "settings.crossChainRouting.showReceiverAddressTitle"
                      )
                    ),
                    e.ɵɵadvance(2),
                    e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
                      "tuiHint",
                      e.ɵɵpipeBind1(
                        25,
                        19,
                        "settings.crossChainRouting.showReceiverAddress"
                      )
                    ));
              },
              dependencies: [
                m.mk,
                Qi,
                v.ɵNgNoValidate,
                v.DefaultValueAccessor,
                v.NgControlStatus,
                v.NgControlStatusGroup,
                v.FormGroupDirective,
                v.FormControlName,
                Xt.ph,
                W.xT,
                W.sz,
                G.d$,
                H.D,
                v.NgModel,
                R.X$,
              ],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.slippage-container[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center;padding-right:22px;padding-left:12px}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;height:35px;text-align:right;background:transparent;border:none;border-radius:100px}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] ~ span[_ngcontent-%COMP%]{position:absolute;left:0;z-index:-1;width:100%;height:100%;border:1px solid var(--tui-base-03);border-radius:100px;transition:var(--tui-duration) ease-in-out}.slippage-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus ~ span[_ngcontent-%COMP%]{border:2px solid var(--tui-primary)}[_nghost-%COMP%]{color:var(--primary-text)}.settings[_ngcontent-%COMP%]{min-width:265px;max-width:320px;padding:20px}.settings__form[_ngcontent-%COMP%]{display:flex;flex-direction:column}.settings__hint[_ngcontent-%COMP%]{height:15px;margin-right:auto;margin-left:6px;cursor:pointer}.settings__hint[_ngcontent-%COMP%]     svg path{fill:var(--secondary-text)}.settings__button-auto[_ngcontent-%COMP%]{display:flex;align-items:center;box-sizing:border-box;height:35px;margin-right:10px;padding:8px 15px;color:var(--primary-text);background:none;border:1px solid transparent;border-radius:20px;cursor:pointer}.settings__button-auto_active[_ngcontent-%COMP%]{color:var(--primary-text-invert);background:var(--primary-color)}.settings__toggle[_ngcontent-%COMP%]{margin-left:15px}@media (max-width: 420px){.settings__toggle[_ngcontent-%COMP%]{transform:scale(1.25)}}.settings__form-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;width:100%;margin-bottom:15px}.settings__form-row[_ngcontent-%COMP%]:last-child{margin-bottom:0}.settings__form-row[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-weight:300;font-size:16px}.settings__form-row_united[_ngcontent-%COMP%]{flex-wrap:nowrap}.settings__form-row_united[_ngcontent-%COMP%]   tui-input-number[_ngcontent-%COMP%]{width:100%}.settings__form-row_small-input[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{width:80px}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{color:var(--primary-text);border-radius:100px;box-shadow:none}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input{padding-right:22px!important}.settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input, .settings[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input::placeholder{text-align:right}.settings[_ngcontent-%COMP%]     input+.content .placeholder{text-align:right}.settings[_ngcontent-%COMP%]     .wrapper{display:flex}.settings[_ngcontent-%COMP%]     .value-decoration{margin-left:auto}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        Gp = (() => {
          class n {
            constructor(t, i) {
              (this.swapService = t),
                (this.swapFormService = i),
                (this.open = !1);
            }
            ngOnInit() {
              (this.settingsComponent = this.getSettingsComponent()),
                this.swapFormService.form.valueChanges.subscribe(() => {
                  this.prevMode !== this.swapService.swapMode &&
                    (this.settingsComponent = this.getSettingsComponent()),
                    (this.prevMode = this.swapService.swapMode);
                });
            }
            getSettingsComponent() {
              let t;
              return (
                (t = this.swapService.swapMode === S.V.INSTANT_TRADE ? zp : Wp),
                new L.Al(t)
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(ae.H),
                e.ɵɵdirectiveInject(E.q)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-settings-container"]],
              decls: 4,
              vars: 3,
              consts: [
                [
                  "tuiDropdownDirection",
                  "bottom",
                  3,
                  "content",
                  "open",
                  "tuiDropdownMinHeight",
                  "openChange",
                ],
                [
                  "xmlns",
                  "http://www.w3.org/2000/svg",
                  "width",
                  "20",
                  "height",
                  "20",
                  "viewBox",
                  "0 0 24 24",
                  "fill",
                  "none",
                  "stroke",
                  "#843DF8",
                  "stroke-width",
                  "2",
                  "stroke-linecap",
                  "round",
                  "stroke-linejoin",
                  "round",
                  1,
                  "sc-1ndknrv-0",
                  "jOzOFq",
                ],
                ["cx", "12", "cy", "12", "r", "3"],
                [
                  "d",
                  "M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "tui-hosted-dropdown", 0),
                  e.ɵɵlistener("openChange", function (c) {
                    return (r.open = c);
                  }),
                  e.ɵɵnamespaceSVG(),
                  e.ɵɵelementStart(1, "svg", 1),
                  e.ɵɵelement(2, "circle", 2)(3, "path", 3),
                  e.ɵɵelementEnd()()),
                  2 & i &&
                    e.ɵɵproperty("content", r.settingsComponent)(
                      "open",
                      r.open
                    )("tuiDropdownMinHeight", 0);
              },
              dependencies: [St.o1, Tt.Sw],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}@media (max-width: 651px){body.hide-unused-ui   [_nghost-%COMP%]{position:initial!important}}tui-hosted-dropdown[_ngcontent-%COMP%]     .wrapper{display:flex;align-items:center}img[_ngcontent-%COMP%]{filter:grayscale(1)}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      var Kp = p(11481);
      const Xp = {
        protocolFee: {
          label: "Protocol fee",
          description: "Selenion AI protocol commission fee",
        },
        networkFee: {
          label: "Network fee",
          description: "Provider fee to proceed swap in target network",
        },
        priceImpact: {
          label: "Price impact",
          description:
            "Correlation between an incoming order and the change in the price of the asset involved caused by the trade",
        },
        slippage: {
          label: "Slippage",
          description:
            "Your transaction will be canceled if the price changes unfavorably by more than the entered percentage (a lower percentage decreases the chances of your transaction being front-run)",
        },
        rate: {
          label: "Rate",
          description: "Selenion AI protocol commission fee",
        },
        route: {
          label: "Route",
          description: "Selenion AI protocol commission fee",
        },
        receiver: {
          label: "Receiver address",
          description: "Selenion AI protocol commission fee",
        },
        minReceived: {
          label: "Minimum Received",
          description:
            "Minimum amount of tokens you will receive in target blockchain. Depends on slippage",
        },
      };
      var Zp = p(11826);
      const Qp = ["*"];
      let Jp = (() => {
        class n {
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-transaction-details-element"]],
            inputs: { title: "title", description: "description" },
            ngContentSelectors: Qp,
            decls: 6,
            vars: 3,
            consts: [
              [1, "details-element"],
              [1, "details-element__title"],
              [
                "src",
                "assets/images/swaps/swaps-info/question-icon.svg",
                1,
                "details-element__icon",
                3,
                "alt",
                "tuiHint",
              ],
              [1, "details-element__value"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵprojectionDef(),
                e.ɵɵelementStart(0, "div", 0)(1, "span", 1),
                e.ɵɵtext(2),
                e.ɵɵelementEnd(),
                e.ɵɵelement(3, "img", 2),
                e.ɵɵelementStart(4, "div", 3),
                e.ɵɵprojection(5),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(2),
                  e.ɵɵtextInterpolate(r.title),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("alt", r.title)("tuiHint", r.description));
            },
            dependencies: [H.D],
            styles: [
              ".details-element[_ngcontent-%COMP%]{display:flex;align-items:center;font-size:16px}.details-element__value[_ngcontent-%COMP%]{margin-left:auto}.details-element__icon[_ngcontent-%COMP%]{width:18px;height:18px;margin-left:10px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function qp(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              "",
              null == t.fee || null == t.fee.platformFee
                ? null
                : t.fee.platformFee.percent,
              "%"
            );
        }
      }
      function ed(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1, "\xa0+\xa0\n"),
          e.ɵɵelementContainerEnd());
      }
      function td(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              " ",
              e.ɵɵpipeBind2(
                2,
                2,
                e.ɵɵpipeBind1(
                  3,
                  5,
                  null == t.fee || null == t.fee.fixedFee
                    ? null
                    : t.fee.fixedFee.amount
                ),
                "toClosestValue"
              ),
              "\xa0 ",
              null == t.fee || null == t.fee.fixedFee
                ? null
                : t.fee.fixedFee.tokenSymbol,
              "\n"
            );
        }
      }
      function nd(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1, " No charge\n"),
          e.ɵɵelementContainerEnd());
      }
      let id = (() => {
        class n {
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-rubic-fee-value"]],
            inputs: { fee: "fee" },
            decls: 4,
            vars: 4,
            consts: [[4, "ngIf"]],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, qp, 2, 1, "ng-container", 0),
                e.ɵɵtemplate(1, ed, 2, 0, "ng-container", 0),
                e.ɵɵtemplate(2, td, 4, 7, "ng-container", 0),
                e.ɵɵtemplate(3, nd, 2, 0, "ng-container", 0)),
                2 & i &&
                  (e.ɵɵproperty(
                    "ngIf",
                    null == r.fee || null == r.fee.platformFee
                      ? null
                      : r.fee.platformFee.percent
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    (null == r.fee || null == r.fee.platformFee
                      ? null
                      : r.fee.platformFee.percent) &&
                      (null == r.fee ||
                      null == r.fee.fixedFee ||
                      null == r.fee.fixedFee.amount
                        ? null
                        : r.fee.fixedFee.amount.gt(0))
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.fee ||
                      null == r.fee.fixedFee ||
                      null == r.fee.fixedFee.amount
                      ? null
                      : r.fee.fixedFee.amount.gt(0)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    !(
                      (null != r.fee &&
                        null != r.fee.platformFee &&
                        r.fee.platformFee.percent) ||
                      (null != r.fee &&
                        null != r.fee.fixedFee &&
                        null != r.fee.fixedFee.amount &&
                        r.fee.fixedFee.amount.gt(0))
                    )
                  ));
            },
            dependencies: [m.O5, be.N, ye.f],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function rd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              null == t.fee || null == t.fee.platformFee
                ? null
                : t.fee.platformFee.percent,
              "% "
            );
        }
      }
      function od(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1, "\xa0+\xa0\n"),
          e.ɵɵelementContainerEnd());
      }
      function ad(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "withRound"),
            e.ɵɵpipe(3, "bigNumberFormat"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              " ",
              e.ɵɵpipeBind2(
                2,
                2,
                e.ɵɵpipeBind1(
                  3,
                  5,
                  null == t.fee || null == t.fee.cryptoFee
                    ? null
                    : t.fee.cryptoFee.amount
                ),
                "toClosestValue"
              ),
              "\xa0 ",
              null == t.fee || null == t.fee.cryptoFee
                ? null
                : t.fee.cryptoFee.tokenSymbol,
              "\n"
            );
        }
      }
      function sd(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵtext(1, " No charge\n"),
          e.ɵɵelementContainerEnd());
      }
      let cd = (() => {
        class n {
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-provider-fee-value"]],
            inputs: { fee: "fee" },
            decls: 4,
            vars: 4,
            consts: [[4, "ngIf"]],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, rd, 2, 1, "ng-container", 0),
                e.ɵɵtemplate(1, od, 2, 0, "ng-container", 0),
                e.ɵɵtemplate(2, ad, 4, 7, "ng-container", 0),
                e.ɵɵtemplate(3, sd, 2, 0, "ng-container", 0)),
                2 & i &&
                  (e.ɵɵproperty(
                    "ngIf",
                    null == r.fee || null == r.fee.platformFee
                      ? null
                      : r.fee.platformFee.percent
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    (null == r.fee || null == r.fee.platformFee
                      ? null
                      : r.fee.platformFee.percent) &&
                      (null == r.fee || null == r.fee.cryptoFee
                        ? null
                        : r.fee.cryptoFee.amount.isFinite())
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.fee ||
                      null == r.fee.cryptoFee ||
                      null == r.fee.cryptoFee.amount
                      ? null
                      : r.fee.cryptoFee.amount.gt(0)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    !(
                      (null != r.fee &&
                        null != r.fee.platformFee &&
                        r.fee.platformFee.percent) ||
                      (null != r.fee &&
                        null != r.fee.cryptoFee &&
                        null != r.fee.cryptoFee.amount &&
                        r.fee.cryptoFee.amount.gt(0))
                    )
                  ));
            },
            dependencies: [m.O5, be.N, ye.f],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var Zt = (() => {
        return (
          ((n = Zt || (Zt = {}))[(n.LOW = 0.02)] = "LOW"),
          (n[(n.MEDIUM = 20)] = "MEDIUM"),
          (n[(n.HIGH = 30)] = "HIGH"),
          Zt
        );
        var n;
      })();
      const ld = function (n, a, t) {
        return {
          "price-impact_good": n,
          "price-impact_warning": a,
          "price-impact_danger": t,
        };
      };
      function pd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 2), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "ngClass",
            e.ɵɵpureFunction3(
              2,
              ld,
              t.priceImpact < t.PRICE_IMPACT_RANGE.LOW,
              t.priceImpact >= t.PRICE_IMPACT_RANGE.MEDIUM &&
                t.priceImpact < t.PRICE_IMPACT_RANGE.HIGH,
              t.priceImpact >= t.PRICE_IMPACT_RANGE.HIGH
            )
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t.priceImpact < t.PRICE_IMPACT_RANGE.LOW
                ? "<0.01"
                : t.priceImpact,
              "%\n"
            );
        }
      }
      function dd(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 3),
          e.ɵɵtext(1, " Price impact is unknown "),
          e.ɵɵelement(2, "img", 4),
          e.ɵɵelementEnd());
      }
      let md = (() => {
          class n {
            constructor() {
              this.PRICE_IMPACT_RANGE = Zt;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-price-impact-value"]],
              inputs: { priceImpact: "priceImpact" },
              decls: 3,
              vars: 2,
              consts: [
                ["class", "price-impact", 3, "ngClass", 4, "ngIf", "ngIfElse"],
                ["noImpact", ""],
                [1, "price-impact", 3, "ngClass"],
                [1, "price-impact", "price-impact_warning"],
                [
                  "src",
                  "assets/images/swaps/swaps-info/warning-icon.svg",
                  "alt",
                  "Warning",
                  1,
                  "price-impact__icon",
                ],
              ],
              template: function (i, r) {
                if (
                  (1 & i &&
                    (e.ɵɵtemplate(0, pd, 2, 6, "div", 0),
                    e.ɵɵtemplate(
                      1,
                      dd,
                      3,
                      0,
                      "ng-template",
                      null,
                      1,
                      e.ɵɵtemplateRefExtractor
                    )),
                  2 & i)
                ) {
                  const s = e.ɵɵreference(2);
                  e.ɵɵproperty("ngIf", null !== r.priceImpact)("ngIfElse", s);
                }
              },
              dependencies: [m.mk, m.O5],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.price-impact[_ngcontent-%COMP%]{display:flex;align-items:center}.price-impact__icon[_ngcontent-%COMP%]{width:18px;height:18px;margin-left:10px}.price-impact_good[_ngcontent-%COMP%]{color:var(--primary-color)}.price-impact_warning[_ngcontent-%COMP%]{color:#f3ba2f}.price-impact_danger[_ngcontent-%COMP%]{color:#e83e3f}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        _d = (() => {
          class n {
            constructor(t, i, r) {
              (this.withRoundPipe = t),
                (this.bigNumberFormatPipe = i),
                (this.cdr = r),
                (this.rateType = "fromTokenRate");
            }
            set trade(t) {
              (this._trade = t), (this.rate = t ? this.getRate() : "");
            }
            switchRateType() {
              (this.rateType =
                "fromTokenRate" === this.rateType
                  ? "toTokenRate"
                  : "fromTokenRate"),
                (this.rate = this.getRate()),
                this.cdr.detectChanges();
            }
            getRate() {
              const t = this._trade.from,
                i = this._trade.to;
              if (!t.tokenAmount?.isFinite() || !i.tokenAmount?.isFinite())
                return "";
              if ("fromTokenRate" === this.rateType) {
                const s = this.withRoundPipe.transform(
                  this.bigNumberFormatPipe.transform(
                    i.tokenAmount.dividedBy(t.tokenAmount)
                  ),
                  "toClosestValue",
                  { decimals: i.decimals }
                );
                return `1 ${t.symbol} = ${s} ${i.symbol}`;
              }
              return `${this.withRoundPipe.transform(
                this.bigNumberFormatPipe.transform(
                  t.tokenAmount.dividedBy(i.tokenAmount)
                ),
                "toClosestValue",
                { decimals: t.decimals }
              )} ${t.symbol} = 1 ${i.symbol}`;
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵdirectiveInject(ye.f),
                e.ɵɵdirectiveInject(be.N),
                e.ɵɵdirectiveInject(e.ChangeDetectorRef)
              );
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-rate-value"]],
              inputs: { trade: "trade" },
              decls: 3,
              vars: 1,
              consts: [
                [1, "rate-switcher", 3, "click"],
                [
                  "src",
                  "assets/images/swaps/swaps-info/arrows-on-change-icon.svg",
                  "alt",
                  "change rate order",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵtext(0),
                  e.ɵɵelementStart(1, "button", 0),
                  e.ɵɵlistener("click", function () {
                    return r.switchRateType();
                  }),
                  e.ɵɵelement(2, "img", 1),
                  e.ɵɵelementEnd()),
                  2 & i && e.ɵɵtextInterpolate1("", r.rate, "\n");
              },
              styles: [
                "[_nghost-%COMP%]{display:flex;align-items:center}.rate-switcher[_ngcontent-%COMP%]{display:flex;width:18px;height:18px;margin-left:10px}.rate-switcher[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      class ud {
        constructor(a, t) {
          this._document = t;
          const i = (this._textarea = this._document.createElement("textarea")),
            r = i.style;
          (r.position = "fixed"),
            (r.top = r.opacity = "0"),
            (r.left = "-999em"),
            i.setAttribute("aria-hidden", "true"),
            (i.value = a),
            (i.readOnly = !0),
            this._document.body.appendChild(i);
        }
        copy() {
          const a = this._textarea;
          let t = !1;
          try {
            if (a) {
              const i = this._document.activeElement;
              a.select(),
                a.setSelectionRange(0, a.value.length),
                (t = this._document.execCommand("copy")),
                i && i.focus();
            }
          } catch {}
          return t;
        }
        destroy() {
          const a = this._textarea;
          a && (a.remove(), (this._textarea = void 0));
        }
      }
      let gd = (() => {
        class n {
          constructor(t) {
            this._document = t;
          }
          copy(t) {
            const i = this.beginCopy(t),
              r = i.copy();
            return i.destroy(), r;
          }
          beginCopy(t) {
            return new ud(t, this._document);
          }
        }
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(e.ɵɵinject(m.K0));
          }),
          (n.ɵprov = e.ɵɵdefineInjectable({
            token: n,
            factory: n.ɵfac,
            providedIn: "root",
          })),
          n
        );
      })();
      const hd = new e.InjectionToken("CDK_COPY_TO_CLIPBOARD_CONFIG");
      let Ji = (() => {
          class n {
            constructor(t, i, r) {
              (this._clipboard = t),
                (this._ngZone = i),
                (this.text = ""),
                (this.attempts = 1),
                (this.copied = new e.EventEmitter()),
                (this._pending = new Set()),
                r && null != r.attempts && (this.attempts = r.attempts);
            }
            copy(t = this.attempts) {
              if (t > 1) {
                let i = t;
                const r = this._clipboard.beginCopy(this.text);
                this._pending.add(r);
                const s = () => {
                  const c = r.copy();
                  c || !--i || this._destroyed
                    ? ((this._currentTimeout = null),
                      this._pending.delete(r),
                      r.destroy(),
                      this.copied.emit(c))
                    : (this._currentTimeout = this._ngZone.runOutsideAngular(
                        () => setTimeout(s, 1)
                      ));
                };
                s();
              } else this.copied.emit(this._clipboard.copy(this.text));
            }
            ngOnDestroy() {
              this._currentTimeout && clearTimeout(this._currentTimeout),
                this._pending.forEach((t) => t.destroy()),
                this._pending.clear(),
                (this._destroyed = !0);
            }
          }
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                e.ɵɵdirectiveInject(gd),
                e.ɵɵdirectiveInject(e.NgZone),
                e.ɵɵdirectiveInject(hd, 8)
              );
            }),
            (n.ɵdir = e.ɵɵdefineDirective({
              type: n,
              selectors: [["", "cdkCopyToClipboard", ""]],
              hostBindings: function (t, i) {
                1 & t &&
                  e.ɵɵlistener("click", function () {
                    return i.copy();
                  });
              },
              inputs: {
                text: ["cdkCopyToClipboard", "text"],
                attempts: ["cdkCopyToClipboardAttempts", "attempts"],
              },
              outputs: { copied: "cdkCopyToClipboardCopied" },
            })),
            n
          );
        })(),
        fd = (() => {
          class n {}
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({})),
            n
          );
        })();
      var vd = p(27194);
      function Cd(n, a) {
        1 & n && e.ɵɵelement(0, "img", 6);
      }
      function xd(n, a) {
        1 & n && e.ɵɵelement(0, "img", 7);
      }
      let bd = (() => {
        class n {
          constructor(t) {
            (this.cdr = t),
              (this.isWalletCopied = !1),
              (this.ADDRESS_TYPE = bi.Z);
          }
          handleCopyClick() {
            (this.isWalletCopied = !0),
              setTimeout(() => {
                (this.isWalletCopied = !1), this.cdr.markForCheck();
              }, 700);
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(e.ChangeDetectorRef));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-receiver-value"]],
            inputs: {
              toWalletAddress: "toWalletAddress",
              toBlockchain: "toBlockchain",
            },
            decls: 10,
            vars: 16,
            consts: [
              [1, "receiver"],
              [3, "safetyLink"],
              ["src", "assets/images/icons/scanner.svg", 3, "alt"],
              [3, "cdkCopyToClipboard", "cdkCopyToClipboardCopied"],
              [
                "src",
                "assets/images/swaps/swaps-info/copy-icon.svg",
                "alt",
                "Copy",
                4,
                "ngIf",
              ],
              [
                "src",
                "assets/images/swaps/swaps-info/tick.svg",
                "alt",
                "Copied",
                4,
                "ngIf",
              ],
              [
                "src",
                "assets/images/swaps/swaps-info/copy-icon.svg",
                "alt",
                "Copy",
              ],
              [
                "src",
                "assets/images/swaps/swaps-info/tick.svg",
                "alt",
                "Copied",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div", 0),
                e.ɵɵtext(1),
                e.ɵɵpipe(2, "shortAddress"),
                e.ɵɵelementStart(3, "a", 1),
                e.ɵɵpipe(4, "scannerLink"),
                e.ɵɵelement(5, "img", 2),
                e.ɵɵpipe(6, "translate"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(7, "button", 3),
                e.ɵɵlistener("cdkCopyToClipboardCopied", function () {
                  return r.handleCopyClick();
                }),
                e.ɵɵtemplate(8, Cd, 1, 0, "img", 4),
                e.ɵɵtemplate(9, xd, 1, 0, "img", 5),
                e.ɵɵelementEnd()()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵtextInterpolate1(
                    " ",
                    e.ɵɵpipeBind3(2, 6, r.toWalletAddress, 5, 5),
                    " "
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "safetyLink",
                    e.ɵɵpipeBind3(
                      4,
                      10,
                      r.toWalletAddress,
                      r.toBlockchain,
                      r.ADDRESS_TYPE.WALLET
                    )
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty(
                    "alt",
                    e.ɵɵpipeBind1(6, 14, "common.checkOnScanner")
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("cdkCopyToClipboard", r.toWalletAddress),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.isWalletCopied),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.isWalletCopied));
            },
            dependencies: [m.O5, dn.x, Ji, yi.m, R.X$, vd.Y],
            styles: [
              ".receiver[_ngcontent-%COMP%]{display:flex;align-items:center}.receiver[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{display:flex;align-items:center}.receiver[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:18px;height:100%;margin-left:10px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function yd(n, a) {
        if ((1 & n && e.ɵɵelement(0, "img", 10), 2 & n)) {
          const t = e.ɵɵnextContext().$implicit;
          e.ɵɵproperty("alt", t);
        }
      }
      function Sd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1),
            e.ɵɵtemplate(2, yd, 1, 1, "img", 9),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.$implicit,
            i = a.index,
            r = e.ɵɵnextContext().ngLet;
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", t, " "),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              i !== (null == r || null == r.route ? null : r.route.length) - 1
            );
        }
      }
      function Td(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 1)(
              1,
              "app-transaction-details-element",
              2
            ),
            e.ɵɵelement(2, "app-rubic-fee-value", 3),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "app-transaction-details-element", 2),
            e.ɵɵelement(4, "app-provider-fee-value", 3),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "app-transaction-details-element", 2),
            e.ɵɵelement(6, "app-price-impact-value", 4),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(7, "app-transaction-details-element", 2),
            e.ɵɵtext(8),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "app-transaction-details-element", 2),
            e.ɵɵtext(10),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(11, "app-transaction-details-element", 2),
            e.ɵɵelement(12, "app-rate-value", 5),
            e.ɵɵpipe(13, "async"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(14, "app-transaction-details-element", 2)(
              15,
              "div",
              6
            ),
            e.ɵɵtemplate(16, Sd, 3, 2, "ng-container", 7),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(17, "app-transaction-details-element", 2),
            e.ɵɵelement(18, "app-receiver-value", 8),
            e.ɵɵpipe(19, "async"),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.protocolFee.label)(
              "description",
              i.text.protocolFee.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "fee",
              null == t || null == t.feeInfo ? null : t.feeInfo.rubicProxy
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.networkFee.label)(
              "description",
              i.text.networkFee.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "fee",
              null == t || null == t.feeInfo ? null : t.feeInfo.provider
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.priceImpact.label)(
              "description",
              i.text.priceImpact.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("priceImpact", null == t ? null : t.priceImpact),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.slippage.label)(
              "description",
              i.text.slippage.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", null == t ? null : t.slippage, "% "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.minReceived.label)(
              "description",
              i.text.minReceived.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", null == t ? null : t.minReceived, " "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.rate.label)(
              "description",
              i.text.rate.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("trade", e.ɵɵpipeBind1(13, 25, i.trade$)),
            e.ɵɵadvance(2),
            e.ɵɵproperty("title", i.text.route.label)(
              "description",
              i.text.route.description
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngForOf", null == t ? null : t.route),
            e.ɵɵadvance(1),
            e.ɵɵproperty("title", i.text.receiver.label)(
              "description",
              i.text.receiver.description
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "toWalletAddress",
              (null == t ? null : t.receiverAddress) || ""
            )("toBlockchain", e.ɵɵpipeBind1(19, 27, i.toBlockchain$));
        }
      }
      let Od = (() => {
        class n {
          constructor(t, i, r, s, c, l) {
            (this.swapModeService = t),
              (this.crossChainFormService = i),
              (this.swapFormService = r),
              (this.targetNetworkAddressService = s),
              (this.walletConnectorService = c),
              (this.withRoundPipe = l),
              (this._currentOnChainTrade$ = new A.X(void 0)),
              (this.text = Xp),
              (this.currentOnChainTrade$ =
                this._currentOnChainTrade$.asObservable()),
              (this.trade$ = this.swapFormService.outputValue$.pipe(
                ki(this.currentOnChainTrade$),
                (0, Ve.b)(0),
                (0, x.U)(() => this.getTrade(this.swapModeService.swapMode)),
                (0, ce.x)()
              )),
              (this.toBlockchain$ = this.trade$.pipe(
                (0, x.U)((d) => d?.to?.blockchain)
              )),
              (this.tradeData$ = this.trade$.pipe(
                (0, x.U)((d) => this.transformTrade(d))
              ));
          }
          set currentOnChainTrade(t) {
            this._currentOnChainTrade$.next(t);
          }
          getTrade(t) {
            return t === S.V.CROSS_CHAIN_ROUTING
              ? this.crossChainFormService?.selectedTrade?.trade
              : t === S.V.INSTANT_TRADE
              ? this._currentOnChainTrade$.value
              : void 0;
          }
          transformTrade(t) {
            const i = t?.getTradeInfo();
            if ((console.log("trandeInfo", i), !i)) return null;
            const r =
                t instanceof o.OnChainTrade
                  ? t.path.map((_) => _.symbol)
                  : [
                      xt.getRoute(t.onChainSubtype.from, t.bridgeType),
                      xt.getRoute(t.bridgeType, t.bridgeType),
                      xt.getRoute(t.onChainSubtype.to, t.bridgeType),
                    ].map((_) => _.name),
              s =
                this.targetNetworkAddressService.address ||
                this.walletConnectorService.address,
              l = `${this.withRoundPipe.transform(
                (0, Zp.d)(
                  t instanceof o.OnChainTrade
                    ? t.toTokenAmountMin.tokenAmount
                    : t.toTokenAmountMin
                ),
                "toClosestValue",
                { decimals: t.to.decimals }
              )} ${t.to.symbol}`;
            return (
              console.log(
                JSON.stringify(
                  {
                    feeInfo: t.feeInfo,
                    priceImpact: i.priceImpact,
                    slippage: i.slippage,
                    route: r,
                    receiverAddress: s,
                    minReceived: l,
                  },
                  null,
                  2
                )
              ),
              this.swapFormService.changeSwapStats({
                feeInfo: t.feeInfo,
                priceImpact: i.priceImpact,
                slippage: i.slippage,
                route: r,
                receiverAddress: s,
                minReceived: l,
              }),
              {
                feeInfo: t.feeInfo,
                priceImpact: i.priceImpact,
                slippage: i.slippage,
                route: r,
                receiverAddress: s,
                minReceived: l,
              }
            );
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(ae.H),
              e.ɵɵdirectiveInject(ot),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(Oe),
              e.ɵɵdirectiveInject($e.j),
              e.ɵɵdirectiveInject(ye.f)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-transaction-details"]],
            inputs: { currentOnChainTrade: "currentOnChainTrade" },
            decls: 2,
            vars: 3,
            consts: [
              ["class", "transaction-details", 4, "ngLet"],
              [1, "transaction-details"],
              [3, "title", "description"],
              [3, "fee"],
              [3, "priceImpact"],
              [3, "trade"],
              [1, "transaction-details__routing"],
              [4, "ngFor", "ngForOf"],
              [3, "toWalletAddress", "toBlockchain"],
              [
                "class",
                "route-value__icon-next",
                "src",
                "assets/images/swaps/swaps-info/route-next-icon.svg",
                3,
                "alt",
                4,
                "ngIf",
              ],
              [
                "src",
                "assets/images/swaps/swaps-info/route-next-icon.svg",
                1,
                "route-value__icon-next",
                3,
                "alt",
              ],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, Td, 20, 29, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.tradeData$));
            },
            dependencies: [m.sg, m.O5, F.e, Jp, id, cd, md, _d, bd, m.Ov],
            styles: [
              ".transaction-details[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:5px}.transaction-details__routing[_ngcontent-%COMP%]{display:flex;gap:5px;align-items:center}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      const Pd = [[["", 8, "app-modal-body"]]],
        wd = function (n) {
          return { in: n };
        },
        kd = function (n, a) {
          return { display: n, opacity: a };
        },
        Ad = [".app-modal-body"];
      let Md = (() => {
        class n {
          constructor() {
            (this.visible = !1), (this.visibleAnimate = !1);
          }
          show() {
            (this.visible = !0), (this.visibleAnimate = !0);
          }
          hide() {
            (this.visibleAnimate = !1), (this.visible = !1);
          }
          onContainerClicked(t) {
            t.target.classList.contains("modal") && this.hide();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-modal-border"]],
            ngContentSelectors: Ad,
            decls: 5,
            vars: 7,
            consts: [
              [
                "tabindex",
                "-1",
                "aria-labelledby",
                "exampleModalCenterTitle",
                "aria-hidden",
                "true",
                1,
                "modal-always",
                "fade",
                3,
                "ngClass",
                "ngStyle",
                "click",
              ],
              ["role", "document", 1, "modal-dialog", "modal-dialog-centered"],
              [1, "modal-content", "bordered"],
              [1, "modal-body"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵprojectionDef(Pd),
                e.ɵɵelementStart(0, "div", 0),
                e.ɵɵlistener("click", function (c) {
                  return r.onContainerClicked(c);
                }),
                e.ɵɵelementStart(1, "div", 1)(2, "div", 2)(3, "div", 3),
                e.ɵɵprojection(4),
                e.ɵɵelementEnd()()()()),
                2 & i &&
                  e.ɵɵproperty(
                    "ngClass",
                    e.ɵɵpureFunction1(2, wd, r.visibleAnimate)
                  )(
                    "ngStyle",
                    e.ɵɵpureFunction2(
                      4,
                      kd,
                      r.visible ? "block" : "none",
                      r.visible ? 1 : 0
                    )
                  );
            },
            dependencies: [m.mk, m.PC],
            styles: [
              "*[_ngcontent-%COMP%], [_ngcontent-%COMP%]:after, [_ngcontent-%COMP%]:before{box-sizing:border-box}.modal-always[_ngcontent-%COMP%]{background:rgba(0,0,0,.6)}.modal-dialog-centered[_ngcontent-%COMP%]{display:flex;-webkit-box-align:center;-ms-flex-align:center;max-height:-webkit-fill-available;margin:auto;margin-top:10vh}.modal-open[_ngcontent-%COMP%]   .modal[_ngcontent-%COMP%]{overflow-x:hidden;overflow-y:auto}.modal-always[_ngcontent-%COMP%]{position:fixed;inset:0;z-index:1050;display:none;overflow:hidden;outline:0}.modal-body[_ngcontent-%COMP%]{position:relative;flex:1 1 auto;padding:1rem;max-height:-webkit-fill-available;overflow:auto}.modal-footer[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.modal-content[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0;max-width:500px;margin:1.75rem auto;background:white;max-height:600px;border:1px solid rgba(255,255,255,.1490196078)}.bordered[_ngcontent-%COMP%]{background:black;border-radius:20px}.modal-footer[_ngcontent-%COMP%]{padding:5px}",
            ],
          }));
        }
        return n;
      })();
      const Ed = ["modal1"],
        Id = ["modal2"];
      function Nd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 44),
            e.ɵɵelement(1, "img", 45),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵpropertyInterpolate1(
            "href",
            "https://etherscan.com/token/",
            t.tokenAddress,
            "",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Rd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 44),
            e.ɵɵelement(1, "img", 45),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵpropertyInterpolate1(
            "href",
            "https://polygonscan.com/token/",
            t.tokenAddress,
            "",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Dd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 44),
            e.ɵɵelement(1, "img", 45),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵpropertyInterpolate1(
            "href",
            "https://snowtrace.io/token/",
            t.tokenAddress,
            "",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Fd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 44),
            e.ɵɵelement(1, "img", 45),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵpropertyInterpolate1(
            "href",
            "https://bscscan.com/token/",
            t.tokenAddress,
            "",
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Bd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 46),
            e.ɵɵelement(1, "img", 47),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("href", t.tokenInfo.coingecko_url, e.ɵɵsanitizeUrl);
        }
      }
      function Hd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 46),
            e.ɵɵelement(1, "img", 48),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("href", t.tokenInfo.cmc_url, e.ɵɵsanitizeUrl);
        }
      }
      function Ld(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 46),
            e.ɵɵelement(1, "img", 49),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "href",
            t.tokenInfo.dextools_info.data.socialInfo.telegram,
            e.ɵɵsanitizeUrl
          );
        }
      }
      function $d(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 46),
            e.ɵɵelement(1, "img", 50),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "href",
            t.tokenInfo.dextools_info.data.socialInfo.twitter,
            e.ɵɵsanitizeUrl
          );
        }
      }
      function Vd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "a", 46),
            e.ɵɵelement(1, "img", 51),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty(
            "href",
            t.tokenInfo.dextools_info.data.socialInfo.website,
            e.ɵɵsanitizeUrl
          );
        }
      }
      function jd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              "$",
              t.returnNumberCustomFormat(t.dexscreener.pairs[0].volume.h24),
              ""
            );
        }
      }
      function zd(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function Yd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              "$",
              t.returnNumberCustomFormat(t.dexscreener.pairs[0].fdv),
              ""
            );
        }
      }
      function Ud(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function Wd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              "$",
              t.returnNumberCustomFormat(t.dexscreener.pairs[0].liquidity.usd),
              ""
            );
        }
      }
      function Gd(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function Kd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              " ",
              t.goplus.buy_tax,
              "/",
              t.goplus.sell_tax,
              " "
            );
        }
      }
      function Xd(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, " \u2014/\u2014 "),
          e.ɵɵelementEnd());
      }
      function Zd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate(
              t.returnNumberCustomFormat(t.goplus.holder_count)
            );
        }
      }
      function Qd(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function Jd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 16),
            e.ɵɵtemplate(1, Zd, 2, 1, "span", 17),
            e.ɵɵtemplate(2, Qd, 2, 0, "span", 17),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != t.goplus && null != t.goplus.holder_count
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null == t.goplus || null == t.goplus.holder_count
            );
        }
      }
      function qd(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 53), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("$---");
        }
      }
      function em(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 53), e.ɵɵtext(1, "$0"), e.ɵɵelementEnd());
      }
      function tm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 54), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵclassProp(
            "red",
            t.itsDown(t.dexscreener.pairs[0].priceChange.h6)
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t.dexscreener.pairs[0].priceChange.h6.toFixed(2),
              "%"
            );
        }
      }
      function nm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 54),
          e.ɵɵelement(1, "img", 55),
          e.ɵɵelementEnd());
      }
      function im(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 54), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵclassProp(
            "red",
            t.itsDown(t.dexscreener.pairs[0].priceChange.h24)
          ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              t.dexscreener.pairs[0].priceChange.h24.toFixed(2),
              "%"
            );
        }
      }
      function rm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 54),
          e.ɵɵelement(1, "img", 55),
          e.ɵɵelementEnd());
      }
      function om(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 56)(1, "a", 57),
            e.ɵɵtext(2, "Bubblemaps"),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵpropertyInterpolate1(
              "href",
              "https://app.bubblemaps.io/eth/token/",
              t.tokenAddress,
              "",
              e.ɵɵsanitizeUrl
            );
        }
      }
      function am(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 58)(1, "select", 59),
            e.ɵɵlistener("change", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onChange(r));
            }),
            e.ɵɵelementStart(2, "option", 60),
            e.ɵɵtext(3, "Dexscreener"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "option", 61),
            e.ɵɵtext(5, "Defined"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(6, "option", 62),
            e.ɵɵtext(7, "Trading View"),
            e.ɵɵelementEnd()()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1), e.ɵɵproperty("ngModel", t.chartingTool);
        }
      }
      function sm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 75)(1, "div", 76)(2, "div", 77),
            e.ɵɵnamespaceSVG(),
            e.ɵɵelementStart(3, "svg", 78),
            e.ɵɵelement(4, "path", 79),
            e.ɵɵelementEnd()()(),
            e.ɵɵnamespaceHTML(),
            e.ɵɵelementStart(5, "div"),
            e.ɵɵtext(6, " DexTools Score "),
            e.ɵɵelementStart(7, "span", 80),
            e.ɵɵtext(8),
            e.ɵɵelementEnd()()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(8), e.ɵɵtextInterpolate(t.scoreInfo);
        }
      }
      function cm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function lm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function pm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, cm, 3, 0, "div", 82),
            e.ɵɵtemplate(3, lm, 3, 0, "div", 83),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Honeypot "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.is_honeypot),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.is_honeypot),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.is_honeypot);
        }
      }
      function dm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function mm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function _m(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, dm, 3, 0, "div", 82),
            e.ɵɵtemplate(3, mm, 3, 0, "div", 83),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Token is buyable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.cannot_buy),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.cannot_buy),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.cannot_buy);
        }
      }
      function um(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function gm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function hm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, um, 3, 0, "div", 82),
            e.ɵɵtemplate(3, gm, 3, 0, "div", 83),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Token is sellable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.cannot_sell_all),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.cannot_sell_all),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.cannot_sell_all);
        }
      }
      function fm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function vm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Cm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, fm, 3, 0, "div", 82),
            e.ɵɵtemplate(3, vm, 3, 0, "div", 83),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Stop Trading "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.transfer_pausable),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.transfer_pausable),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.transfer_pausable);
        }
      }
      function xm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 89),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 90),
          e.ɵɵelementEnd()());
      }
      function bm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 90),
          e.ɵɵelementEnd()());
      }
      function ym(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, xm, 3, 0, "div", 88),
            e.ɵɵtemplate(3, bm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Verified Contract "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 0 == t.goplus.is_open_source),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.is_open_source),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.is_open_source);
        }
      }
      function Sm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function Tm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Om(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Sm, 3, 0, "div", 82),
            e.ɵɵtemplate(3, Tm, 3, 0, "div", 83),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Mintable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.is_mintable),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 0 == t.goplus.is_mintable),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.goplus.is_mintable);
        }
      }
      function Pm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function wm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function km(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Pm, 3, 0, "div", 83),
            e.ɵɵtemplate(3, wm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Ownership Renounced "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp(
            "red",
            "0x0000000000000000000000000000000000000000" !=
              t.goplus.owner_address &&
              "0x000000000000000000000000000000000000dead" !=
                t.goplus.owner_address
          ),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "ngIf",
              "0x0000000000000000000000000000000000000000" !=
                t.goplus.owner_address &&
                "0x000000000000000000000000000000000000dead" !=
                  t.goplus.owner_address
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              "0x0000000000000000000000000000000000000000" ==
                t.goplus.owner_address ||
                "0x000000000000000000000000000000000000dead" ==
                  t.goplus.owner_address
            );
        }
      }
      function Am(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function Mm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function Em(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Am, 3, 0, "div", 83),
            e.ɵɵtemplate(3, Mm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Balances Modifiable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.owner_change_balance),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.owner_change_balance),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.owner_change_balance);
        }
      }
      function Im(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Nm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function Rm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Im, 3, 0, "div", 83),
            e.ɵɵtemplate(3, Nm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Tax Modifiable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.slippage_modifiable),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.slippage_modifiable),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.slippage_modifiable);
        }
      }
      function Dm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Fm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 90),
          e.ɵɵelementEnd()());
      }
      function Bm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Dm, 3, 0, "div", 83),
            e.ɵɵtemplate(3, Fm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Transfers Pausable "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.transfer_pausable),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.transfer_pausable),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.transfer_pausable);
        }
      }
      function Hm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Lm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 85),
          e.ɵɵelementEnd()());
      }
      function $m(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Hm, 3, 0, "div", 83),
            e.ɵɵtemplate(3, Lm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Transfer Cooldown "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.trading_cooldown),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.trading_cooldown),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.trading_cooldown);
        }
      }
      function Vm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function jm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 90),
          e.ɵɵelementEnd()());
      }
      function zm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Vm, 3, 0, "div", 83),
            e.ɵɵtemplate(3, jm, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Whitelist "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.is_whitelisted),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.is_whitelisted),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.is_whitelisted);
        }
      }
      function Ym(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 86),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 87),
          e.ɵɵelementEnd()());
      }
      function Um(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 77),
          e.ɵɵnamespaceSVG(),
          e.ɵɵelementStart(1, "svg", 84),
          e.ɵɵelement(2, "path", 90),
          e.ɵɵelementEnd()());
      }
      function Wm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 81)(1, "div", 76),
            e.ɵɵtemplate(2, Ym, 3, 0, "div", 83),
            e.ɵɵtemplate(3, Um, 3, 0, "div", 82),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div"),
            e.ɵɵtext(5, " Blacklist "),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵclassProp("red", 1 == t.goplus.is_blacklisted),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", 1 == t.goplus.is_blacklisted),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 0 == t.goplus.is_blacklisted);
        }
      }
      function Gm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 72),
            e.ɵɵtemplate(1, sm, 9, 1, "div", 73),
            e.ɵɵtemplate(2, pm, 6, 4, "div", 74),
            e.ɵɵtemplate(3, _m, 6, 4, "div", 74),
            e.ɵɵtemplate(4, hm, 6, 4, "div", 74),
            e.ɵɵtemplate(5, Cm, 6, 4, "div", 74),
            e.ɵɵtemplate(6, ym, 6, 4, "div", 74),
            e.ɵɵtemplate(7, Om, 6, 4, "div", 74),
            e.ɵɵtemplate(8, km, 6, 4, "div", 74),
            e.ɵɵtemplate(9, Em, 6, 4, "div", 74),
            e.ɵɵtemplate(10, Rm, 6, 4, "div", 74),
            e.ɵɵtemplate(11, Bm, 6, 4, "div", 74),
            e.ɵɵtemplate(12, $m, 6, 4, "div", 74),
            e.ɵɵtemplate(13, zm, 6, 4, "div", 74),
            e.ɵɵtemplate(14, Wm, 6, 4, "div", 74),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", null != t.scoreInfo),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.is_honeypot)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.cannot_buy)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.cannot_sell_all)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.transfer_pausable)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.is_open_source)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.is_mintable)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.owner_address)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.owner_change_balance)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.slippage_modifiable)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.transfer_pausable)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.trading_cooldown)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.is_whitelisted)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              null != (null == t.goplus ? null : t.goplus.is_blacklisted)
            );
        }
      }
      function Km(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, "\u{1f4c4}"),
          e.ɵɵelementEnd());
      }
      function Xm(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, "\u{1f512}"),
          e.ɵɵelementEnd());
      }
      function Zm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().$implicit;
          e.ɵɵadvance(1), e.ɵɵtextInterpolate1("", t.tag, " ");
        }
      }
      function Qm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().$implicit,
            i = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", i.returnAddress(t.address), " ");
        }
      }
      function Jm(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 96)(1, "div", 97),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(3);
              return e.ɵɵresetView(c.copyAddress(s.address));
            }),
            e.ɵɵtext(2),
            e.ɵɵtemplate(3, Km, 2, 0, "span", 17),
            e.ɵɵtemplate(4, Xm, 2, 0, "span", 17),
            e.ɵɵtemplate(5, Zm, 2, 1, "span", 17),
            e.ɵɵtemplate(6, Qm, 2, 1, "span", 17),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(7, "div", 98),
            e.ɵɵtext(8),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = a.index,
            r = e.ɵɵnextContext(3);
          e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", i + 1, ". "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.is_contract),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.is_locked),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "" != t.tag),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "" == t.tag),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1("", r.returnToFixed(t.percent), "%");
        }
      }
      function qm(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 91)(1, "div")(2, "h6"),
            e.ɵɵtext(3, "LP Holders Info"),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(4, Jm, 9, 6, "div", 92),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "div")(6, "h6", 93),
            e.ɵɵtext(7, "Percent of LP Locked"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(8, "div", 94)(9, "div", 95),
            e.ɵɵtext(10),
            e.ɵɵelementEnd()()()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(4),
            e.ɵɵproperty("ngForOf", t.goplus.lp_holders),
            e.ɵɵadvance(5),
            e.ɵɵstyleProp("width", t.CALCULATED_LP, "%"),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", t.CALCULATED_LP.toFixed(2), "%");
        }
      }
      function e_(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, "\u{1f4c4}"),
          e.ɵɵelementEnd());
      }
      function t_(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "span"),
          e.ɵɵtext(1, "\u{1f512}"),
          e.ɵɵelementEnd());
      }
      function n_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().$implicit;
          e.ɵɵadvance(1), e.ɵɵtextInterpolate1("", t.tag, " ");
        }
      }
      function i_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"), e.ɵɵtext(1), e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext().$implicit,
            i = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", i.returnAddress(t.address), " ");
        }
      }
      function r_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 96)(1, "div", 97),
            e.ɵɵlistener("click", function () {
              const s = e.ɵɵrestoreView(t).$implicit,
                c = e.ɵɵnextContext(3);
              return e.ɵɵresetView(c.copyAddress(s.address));
            }),
            e.ɵɵtext(2),
            e.ɵɵtemplate(3, e_, 2, 0, "span", 17),
            e.ɵɵtemplate(4, t_, 2, 0, "span", 17),
            e.ɵɵtemplate(5, n_, 2, 1, "span", 17),
            e.ɵɵtemplate(6, i_, 2, 1, "span", 17),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(7, "div", 98),
            e.ɵɵtext(8),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = a.$implicit,
            i = a.index,
            r = e.ɵɵnextContext(3);
          e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", i + 1, ". "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.is_contract),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", 1 == t.is_locked),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "" != t.tag),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "" == t.tag),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1("", r.returnToFixed(t.percent), "%");
        }
      }
      function o_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 99)(1, "div")(2, "h6"),
            e.ɵɵtext(3, "Token Holders Info"),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(4, r_, 9, 6, "div", 92),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "div")(6, "h6", 93),
            e.ɵɵtext(7, "Top 10 Holders Ratio"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(8, "div", 94)(9, "div", 95),
            e.ɵɵtext(10),
            e.ɵɵelementEnd()()()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(4),
            e.ɵɵproperty("ngForOf", t.goplus.holders),
            e.ɵɵadvance(5),
            e.ɵɵstyleProp("width", t.CALCULATED_PERCENTAGE, "%"),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1("", t.CALCULATED_PERCENTAGE.toFixed(2), "%");
        }
      }
      function a_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 63)(1, "tui-loader", 0)(2, "div", 1),
            e.ɵɵelement(3, "app-transaction-details", 64),
            e.ɵɵelementStart(4, "div", 65),
            e.ɵɵtemplate(5, Gm, 15, 14, "div", 66),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(6, "div", 67),
            e.ɵɵtemplate(7, qm, 11, 4, "div", 68),
            e.ɵɵtemplate(8, o_, 11, 4, "div", 69),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(9, "div", 70)(10, "div", 71),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.getFullAuditReport());
            }),
            e.ɵɵelementStart(11, "div"),
            e.ɵɵtext(12, " Full AI Audit Report "),
            e.ɵɵelementEnd()()()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("showLoader", t.loadingCount < 1)("overlay", !0),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "currentOnChainTrade",
              null == t.currentInstantTradeInfo
                ? null
                : t.currentInstantTradeInfo.trade
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", null != t.goplus),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", null != t.goplus),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", null != t.goplus);
        }
      }
      function s_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 100)(1, "div", 101)(2, "div", 102),
            e.ɵɵelement(3, "iframe", 103),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(4, "div", 70)(5, "div", 71),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.getAnalyzeChart());
            }),
            e.ɵɵelementStart(6, "div"),
            e.ɵɵtext(7, " Chart Analysis AI Report "),
            e.ɵɵelementEnd()()()();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty("src", t.dexscreenerChartUrl, e.ɵɵsanitizeResourceUrl);
        }
      }
      function c_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 41)(1, "p"),
            e.ɵɵtext(2),
            e.ɵɵelementEnd(),
            e.ɵɵelement(3, "img", 105),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(2), e.ɵɵtextInterpolate(t.aiRequest);
        }
      }
      function l_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 41),
            e.ɵɵelement(1, "p", 106),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("innerHTML", t.aiResult, e.ɵɵsanitizeHtml);
        }
      }
      function p_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵnamespaceSVG(),
            e.ɵɵnamespaceHTML(),
            e.ɵɵelementStart(0, "div")(1, "div", 40)(2, "h1"),
            e.ɵɵtext(3),
            e.ɵɵelementEnd()(),
            e.ɵɵtemplate(4, c_, 4, 1, "div", 104),
            e.ɵɵtemplate(5, l_, 2, 1, "div", 104),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(t.aiTitle),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t.isAIRequesting),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !t.isAIRequesting);
        }
      }
      function d_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵnamespaceSVG(),
            e.ɵɵnamespaceHTML(),
            e.ɵɵelementStart(0, "div")(1, "div", 40)(2, "h1"),
            e.ɵɵtext(3, "Premium Features"),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(4, "div", 41),
            e.ɵɵelement(5, "img", 42),
            e.ɵɵelementStart(6, "p"),
            e.ɵɵtext(7, "To access this premium feature you need at least "),
            e.ɵɵelementStart(8, "b"),
            e.ɵɵtext(9),
            e.ɵɵelementEnd(),
            e.ɵɵtext(10, ". "),
            e.ɵɵelement(11, "br"),
            e.ɵɵtext(
              12,
              " Connect your wallet and we will automatically detect it."
            ),
            e.ɵɵelement(13, "br")(14, "br"),
            e.ɵɵtext(
              15,
              " You can check all the benefits of being a $SELEN holder "
            ),
            e.ɵɵelementStart(16, "a", 43),
            e.ɵɵtext(17, "here"),
            e.ɵɵelementEnd(),
            e.ɵɵtext(18, "."),
            e.ɵɵelementEnd()()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(9), e.ɵɵtextInterpolate1("", t.premiumToken, " $SELEN");
        }
      }
      let m_ = (() => {
        class n {
          constructor(t, i, r, s, c, l) {
            (this.authService = t),
              (this.sanitizer = i),
              (this.cdr = r),
              (this.swapFormService = s),
              (this.http = c),
              (this.destroy$ = l),
              (this.currentChain = "ethereum"),
              (this.honeypot_title =
                "A trap that allows buying tokens but prevents selling, indicating a potential scam. Implies high risk for investors."),
              (this.loadingCount = 0),
              (this.isTransactionSummary = !0),
              (this.chartingTool = "dexscreener"),
              (this.headerLoader = !0),
              (this.isAIRequesting = !1),
              (this.aiResult = ""),
              (this.aiRequest = ""),
              (this.aiTitle = ""),
              (this.loading = !1),
              (this.accordionOpened = !0),
              (this.staySame = !0),
              (this.getCurrentUser$ = this.authService.currentUser$);
          }
          set tradeStatus(t) {
            t === h.LOADING && (this.loading = !0);
          }
          get isInstantTrade() {
            return this.swapType === S.V.INSTANT_TRADE;
          }
          get showTransactionInfo() {
            const { toAmount: t } = this.swapFormService.outputValue;
            return (
              (!this.isInstantTrade ||
                !1 === this.currentInstantTradeInfo?.isWrappedType) &&
              t?.isFinite()
            );
          }
          onChange(t) {
            console.log(t.target.value),
              localStorage.setItem("charting-tool", t.target.value),
              (this.chartingTool = t.target.value);
            let i =
              this.swapFormService.form.value.input.toToken.address.toLowerCase();
            (this.tokenAddress = i),
              "0x0000000000000000000000000000000000000000" ==
                this.tokenAddress &&
                (this.tokenAddress =
                  "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"),
              this.getChartingTool();
          }
          closeAIModal() {
            (this.aiResult = ""),
              (this.isAIRequesting = !0),
              (this.aiRequest = ""),
              (this.aiTitle = "");
          }
          getFullAuditReport() {
            console.log("getFullAuditReport"),
              (this.showPremiumInfo = !1),
              (this.aiResult = ""),
              (this.aiRequest =
                "Please wait a moment while a comprehensive AI powered audit is generated."),
              (this.aiTitle = "Complete AI Audit Report"),
              (this.isAIRequesting = !0),
              this.auditReport.show();
            let t = this.authService.userAddress;
            (this.premiumToken = "2,000"),
              this.http
                .get(
                  "https://api.protocolbuilders.com/token-contract-balance/eth/0x8eDc6F7d2F23C10653972E611f707ce0562d61B1/" +
                    t
                )
                .subscribe((r) => {
                  let s = r.amount;
                  if (((s /= 10 ** 18), console.log("Breakpoint"), s < 2e3))
                    return (
                      (this.showPremiumInfo = !0), void this.cdr.detectChanges()
                    );
                  {
                    let c = { address: this.tokenAddress },
                      l =
                        this.swapFormService.form.value.input.toToken.blockchain.toLowerCase(),
                      d = 1;
                    console.log("Chain Id Thing :)"),
                      "polygon" == l && (d = 137),
                      "bsc" == l && (d = 56),
                      "avalanche" == l && (d = 43114),
                      "arbitrum" == l && (d = 42161),
                      this.http
                        .post(
                          "https://api.multidexai.com/audit_contract/" + d,
                          c
                        )
                        .subscribe((_) => {
                          (this.isAIRequesting = !1),
                            console.log("audit_contract", _),
                            (this.aiResult = _.answer.replace(/\n/g, "<br>")),
                            this.cdr.detectChanges();
                        });
                  }
                });
          }
          getAnalyzeChart() {
            (this.aiResult = ""),
              (this.showPremiumInfo = !1),
              (this.aiRequest =
                "Please wait a moment as a comprehensive AI powered chart analysis is generated."),
              (this.aiTitle = "Chart Analysis AI Report"),
              this.auditReport.show(),
              (this.isAIRequesting = !0);
            let t = this.authService.userAddress;
            (this.premiumToken = "5,000"),
              this.http
                .get(
                  "https://api.protocolbuilders.com/token-contract-balance/eth/0x8eDc6F7d2F23C10653972E611f707ce0562d61B1/" +
                    t
                )
                .subscribe((r) => {
                  let s = r.amount;
                  if (((s /= 10 ** 18), console.log("Breakpoint"), s < 5e3))
                    return (
                      (this.showPremiumInfo = !0), void this.cdr.detectChanges()
                    );
                  {
                    let c = { address: this.pairAddress },
                      l =
                        this.swapFormService.form.value.input.toToken.blockchain.toLowerCase(),
                      d = 1;
                    console.log("Chain Id Thing :)"),
                      "polygon" == l && (d = 137),
                      "bsc" == l && (d = 56),
                      "avalanche" == l && (d = 43114),
                      this.http
                        .post(
                          "https://api.multidexai.com/analyze_chart/" + d,
                          c
                        )
                        .subscribe((_) => {
                          (this.isAIRequesting = !1),
                            console.log("audit_contract", _),
                            (this.aiResult = _.answer.replace(/\n/g, "<br>")),
                            this.cdr.detectChanges();
                        });
                  }
                });
          }
          addToMetamask(t) {
            return (0, O.Z)(function* () {
              let i = "";
              i =
                null != t.logoUrl
                  ? t.image
                  : "https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/" +
                    t.contractAddress +
                    "/logo.png";
              var s = new XMLHttpRequest();
              s.open("GET", i, !0),
                s.send(),
                (s.onload = function () {
                  200 != s.status
                    ? window.ethereum.request({
                        method: "wallet_watchAsset",
                        params: {
                          type: "ERC20",
                          options: {
                            address: t.contractAddress,
                            symbol: t.tokenSymbol,
                            decimals: t.tokenDecimal,
                          },
                        },
                      })
                    : window.ethereum.request({
                        method: "wallet_watchAsset",
                        params: {
                          type: "ERC20",
                          options: {
                            address: t.contractAddress,
                            symbol: t.tokenSymbol,
                            decimals: t.tokenDecimal,
                            image: i,
                          },
                        },
                      });
                });
            })();
          }
          ngOnInit() {
            (this.chartingTool = "dexscreener"),
              localStorage.getItem("charting-tool") &&
                (this.chartingTool = localStorage.getItem("charting-tool")),
              this.handleLoading();
          }
          changeSummary() {
            (this.isTransactionSummary = !this.isTransactionSummary),
              console.log(
                "This is the swapinfo",
                this.swapFormService.swapInfo
              );
          }
          returnMarketCap(t) {
            if (null != t) return numeral(t).format("0,0");
          }
          returnNumberCustomFormat(t) {
            if (null != t) {
              var c,
                r = [
                  { value: 1, symbol: "" },
                  { value: 1e3, symbol: "K" },
                  { value: 1e6, symbol: " M" },
                  { value: 1e9, symbol: " B" },
                  { value: 1e12, symbol: " T" },
                  { value: 1e15, symbol: " Q" },
                  { value: 1e18, symbol: " Q" },
                ];
              for (c = r.length - 1; c > 0 && !(t >= r[c].value); c--);
              return (
                (t / r[c].value)
                  .toFixed(1)
                  .replace(/\.0+$|(\.[0-9]*[1-9])0+$/, "$1") + r[c].symbol
              );
            }
          }
          itsDown(t) {
            return (t = parseFloat(t)) < 0;
          }
          returnCorrectName(t) {
            return null == t
              ? "\u2013"
              : t.length > 13
              ? ((t = t.substring(0, 13)), (t += "..."))
              : t;
          }
          getChartingTool() {
            let t = "";
            console.log("getChartingTool");
            let i = "";
            "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48" == this.tokenAddress &&
              (i = "0x5777d92f208679db4b9778590fa3cab3ac9e2168"),
              "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" ==
                this.tokenAddress &&
                (i = "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"),
              "0xdac17f958d2ee523a2206206994597c13d831ec7" ==
                this.tokenAddress &&
                (i = "0x3416cf6c708da44db2624d63ea0aaef7113527c6");
            let r =
                this.swapFormService.form.value.input.toToken.blockchain.toLowerCase(),
              s = "ethereum",
              c = "ether";
            "polygon" == r && ((s = "matic"), (c = "poly")),
              "bsc" == r && ((s = "bsc"), (c = "bsc")),
              "avalanche" == r && ((s = "avalanche"), (c = "avalanche")),
              "dexscreener" == this.chartingTool &&
                (t =
                  "" == i
                    ? "https://dexscreener.com/" +
                      s +
                      "/" +
                      this.tokenAddress +
                      "?embed=1&theme=dark&info=0&trades=1"
                    : "https://dexscreener.com/" +
                      s +
                      "/" +
                      i +
                      "?embed=1&theme=dark&info=0&trades=1"),
              "dexview" == this.chartingTool &&
                (t =
                  "" == i
                    ? "https://www.defined.fi/" +
                      s +
                      "/" +
                      this.pairAddress +
                      "?quoteToken=token0&embedded=1&hideTxTable=0&hideSidebar=1&embedColorMode=DARK"
                    : "https://www.defined.fi/" +
                      s +
                      "/" +
                      i +
                      "?quoteToken=token0&embedded=1&hideTxTable=0&hideSidebar=1&embedColorMode=DARK"),
              "dextools" == this.chartingTool &&
                (t =
                  "" == i
                    ? "https://www.dextools.io/widget-chart/en/ether/pe-light/" +
                      this.pairAddress +
                      "?theme=dark&chartType=2&chartResolution=30&drawingToolbars=false"
                    : "https://www.dextools.io/widget-chart/en/ether/pe-light/" +
                      i +
                      "?theme=dark&chartType=2&chartResolution=30&drawingToolbars=false"),
              "tradingview" == this.chartingTool &&
                (t =
                  "" == i
                    ? "https://dexscreener.com/" +
                      s +
                      "/" +
                      this.tokenAddress +
                      "?embed=1&theme=dark&info=0&trades=0"
                    : "https://dexscreener.com/" +
                      s +
                      "/" +
                      i +
                      "?embed=1&theme=dark&info=0&trades=0"),
              (this.dexscreenerChartUrl =
                this.sanitizer.bypassSecurityTrustResourceUrl(t));
          }
          startHeader() {
            let t = this.tokenAddress,
              i = "https://api.dexscreener.com/latest/dex/tokens/" + t;
            "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48" == this.tokenAddress &&
              ((t = "0x5777d92f208679db4b9778590fa3cab3ac9e2168"),
              (i =
                "https://api.dexscreener.com/latest/dex/pairs/ethereum/" + t)),
              "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" ==
                this.tokenAddress &&
                ((t = "0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"),
                (i =
                  "https://api.dexscreener.com/latest/dex/pairs/ethereum/" +
                  t)),
              "0xdac17f958d2ee523a2206206994597c13d831ec7" ==
                this.tokenAddress &&
                ((t = "0x3416cf6c708da44db2624d63ea0aaef7113527c6"),
                (i =
                  "https://api.dexscreener.com/latest/dex/pairs/ethereum/" +
                  t)),
              this.http.get(i).subscribe(
                (r) => {
                  this.dexscreener = r;
                  let s = 0;
                  if (null != r.pairs || null != r.pairs) {
                    (this.dexscreener.fdv = r.pairs[0].fdv),
                      (this.dexscreener.fdv = numeral(
                        this.dexscreener.fdv
                      ).format("0,0")),
                      (this.pairAddress = r.pairs[0].pairAddress);
                    for (let c in r.pairs)
                      null != r.pairs[c].liquidity &&
                        (s += r.pairs[c].liquidity.usd);
                    (this.dexscreener.totalLiquidity = s),
                      (this.dexscreener.totalLiquidity = numeral(
                        this.dexscreener.totalLiquidity
                      ).format("0,0"));
                  } else this.dexscreener = void 0;
                  console.log("dexscreener", this.dexscreener),
                    this.cdr.detectChanges(),
                    (this.headerLoader = !1);
                },
                (r) => {
                  (this.headerLoader = !1), (this.dexscreener = void 0);
                }
              ),
              (this.loading = !1);
          }
          returnAddress(t) {
            if (null == t || "" == t) return "-";
            let i = "0x...";
            return (i += t.substring(t.length - 4, t.length)), i;
          }
          returnToFixed(t) {
            return (100 * t).toFixed(2);
          }
          copyAddress(t) {
            let i = t;
            console.log("Starting");
            var r = document.createElement("input");
            r.setAttribute("value", i),
              document.body.appendChild(r),
              r.select(),
              document.execCommand("copy"),
              document.body.removeChild(r);
            var c = document.getElementById("toast");
            (c.className = "show"),
              setTimeout(function () {
                c.className = c.className.replace("show", "");
              }, 5e3);
          }
          handleLoading() {
            (this.loadingCount = 0),
              (this.goplus = void 0),
              (this.tokenInfo = void 0),
              (this.dexscreener = void 0),
              console.log("call handleLoading", this.tokenInfo),
              this.swapFormService.outputValue$
                .pipe((0, je.YP)(this.cdr), (0, P.R)(this.destroy$))
                .subscribe(() => {
                  let t =
                    this.swapFormService.form.value.input.toToken.address.toLowerCase();
                  (this.tokenAddress = t),
                    console.log("tokenAddress", this.tokenAddress),
                    "0x0000000000000000000000000000000000000000" ==
                      this.tokenAddress &&
                      (this.tokenAddress =
                        "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"),
                    (t = this.tokenAddress),
                    this.getChartingTool(),
                    this.startHeader(),
                    console.log(
                      "swapInfoContainer - swapFormService",
                      this.swapFormService.form.value
                    ),
                    (this.swapForm =
                      this.swapFormService.form.value.input.toToken),
                    (this.swapFormAssets =
                      this.swapFormService.form.value.input.fromAsset),
                    console.log("swapFormAssets", this.swapFormAssets);
                  let i =
                    this.swapFormService.form.value.input.toToken.blockchain.toLowerCase();
                  this.currentChain = i;
                  let r = 1;
                  console.log("Chain Id Thing :)"),
                    "polygon" == i && (r = 137),
                    "bsc" == i && (r = 56),
                    "avalanche" == i && (r = 43114),
                    "arbitrum" == i && (r = 42161),
                    console.log("Chart Done", this.dexscreenerChartUrl);
                  let s = { address: t };
                  this.http
                    .post("https://api.multidexai.com/token_infos/" + r, s)
                    .subscribe((l) => {
                      console.log("header", l),
                        (this.tokenInfo = l),
                        this.cdr.detectChanges();
                    }),
                    this.http
                      .post("https://api.multidexai.com/token_score/" + r, s)
                      .subscribe((l) => {
                        console.log("score_info", this.scoreInfo),
                          200 == l.score.statusCode &&
                            ((this.scoreInfo = l.score.data.dextScore.total),
                            this.cdr.detectChanges());
                      });
                  let c = "eth";
                  "polygon" == i && (c = "poly"),
                    "bsc" == i && (c = "bsc"),
                    "avalanche" == i && (c = "avax"),
                    "arbitrum" == i && (c = "arbitrum"),
                    this.http
                      .get(
                        "https://api.protocolbuilders.com/token-checker/" +
                          c +
                          "/" +
                          t
                      )
                      .subscribe(
                        (l) => {
                          console.log("GoPlus", l),
                            (this.goplus = l.result[t.toLowerCase()]),
                            null != this.goplus.buy_tax &&
                              (this.goplus.buy_tax =
                                100 * parseFloat(this.goplus.buy_tax)),
                            null != this.goplus.sell_tax &&
                              (this.goplus.sell_tax =
                                100 * parseFloat(this.goplus.sell_tax)),
                            null != this.goplus.holder_count &&
                              (this.goplus.correct_holder_count = numeral(
                                this.goplus.holder_count
                              ).format("0,0"));
                          let d = this.goplus.holders,
                            _ = this.goplus.lp_holders;
                          if (null != d) {
                            let C = d
                              .filter(
                                (b) =>
                                  "UniswapV2" !== b.tag &&
                                  "0x000000000000000000000000000000000000dead" !==
                                    b.address &&
                                  "0x0000000000000000000000000000000000000000" !==
                                    b.address
                              )
                              .reduce((b, k) => b + parseFloat(k.percent), 0);
                            (C *= 100),
                              (this.CALCULATED_PERCENTAGE = C),
                              (this.goplus.holders = this.goplus.holders.slice(
                                0,
                                5
                              ));
                          } else
                            (this.CALCULATED_PERCENTAGE = 0),
                              (this.goplus.holders = []);
                          if (null != _) {
                            let C = _.filter((b) => 1 == b.is_locked).reduce(
                              (b, k) => b + parseFloat(k.percent),
                              0
                            );
                            (C *= 100),
                              (this.CALCULATED_LP = C),
                              (this.goplus.lp_holders =
                                this.goplus.lp_holders.slice(0, 5));
                          } else
                            (this.CALCULATED_LP = 0),
                              (this.goplus.lp_holders = []);
                          this.cdr.detectChanges(), this.loadingCount++;
                        },
                        (l) => {
                          this.loadingCount++, (this.goplus = void 0);
                        }
                      );
                });
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(U.e),
              e.ɵɵdirectiveInject(Kp.DomSanitizer),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(E.q),
              e.ɵɵdirectiveInject(Nt.eN),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-swap-info-container"]],
            viewQuery: function (i, r) {
              if (
                (1 & i && (e.ɵɵviewQuery(Ed, 7), e.ɵɵviewQuery(Id, 7)), 2 & i)
              ) {
                let s;
                e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                  (r.auditReport = s.first),
                  e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                    (r.premiumModal = s.first);
              }
            },
            inputs: {
              swapType: "swapType",
              currentInstantTradeInfo: "currentInstantTradeInfo",
              tradeStatus: "tradeStatus",
            },
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 109,
            vars: 41,
            consts: [
              [3, "showLoader", "overlay"],
              [1, "swaps-info"],
              [1, "top-bar", "flex", "space-between"],
              [1, "flex", "mb-10"],
              [
                "height",
                "64px",
                "onerror",
                "this.src='/assets/images/missing-icon.svg';",
                1,
                "token-logo",
                3,
                "src",
              ],
              [1, "name-wrapper"],
              [1, "name"],
              [1, "flex", "column"],
              [1, "name-link", "first-img"],
              ["target", "_blank", 3, "href", 4, "ngIf"],
              [3, "click"],
              [
                "src",
                "/assets/images/metamask.png",
                1,
                "metamask",
                "first-img",
              ],
              ["target", "_blank", "rel", "noreferrer", 3, "href", 4, "ngIf"],
              [1, "badges-wrapper"],
              [1, "badge"],
              [1, "badge-title"],
              [1, "badge-text"],
              [4, "ngIf"],
              ["class", "badge-text", 4, "ngIf"],
              [1, "flex", "column", "right-bar"],
              ["class", "price", 4, "ngIf"],
              [1, "price-range"],
              [1, "range"],
              [2, "color", "gray"],
              ["class", "green", 3, "red", 4, "ngIf"],
              ["class", "green", 4, "ngIf"],
              [1, "mid-bar"],
              [1, "buttons-change"],
              ["class", "custom-btn-wrapper", 4, "ngIf"],
              ["class", "custom-select-wrapper", 4, "ngIf"],
              ["class", "bubble-wrapper", 4, "ngIf"],
              ["class", "chart-wrapper", 4, "ngIf"],
              ["id", "modal1"],
              ["modal1", ""],
              [1, "app-modal-body", "modal-minor"],
              [
                1,
                "btn-close",
                2,
                "position",
                "absolute",
                "right",
                "10px",
                "cursor",
                "pointer",
                3,
                "click",
              ],
              [
                "version",
                "1.1",
                "xmlns",
                "http://www.w3.org/2000/svg",
                0,
                "xmlns",
                "xlink",
                "http://www.w3.org/1999/xlink",
                "focusable",
                "false",
                "width",
                "100%",
                "height",
                "100%",
                1,
                "ng-star-inserted",
              ],
              [
                0,
                "xlink",
                "href",
                "assets/taiga-ui/icons/tuiIconCloseLarge.svg#tuiIconCloseLarge",
              ],
              ["id", "modal2"],
              ["modal2", ""],
              [1, "popup-check-registered"],
              [1, "ai-audit-info"],
              ["src", "/logo.png", "width", "200px"],
              [
                "href",
                "https://x.com/status/1766241831358959696",
              ],
              ["target", "_blank", 3, "href"],
              [
                "src",
                "/assets/images/etherscan.png",
                1,
                "etherscan",
                "first-img",
              ],
              ["target", "_blank", "rel", "noreferrer", 3, "href"],
              ["src", "/assets/images/bullets/coingecko.png", 1, "etherscan"],
              [
                "src",
                "/assets/images/bullets/cmc.jpeg",
                1,
                "etherscan",
                2,
                "border-radius",
                "50%",
              ],
              ["src", "/assets/images/bullets/telegram.png", 1, "etherscan"],
              ["src", "/assets/images/bullets/twitter.png", 1, "etherscan"],
              [
                "src",
                "/assets/images/bullets/website.png",
                1,
                "etherscan",
                "website",
              ],
              [
                "src",
                "/assets/images/loading.gif",
                "width",
                "15px",
                1,
                "loader",
              ],
              [1, "price"],
              [1, "green"],
              [
                "src",
                "/assets/images/loading.gif",
                2,
                "width",
                "15px !important",
                "height",
                "15px !important",
                "margin-left",
                "0px",
              ],
              [1, "custom-btn-wrapper"],
              ["target", "_blank", 1, "custom-select", 3, "href"],
              [1, "custom-select-wrapper"],
              [1, "custom-select", 3, "ngModel", "change"],
              ["value", "dexscreener"],
              ["value", "dexview"],
              ["value", "tradingview"],
              [1, "bubble-wrapper"],
              [2, "display", "none", 3, "currentOnChainTrade"],
              [1, "information-wrapper"],
              ["class", "ballon-wrapper", 4, "ngIf"],
              [1, "second-wrapper"],
              ["class", "card glass", "id", "lp-info", 4, "ngIf"],
              ["class", "card glass", "id", "holder-info", 4, "ngIf"],
              [1, "tx-footer"],
              [1, "btn-action", "flex", 3, "click"],
              [1, "ballon-wrapper"],
              ["class", "info-wrapper blue", 4, "ngIf"],
              ["class", "info-wrapper", 3, "red", 4, "ngIf"],
              [1, "info-wrapper", "blue"],
              [1, "audit-result"],
              [1, "positive"],
              [
                "xmlns",
                "http://www.w3.org/2000/svg",
                "fill",
                "none",
                "height",
                "20",
                "viewBox",
                "0 -.058 754.779 867.058",
                "width",
                "20",
              ],
              [
                "clip-rule",
                "evenodd",
                "d",
                "m280.395 49.025c-51.649 26.905-93.905 49.672-93.896 50.598.023 2.39 123.959 65.156 128.358 65.003 2.001-.067 16.517-6.749 32.256-14.847l28.621-14.721 31.258 16.067 31.256 16.07 51.188-23.001c77.13-34.659 85.141-38.457 83.885-39.733-1.666-1.693-29.331-16.555-104.388-56.07-36.274-19.098-71.481-37.823-78.24-41.612-6.758-3.789-13.21-6.837-14.337-6.778s-44.311 22.12-95.961 49.024zm-226.532 117.306-53.766 27.772v121.886c0 67.038.706 121.885 1.572 121.885.863 0 27.316-11.467 58.783-25.482l57.213-25.482v-128.476l27.958 15.232a33224.294 33224.294 0 0 0 64.671 35.109l36.712 19.877 16.336-7.387a3822.03 3822.03 0 0 0 30.674-14.056c7.885-3.672 27.241-12.39 43.012-19.377 15.771-6.99 30.37-14.019 32.44-15.621 2.75-2.128-30.782-20.658-124.025-68.54-70.285-36.093-130.046-65.509-132.802-65.368s-29.206 12.752-58.778 28.028zm529.148 7.799c-36.618 16.531-66.604 30.717-66.638 31.526-.032.808 19.926 12.675 44.354 26.367 24.426 13.695 44.412 25.632 44.412 26.531 0 .897-21.615 11.37-48.03 23.278-26.419 11.905-93.194 42.061-148.393 67.014l-184.954 83.602c-46.525 21.032-88.462 39.989-93.193 42.132-95.03 43.019-121.15 54.956-124.737 57.005-3.607 2.063-4.424 14.048-5.066 74.201l-.766 71.744 48.08 24.498 48.079 24.497 66.669-30.088c36.669-16.547 66.669-30.953 66.669-32.014 0-1.058-6.776-5.473-15.054-9.815-8.282-4.342-25.378-13.954-37.995-21.364-12.616-7.411-25.196-14.21-27.958-15.112-2.761-.899-4.98-2.472-4.935-3.498.046-1.023 29.404-14.968 65.236-30.991 69.597-31.117 122.858-55.1 237.202-106.809a305577.39 305577.39 0 0 1 153.411-69.31c44.948-20.288 97.208-43.983 116.134-52.655l34.41-15.767.765-72.561.769-72.558-48.765-25.03c-26.822-13.765-49.748-24.994-50.95-24.953-1.201.038-32.141 13.595-68.756 30.13zm153.872 261.772c-7.186 3.51-21.38 10.082-31.542 14.603s-29.446 13.222-42.852 19.339l-24.374 11.117-.556 63.702c-.307 35.035-1.597 63.545-2.867 63.36-2.885-.429-48.567-23.857-94.487-48.463-33.143-17.757-35.225-18.463-43.013-14.606-4.502 2.231-31.413 14.3-59.801 26.825-28.389 12.523-52.541 23.587-53.677 24.589-1.133 1 56.002 31.967 126.97 68.819l129.029 67.003 55.119-28.513c30.312-15.68 56.088-29.983 57.275-31.782 2.672-4.045 2.443-242.93-.232-242.607-1.058.127-7.806 3.104-14.992 6.614zm-305.227 280.391a25013.26 25013.26 0 0 0 -28.675 12.349c-28.856 12.484-23.201 12.898-57.531-4.192-22.865-11.382-32.721-14.894-36.999-13.189-3.209 1.278-30.826 13.703-61.376 27.61-30.548 13.907-56.602 25.285-57.898 25.285-12.817 0 8.491 12.731 90.714 54.207l96.428 48.637 40.572-20.03c22.315-11.017 67.323-33.078 100.021-49.024 32.695-15.95 59.042-29.413 58.549-29.921-.497-.506-27.893-14.574-60.883-31.262l-59.982-30.338z",
                "fill",
                "#05a3c9",
                "fill-rule",
                "evenodd",
              ],
              [2, "font-weight", "400"],
              [1, "info-wrapper"],
              ["class", "positive", 4, "ngIf"],
              ["class", "warning", 4, "ngIf"],
              [
                "fill",
                "currentColor",
                "viewBox",
                "0 0 20 20",
                "xmlns",
                "http://www.w3.org/2000/svg",
                1,
                "w-5",
                "h-5",
              ],
              [
                "fill-rule",
                "evenodd",
                "d",
                "M2.166 4.999A11.954 11.954 0 0010 1.944 11.954 11.954 0 0017.834 5c.11.65.166 1.32.166 2.001 0 5.225-3.34 9.67-8 11.317C5.34 16.67 2 12.225 2 7c0-.682.057-1.35.166-2.001zm11.541 3.708a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z",
                "clip-rule",
                "evenodd",
              ],
              [1, "warning"],
              [
                "fill-rule",
                "evenodd",
                "d",
                "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z",
                "clip-rule",
                "evenodd",
              ],
              ["class", "negative", 4, "ngIf"],
              [1, "negative"],
              [
                "fill-rule",
                "evenodd",
                "d",
                "M10 1.944A11.954 11.954 0 012.166 5C2.056 5.649 2 6.319 2 7c0 5.225 3.34 9.67 8 11.317C14.66 16.67 18 12.225 18 7c0-.682-.057-1.35-.166-2.001A11.954 11.954 0 0110 1.944zM11 14a1 1 0 11-2 0 1 1 0 012 0zm0-7a1 1 0 10-2 0v3a1 1 0 102 0V7z",
                "clip-rule",
                "evenodd",
              ],
              ["id", "lp-info", 1, "card", "glass"],
              ["class", "holder-text", 4, "ngFor", "ngForOf"],
              [
                2,
                "text-align",
                "center",
                "margin-top",
                "15px",
                "font-size",
                "16px",
              ],
              [1, "bg-black", "w-full", "rounded", "mt-2"],
              [1, "progress", "rounded", "p-2", "max-w-full", "bg-blue-500"],
              [1, "holder-text"],
              [1, "address", 3, "click"],
              [1, "info"],
              ["id", "holder-info", 1, "card", "glass"],
              [1, "chart-wrapper"],
              [1, "flex-frame"],
              ["id", "dexscreener-embed"],
              [
                "scroll",
                "no",
                "seamless",
                "seamless",
                2,
                "border",
                "0px",
                "overflow",
                "hidden",
                3,
                "src",
              ],
              ["class", "ai-audit-info", 4, "ngIf"],
              ["src", "/assets/images/loading_fox.gif", "width", "200px"],
              [2, "text-align", "left", 3, "innerHTML"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "div")(1, "tui-loader", 0)(2, "div", 1)(
                  3,
                  "div",
                  2
                )(4, "div", 3),
                e.ɵɵelement(5, "img", 4),
                e.ɵɵelementStart(6, "div", 5)(7, "div", 6)(8, "div")(9, "span"),
                e.ɵɵtext(10),
                e.ɵɵelementEnd()()()()(),
                e.ɵɵelementStart(11, "div", 7)(12, "div", 8),
                e.ɵɵtemplate(13, Nd, 2, 1, "a", 9),
                e.ɵɵtemplate(14, Rd, 2, 1, "a", 9),
                e.ɵɵtemplate(15, Dd, 2, 1, "a", 9),
                e.ɵɵtemplate(16, Fd, 2, 1, "a", 9),
                e.ɵɵelementStart(17, "a", 10),
                e.ɵɵlistener("click", function () {
                  return r.addToMetamask(r.swapForm);
                }),
                e.ɵɵelement(18, "img", 11),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(19, Bd, 2, 1, "a", 12),
                e.ɵɵtemplate(20, Hd, 2, 1, "a", 12),
                e.ɵɵtemplate(21, Ld, 2, 1, "a", 12),
                e.ɵɵtemplate(22, $d, 2, 1, "a", 12),
                e.ɵɵtemplate(23, Vd, 2, 1, "a", 12),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(24, "div", 13)(25, "div", 14)(26, "div", 15),
                e.ɵɵtext(27, "24h Volume"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(28, "div", 16),
                e.ɵɵtemplate(29, jd, 2, 1, "span", 17),
                e.ɵɵtemplate(30, zd, 2, 0, "span", 17),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(31, "div", 14)(32, "div", 15),
                e.ɵɵtext(33, "Market Cap"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(34, "div", 16),
                e.ɵɵtemplate(35, Yd, 2, 1, "span", 17),
                e.ɵɵtemplate(36, Ud, 2, 0, "span", 17),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(37, "div", 14)(38, "div", 15),
                e.ɵɵtext(39, "Liquidity"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(40, "div", 16),
                e.ɵɵtemplate(41, Wd, 2, 1, "span", 17),
                e.ɵɵtemplate(42, Gd, 2, 0, "span", 17),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(43, "div", 14)(44, "div", 15),
                e.ɵɵtext(45, "Tax"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(46, "div", 16)(47, "tui-loader", 0),
                e.ɵɵtemplate(48, Kd, 2, 2, "span", 17),
                e.ɵɵtemplate(49, Xd, 2, 0, "span", 17),
                e.ɵɵelementEnd()()(),
                e.ɵɵelementStart(50, "div", 14)(51, "div", 15),
                e.ɵɵtext(52, "Holders"),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(53, Jd, 3, 2, "div", 18),
                e.ɵɵelementEnd()()(),
                e.ɵɵelementStart(54, "div", 19),
                e.ɵɵtemplate(55, qd, 2, 1, "div", 20),
                e.ɵɵtemplate(56, em, 2, 0, "div", 20),
                e.ɵɵelementStart(57, "div", 21)(58, "div", 22)(59, "div", 23),
                e.ɵɵtext(60, "6 hours"),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(61, tm, 2, 3, "div", 24),
                e.ɵɵtemplate(62, nm, 2, 0, "div", 25),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(63, "div", 22)(64, "div", 23),
                e.ɵɵtext(65, "24 hours"),
                e.ɵɵelementEnd(),
                e.ɵɵtemplate(66, im, 2, 3, "div", 24),
                e.ɵɵtemplate(67, rm, 2, 0, "div", 25),
                e.ɵɵelementEnd()()()(),
                e.ɵɵelementStart(68, "div", 26)(69, "div", 27)(
                  70,
                  "button",
                  10
                ),
                e.ɵɵlistener("click", function () {
                  return r.changeSummary();
                }),
                e.ɵɵtext(71, "AI Information"),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(72, "button", 10),
                e.ɵɵlistener("click", function () {
                  return r.changeSummary();
                }),
                e.ɵɵtext(73, "Chart"),
                e.ɵɵelementEnd()(),
                e.ɵɵtemplate(74, om, 3, 1, "div", 28),
                e.ɵɵtemplate(75, am, 8, 1, "div", 29),
                e.ɵɵelementEnd()()(),
                e.ɵɵtemplate(76, a_, 13, 6, "div", 30),
                e.ɵɵtemplate(77, s_, 8, 1, "div", 31),
                e.ɵɵelementEnd(),
                e.ɵɵelementStart(78, "app-modal-border", 32, 33)(80, "div", 34)(
                  81,
                  "a",
                  35
                ),
                e.ɵɵlistener("click", function () {
                  return r.auditReport.hide();
                }),
                e.ɵɵnamespaceSVG(),
                e.ɵɵelementStart(82, "svg", 36),
                e.ɵɵelement(83, "use", 37),
                e.ɵɵelementEnd()(),
                e.ɵɵtemplate(84, p_, 6, 3, "div", 17),
                e.ɵɵtemplate(85, d_, 19, 1, "div", 17),
                e.ɵɵelementEnd()(),
                e.ɵɵnamespaceHTML(),
                e.ɵɵelementStart(86, "app-modal-border", 38, 39)(88, "div", 34)(
                  89,
                  "a",
                  35
                ),
                e.ɵɵlistener("click", function () {
                  return r.premiumModal.hide();
                }),
                e.ɵɵnamespaceSVG(),
                e.ɵɵelementStart(90, "svg", 36),
                e.ɵɵelement(91, "use", 37),
                e.ɵɵelementEnd()(),
                e.ɵɵnamespaceHTML(),
                e.ɵɵelementStart(92, "div", 40)(93, "h1"),
                e.ɵɵtext(94, "Premium Features"),
                e.ɵɵelementEnd()(),
                e.ɵɵelementStart(95, "div", 41),
                e.ɵɵelement(96, "img", 42),
                e.ɵɵelementStart(97, "p"),
                e.ɵɵtext(
                  98,
                  "To access this premium feature you need at least "
                ),
                e.ɵɵelementStart(99, "b"),
                e.ɵɵtext(100),
                e.ɵɵelementEnd(),
                e.ɵɵtext(101, ". "),
                e.ɵɵelement(102, "br"),
                e.ɵɵtext(
                  103,
                  " Connect your wallet and we will automatically detect it."
                ),
                e.ɵɵelement(104, "br"),
                e.ɵɵtext(
                  105,
                  " You can check all the benefits of being a $SELEN holder "
                ),
                e.ɵɵelementStart(106, "a", 43),
                e.ɵɵtext(107, "here"),
                e.ɵɵelementEnd(),
                e.ɵɵtext(108, "."),
                e.ɵɵelementEnd()()()()),
                2 & i &&
                  (e.ɵɵadvance(1),
                  e.ɵɵproperty("showLoader", r.headerLoader)("overlay", !0),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty("src", r.swapForm.image, e.ɵɵsanitizeUrl),
                  e.ɵɵadvance(5),
                  e.ɵɵtextInterpolate(r.returnCorrectName(r.swapForm.name)),
                  e.ɵɵadvance(3),
                  e.ɵɵproperty("ngIf", "eth" == r.currentChain),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", "polygon" == r.currentChain),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", "avalanche" == r.currentChain),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", "bsc" == r.currentChain),
                  e.ɵɵadvance(3),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.tokenInfo &&
                      null !=
                        (null == r.tokenInfo ? null : r.tokenInfo.coingecko_url)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.tokenInfo &&
                      null != (null == r.tokenInfo ? null : r.tokenInfo.cmc_url)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.tokenInfo &&
                      "" !=
                        (null == r.tokenInfo ||
                        null == r.tokenInfo.dextools_info ||
                        null == r.tokenInfo.dextools_info.data ||
                        null == r.tokenInfo.dextools_info.data.socialInfo
                          ? null
                          : r.tokenInfo.dextools_info.data.socialInfo.telegram)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.tokenInfo &&
                      "" !=
                        (null == r.tokenInfo ||
                        null == r.tokenInfo.dextools_info ||
                        null == r.tokenInfo.dextools_info.data ||
                        null == r.tokenInfo.dextools_info.data.socialInfo
                          ? null
                          : r.tokenInfo.dextools_info.data.socialInfo.twitter)
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.tokenInfo &&
                      "" !=
                        (null == r.tokenInfo ||
                        null == r.tokenInfo.dextools_info ||
                        null == r.tokenInfo.dextools_info.data ||
                        null == r.tokenInfo.dextools_info.data.socialInfo
                          ? null
                          : r.tokenInfo.dextools_info.data.socialInfo.website)
                  ),
                  e.ɵɵadvance(6),
                  e.ɵɵproperty("ngIf", null != r.dexscreener),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", null == r.dexscreener),
                  e.ɵɵadvance(5),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.dexscreener && null != r.dexscreener.pairs[0].fdv
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.dexscreener || null == r.dexscreener.pairs[0].fdv
                  ),
                  e.ɵɵadvance(5),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.dexscreener &&
                      null != r.dexscreener.pairs[0].liquidity.usd
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.dexscreener ||
                      null == r.dexscreener.pairs[0].liquidity.usd
                  ),
                  e.ɵɵadvance(5),
                  e.ɵɵproperty(
                    "showLoader",
                    null == r.goplus || null == r.goplus.buy_tax
                  )("overlay", !0),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.goplus && null != r.goplus.buy_tax
                  ),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty(
                    "ngIf",
                    null == r.goplus || null == r.goplus.buy_tax
                  ),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty(
                    "ngIf",
                    null != r.goplus && null != r.goplus.holder_count
                  ),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngIf", null != r.dexscreener),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", null == r.dexscreener),
                  e.ɵɵadvance(5),
                  e.ɵɵproperty("ngIf", null != r.dexscreener),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", null == r.dexscreener),
                  e.ɵɵadvance(4),
                  e.ɵɵproperty("ngIf", null != r.dexscreener),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", null == r.dexscreener),
                  e.ɵɵadvance(3),
                  e.ɵɵclassProp("active", r.isTransactionSummary),
                  e.ɵɵadvance(2),
                  e.ɵɵclassProp("active", !r.isTransactionSummary),
                  e.ɵɵadvance(2),
                  e.ɵɵproperty("ngIf", r.isTransactionSummary),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.isTransactionSummary),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.isTransactionSummary),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", !r.isTransactionSummary),
                  e.ɵɵadvance(7),
                  e.ɵɵproperty("ngIf", !r.showPremiumInfo),
                  e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.showPremiumInfo),
                  e.ɵɵadvance(15),
                  e.ɵɵtextInterpolate1("", r.premiumToken, " $SELEN"));
            },
            dependencies: [
              m.sg,
              m.O5,
              v.NgSelectOption,
              v.ɵNgSelectMultipleOption,
              v.SelectControlValueAccessor,
              v.NgControlStatus,
              v.NgModel,
              Le.kM,
              Od,
              Md,
            ],
            styles: [
              '@charset "UTF-8";[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.delimiter[_ngcontent-%COMP%]{margin:0 0 15px;background:var(--transaparent-line)}.info-line[_ngcontent-%COMP%]{display:flex;grid-gap:20px;justify-content:space-between;min-height:21px;font-weight:500;font-size:16px}.info-line[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:23px;height:23px}.info-line[_ngcontent-%COMP%]:not(:last-child){margin-bottom:10px}.info-line_mb[_ngcontent-%COMP%]{margin-bottom:14px!important}.info-line__value[_ngcontent-%COMP%]{display:flex;grid-gap:8px;align-items:center}.info-line__value[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{height:19px}.info-line__value[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;width:19px;height:19px}.info-line__value_green[_ngcontent-%COMP%]{color:var(--primary-color)}.info-line__value_yellow[_ngcontent-%COMP%]{color:#f3ba2f}.info-line__value_red[_ngcontent-%COMP%]{color:#e83e3f}.title[_ngcontent-%COMP%]{display:flex;grid-gap:13px;align-items:center}app-price-impact-info-line[_ngcontent-%COMP%]{display:block}app-price-impact-info-line[_ngcontent-%COMP%]:not(:last-child){margin-bottom:10px}@media (max-width: 490px){.info-line[_ngcontent-%COMP%]{flex-direction:column;grid-gap:8px}.info-line[_ngcontent-%COMP%]:not(:last-child){margin-bottom:20px}.title[_ngcontent-%COMP%]{grid-gap:9px}app-price-impact-info-line[_ngcontent-%COMP%]:not(:last-child){margin-bottom:20px}}.route-value__icon-next[_ngcontent-%COMP%]{width:8px!important;height:14px!important}body.hide-unused-ui   [_nghost-%COMP%]{display:none}#dexscreener-embed[_ngcontent-%COMP%]{position:relative;width:100%;padding-bottom:125%}@media (min-width: 1400px){#dexscreener-embed[_ngcontent-%COMP%]{padding-bottom:65%}}#dexscreener-embed[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;border:0}.badge[_ngcontent-%COMP%]{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:middle;background:#0d0d0d;border-radius:10px;margin-right:5px;margin-left:5px;border:1px solid rgba(255,255,255,.1490196078)}.badge-title[_ngcontent-%COMP%]{font-weight:400;margin-bottom:5px;color:#cacdd0}.badge-text[_ngcontent-%COMP%]{font-size:18px;font-weight:600}.top-bar[_ngcontent-%COMP%]{box-shadow:0 4px 30px #0000001a;padding:10px 5px;position:relative;margin-left:10px}.mid-bar[_ngcontent-%COMP%]{border-top:1px solid rgba(255,255,255,.1490196078);padding-top:10px;display:flex;justify-content:space-between}.custom-select-wrapper[_ngcontent-%COMP%], .custom-btn-wrapper[_ngcontent-%COMP%]{position:relative;display:inline-block;width:200px;max-width:-moz-fit-content;max-width:fit-content;border-radius:7px;max-height:45px;margin-right:10px}.token-logo[_ngcontent-%COMP%]{border-radius:50%;margin-top:auto;margin-bottom:auto}.mb-10[_ngcontent-%COMP%]{width:25%;justify-content:start!important}.custom-select[_ngcontent-%COMP%]{-webkit-appearance:none;appearance:none;color:#fff;background:#0d0d0d;border:1px solid rgba(255,255,255,.1490196078);padding:12px 10px 10px;width:100%;border-radius:5px;font-size:16px;margin-right:20px;height:100%}.custom-select-wrapper[_ngcontent-%COMP%]:after{content:"\\25bc";position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;color:#fff}.custom-btn-wrapper[_ngcontent-%COMP%]:after{content:"\\2197";position:absolute;right:10px;top:50%;transform:translateY(-50%);pointer-events:none;color:#fff}a.custom-select[_ngcontent-%COMP%]{display:block;text-decoration:none}.name-wrapper[_ngcontent-%COMP%]{margin-left:10px;margin-top:auto;margin-bottom:auto}.name[_ngcontent-%COMP%]{font-weight:800;font-size:100%;font-size:1.3vw;margin-top:5px;color:#fffffe;text-align:left;flex-direction:column}.right-bar[_ngcontent-%COMP%]{width:25%;justify-content:end;margin-right:25px}.information-wrapper[_ngcontent-%COMP%]{border-top:1px solid rgba(255,255,255,.1490196078);min-height:150px}.blue[_ngcontent-%COMP%]{border:1px solid #05a3c9!important}.etherscan[_ngcontent-%COMP%]{border:1px solid white;border-radius:50%;background:white;width:25.5px!important;height:25.5px!important;margin-left:10px}.website[_ngcontent-%COMP%]{background:black}.top-bar[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{display:flex;font-size:30px}.buttons-change[_ngcontent-%COMP%]{max-width:-moz-fit-content;max-width:fit-content;background:#0d0d0d;border-radius:7px;margin-left:10px;margin-bottom:10px;padding:5px 2.5px;border:1px solid rgba(255,255,255,.1490196078);max-height:45px}.buttons-change[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{cursor:pointer;color:#9eb0c7;margin-left:5px;margin-right:5px;font-size:14px;padding:5px;font-weight:400}.buttons-change[_ngcontent-%COMP%]   button.active[_ngcontent-%COMP%]{padding:10px;color:#fff;background:#0d1217;border-radius:5px}.transaction-info__header[_ngcontent-%COMP%]{display:flex;align-items:baseline;justify-content:center;width:100%;color:var(--primary-color);font-size:16px;line-height:22px;border-bottom:0;border-radius:20px}.transaction-info__header-hint[_ngcontent-%COMP%]{width:20px;height:20px;margin-right:12px}.transaction-info__header-arrow[_ngcontent-%COMP%]{width:13px;margin-left:12px;transition:.2s ease-in-out}.transaction-info__header-arrow_opened[_ngcontent-%COMP%]{transform:rotate(180deg)}.transaction-info._no-padding[_ngcontent-%COMP%]     .header{padding:0}.transaction-info[_ngcontent-%COMP%]     .header{background:transparent!important;border-bottom:0;border-radius:20px}.transaction-info[_ngcontent-%COMP%]     .content{padding:0 24px 24px}.transaction-info[_ngcontent-%COMP%]    >.wrapper{background:transparent!important;border-color:unset;border-radius:20px}.transaction-info__opened[_ngcontent-%COMP%]    >.wrapper{background:var(--form-background)!important}.flex[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.metamask[_ngcontent-%COMP%]{width:25px!important;height:25px!important;margin-left:10px;cursor:pointer}.column[_ngcontent-%COMP%]{flex-direction:column;margin-left:10px;margin-right:10px}.price[_ngcontent-%COMP%]{text-align:right;font-size:33px;color:#fff;font-weight:500;margin-top:15px}.price-range[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;background-color:#0d0d0d;border-radius:10px;margin-left:auto;font-size:.8em;padding:2.5px 5px;display:flex;border:1px solid rgba(255,255,255,.1490196078)}.range[_ngcontent-%COMP%]{display:flex}.range[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-right:2.5px;margin-left:2.5px}.tui-accordion-item[_ngcontent-%COMP%]{padding:10px}.positive[_ngcontent-%COMP%], .negative[_ngcontent-%COMP%]{display:flex}.positive[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%], .negative[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:20px;height:20px}.negative[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{fill:#f44336}.negative[_ngcontent-%COMP%]{color:#f44336}.to-the-right[_ngcontent-%COMP%]{display:flex;justify-content:end}h3[_ngcontent-%COMP%]{color:gray;cursor:pointer}.active[_ngcontent-%COMP%]{color:#fff}.price-tag[_ngcontent-%COMP%]{margin-top:10px;color:#4dafd6;font-size:24px}.symbol[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;border-radius:10px;font-size:14px;font-weight:450;font-size:24px}.manor-info[_ngcontent-%COMP%]{color:#fff;font-size:14px}.minor-info[_ngcontent-%COMP%]{font-size:18px}.positive[_ngcontent-%COMP%], .green[_ngcontent-%COMP%]{color:#2dd36f}.warning[_ngcontent-%COMP%], .red[_ngcontent-%COMP%]{color:#f56565}.info-wrapper[_ngcontent-%COMP%]{display:flex;justify-content:space-between;font-size:16px;margin:5px;padding:10px 15px 10px 10px;border:1px solid #2dd36f;border-radius:30px;width:-moz-fit-content;width:fit-content;cursor:pointer;max-height:40px}.info-wrapper[_ngcontent-%COMP%]:hover{transform:scale(1.05);transition:.5s}.holder-text[_ngcontent-%COMP%]{display:flex;justify-content:space-between;background:#0d0d0d;padding-right:5px;padding-left:5px;margin-bottom:10px;margin-top:5px;border-radius:5px}.bubble-wrapper[_ngcontent-%COMP%], .chart-wrapper[_ngcontent-%COMP%]{position:relative;min-height:600px}.tx-footer[_ngcontent-%COMP%]{width:100%;font-size:24px;position:absolute;bottom:0;text-align:center;background:black;padding-top:15px}.btn-action[_ngcontent-%COMP%]{width:100%;justify-content:center;padding:20px;width:95%;margin:auto auto 10px;border-radius:30px;border:2px solid rgb(132,61,248);font-size:29px;cursor:pointer;background:black;font-weight:600}.ballon-wrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;justify-content:flex-start;margin:10px}.info-wrapper[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{margin-right:5px;width:25px}.info-wrapper.red[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:20px}.info-wrapper.red[_ngcontent-%COMP%]{border-color:#f56565;color:#fff!important}.card[_ngcontent-%COMP%]{width:50%;border-radius:10px;border:1px solid rgba(255,255,255,.1490196078);max-height:350px;overflow:auto;margin-left:15px;margin-right:15px;padding:10px;display:flex;flex-direction:column;justify-content:space-between}.card[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{margin-top:0;font-weight:100;font-size:14px;margin-bottom:15px}.second-wrapper[_ngcontent-%COMP%]{display:flex}.bg-black[_ngcontent-%COMP%]{background-color:#0d0d0d}.w-full[_ngcontent-%COMP%]{width:100%}.rounded[_ngcontent-%COMP%]{border-radius:.25rem}.mt-2[_ngcontent-%COMP%]{margin-top:.5rem}.p-2[_ngcontent-%COMP%]{padding:.5rem}.max-w-full[_ngcontent-%COMP%]{max-width:100%}.bg-blue-500[_ngcontent-%COMP%]{background-color:#a33d00}.swaps-info[_ngcontent-%COMP%]{color:var(--primary-text)}.swaps-info__title[_ngcontent-%COMP%]{margin:0;font-weight:700;font-size:21px;line-height:125%}@media (max-width: 1200px){.iframe-wrapper[_ngcontent-%COMP%]   iframe[_ngcontent-%COMP%]{height:1000px}token-search-bar[_ngcontent-%COMP%]{width:80%}.top-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.5rem 1rem;cursor:pointer;font-size:12px}#middle[_ngcontent-%COMP%]{display:none}#top[_ngcontent-%COMP%]{display:block;width:80%;margin:30px auto}.centralized[_ngcontent-%COMP%]{margin:0 auto}.name-link[_ngcontent-%COMP%]{margin:auto;justify-content:center;width:100%}.badge[_ngcontent-%COMP%]{margin-bottom:10px}.top-bar[_ngcontent-%COMP%]   .price[_ngcontent-%COMP%]{margin-bottom:5px;margin-top:10px}.logo[_ngcontent-%COMP%]{margin:auto}.token-information[_ngcontent-%COMP%]{flex-direction:column}.row[_ngcontent-%COMP%]{flex-direction:row!important}.button[_ngcontent-%COMP%]{font-size:14px}.top-right[_ngcontent-%COMP%]{justify-content:center}.top-wrap[_ngcontent-%COMP%]{display:flex;flex-direction:column-reverse}.name[_ngcontent-%COMP%]{font-size:16px}.name-link[_ngcontent-%COMP%]{flex-direction:row}.name-link[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:first-child{margin-left:-10px}.symbol[_ngcontent-%COMP%]{padding:0}}@media (max-width: 1200px){.top-bar[_ngcontent-%COMP%]{flex-direction:column;justify-content:center}.top-bar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:auto 0}.top-bar[_ngcontent-%COMP%]   .flex[_ngcontent-%COMP%]{justify-content:center}.right-bar[_ngcontent-%COMP%]{width:100%;margin-right:10px}.price[_ngcontent-%COMP%]{text-align:center!important}.button[_ngcontent-%COMP%]{padding:.55rem 1rem}.price-range[_ngcontent-%COMP%]{margin:auto auto 10px}.mb-10[_ngcontent-%COMP%]{margin-bottom:10px}.top-bar[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%]{font-size:26px}.symbol[_ngcontent-%COMP%]{font-size:22px}.price[_ngcontent-%COMP%]{font-size:28px}}@media (max-width: 1200px){.main-container[_ngcontent-%COMP%]{overflow:auto;overflow-x:hidden}}@media (max-width: 900px){.mb-10[_ngcontent-%COMP%]{justify-content:center!important;width:100%}.name-link[_ngcontent-%COMP%]{display:flex}.name-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{margin-right:5px;margin-left:5px}.badges-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center}.column[_ngcontent-%COMP%]{margin:0}.info-wrapper[_ngcontent-%COMP%]{font-size:12px;padding:5px 10px 5px 5px;max-height:30px}.buttons-change[_ngcontent-%COMP%]   button[_ngcontent-%COMP%], .custom-btn-wrapper[_ngcontent-%COMP%]{font-size:12px}#dexscreener-embed[_ngcontent-%COMP%]{min-height:800px}.second-wrapper[_ngcontent-%COMP%]{flex-direction:column}.card[_ngcontent-%COMP%]{width:90%;margin:10px auto}.btn-action[_ngcontent-%COMP%]{font-size:16px}}.btn-close[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:30px;height:30px}app-rubic-footer[_ngcontent-%COMP%]{margin-top:30px}.popup-check-registered[_ngcontent-%COMP%]{padding-top:30px;text-align:center;font-weight:400}.ai-audit-info[_ngcontent-%COMP%]{text-align:center}',
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function __(n, a) {
        1 & n && e.ɵɵelement(0, "img", 3);
      }
      function u_(n, a) {
        1 & n && e.ɵɵelement(0, "img", 4);
      }
      let g_ = (() => {
          class n {
            constructor() {
              this.switcherClick = new e.EventEmitter();
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-form-switcher"]],
              outputs: { switcherClick: "switcherClick" },
              decls: 3,
              vars: 0,
              consts: [
                [1, "switcher", 3, "click"],
                [
                  "src",
                  "assets/images/icons/switch-icon.svg",
                  "alt",
                  "Switch swaps",
                  4,
                  "noFrame",
                ],
                [
                  "class",
                  "switcher__iframe-arrow",
                  "src",
                  "assets/images/icons/arrow/long-arrow-right.svg",
                  "alt",
                  "Switch swaps",
                  4,
                  "onlyFrame",
                ],
                [
                  "src",
                  "assets/images/icons/switch-icon.svg",
                  "alt",
                  "Switch swaps",
                ],
                [
                  "src",
                  "assets/images/icons/arrow/long-arrow-right.svg",
                  "alt",
                  "Switch swaps",
                  1,
                  "switcher__iframe-arrow",
                ],
              ],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "button", 0),
                  e.ɵɵlistener("click", function () {
                    return r.switcherClick.emit();
                  }),
                  e.ɵɵtemplate(1, __, 1, 0, "img", 1),
                  e.ɵɵtemplate(2, u_, 1, 0, "img", 2),
                  e.ɵɵelementEnd());
              },
              dependencies: [me.a, Me.T],
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}body.hide-unused-ui   [_nghost-%COMP%]{display:none}.switcher[_ngcontent-%COMP%]{z-index:9;display:flex;box-sizing:content-box;padding:0;background-color:var(--form-background);border-radius:67px;cursor:pointer;position:relative}html.iframe[_nghost-%COMP%]   .switcher[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .switcher[_ngcontent-%COMP%]{height:30px;background-color:unset}.switcher[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:auto}html.iframe-vertical[_nghost-%COMP%]   .switcher__iframe-arrow[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .switcher__iframe-arrow[_ngcontent-%COMP%]{transform:rotate(90deg)}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })(),
        h_ = (() => {
          class n {
            constructor(t) {
              (this.swapTypeService = t),
                (this.isLimitOrder$ = this.swapTypeService.swapMode$.pipe(
                  (0, x.U)((i) => i === S.V.LIMIT_ORDER)
                ));
            }
            set amountOfTokens(t) {
              this.amountsArray = this.getAmounts(t);
            }
            getAmounts(t) {
              return t.split("").map((i) =>
                Number.isNaN(Number(i))
                  ? i
                  : new Array(Number(i) + 1)
                      .fill(null)
                      .map((s, c) => c)
                      .reverse()
                      .join(" ")
              );
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵdirectiveInject(ae.H));
            });
            static #t = (this.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["app-platform-tokens-amount"]],
              inputs: { amountOfTokens: "amountOfTokens" },
              decls: 2,
              vars: 0,
              consts: [[1, "platform-tokens-amount"]],
              template: function (i, r) {
                1 & i &&
                  (e.ɵɵelementStart(0, "h3", 0),
                  e.ɵɵtext(1, " Swap\n"),
                  e.ɵɵelementEnd());
              },
              styles: [
                "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.platform-tokens-amount[_ngcontent-%COMP%]{margin:0;font-weight:400;font-size:18px;letter-spacing:.7px}@media (max-width: 420px){.platform-tokens-amount[_ngcontent-%COMP%]{max-width:170px}}.platform-tokens-amount__container[_ngcontent-%COMP%]{display:inline-flex;max-height:18px;overflow:hidden}.platform-tokens-amount_inner-container[_ngcontent-%COMP%]{display:flex;align-items:baseline;color:var(--primary-color)}.platform-tokens-amount_inner-container[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:11px;text-align:center}.platform-tokens-amount_inner-container[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:nth-child(3){width:6px}.platform-tokens-amount_inner-container[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:nth-child(2n){animation:_ngcontent-%COMP%_slide .9s ease-out}.platform-tokens-amount_inner-container[_ngcontent-%COMP%] > span[_ngcontent-%COMP%]:nth-child(2n+1){animation:_ngcontent-%COMP%_slide .7s ease-out}@keyframes _ngcontent-%COMP%_slide{0%{transform:translateY(-100%)}to{transform:translateY(0)}}",
              ],
              changeDetection: 0,
            }));
          }
          return n;
        })();
      function f_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelement(1, "img", 9),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet;
          e.ɵɵadvance(1),
            e.ɵɵproperty("src", t.icon, e.ɵɵsanitizeUrl)("alt", t.label);
        }
      }
      function v_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtext(1, " \u2192 "),
            e.ɵɵelementStart(2, "span"),
            e.ɵɵtext(3),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵadvance(3), e.ɵɵtextInterpolate(t.label);
        }
      }
      function C_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 5),
            e.ɵɵelement(1, "img", 10),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet;
          e.ɵɵadvance(1),
            e.ɵɵproperty("src", t.icon, e.ɵɵsanitizeUrl)("alt", t.label);
        }
      }
      function x_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵelementStart(1, "div", 4)(2, "div", 5),
            e.ɵɵtemplate(3, f_, 2, 2, "ng-container", 3),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div", 6)(5, "span"),
            e.ɵɵtext(6),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(7, v_, 4, 1, "ng-container", 7),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(8, C_, 2, 2, "div", 8),
            e.ɵɵelementEnd(),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext().ngLet,
            r = e.ɵɵnextContext().ngLet,
            s = e.ɵɵnextContext(2);
          e.ɵɵadvance(3),
            e.ɵɵproperty("ngLet", s.getFirstBlockchainItem(r, i)),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(r.label),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !t);
        }
      }
      function b_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, x_, 9, 4, "ng-container", 3),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.isLimitOrder$));
        }
      }
      function y_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, b_, 3, 3, "ng-container", 3),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.toBlockchainItem$));
        }
      }
      function S_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 2),
            e.ɵɵtemplate(1, y_, 3, 3, "ng-container", 3),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 1, t.fromBlockchainItem$));
        }
      }
      function T_(n, a) {
        1 & n && e.ɵɵelement(0, "app-platform-tokens-amount", 11),
          2 & n && e.ɵɵproperty("amountOfTokens", "15,000+");
      }
      let O_ = (() => {
        class n {
          constructor(t, i) {
            (this.swapTypeService = t),
              (this.swapFormService = i),
              (this.showBlockchains$ = this.swapFormService.inputValue$.pipe(
                (0, x.U)((r) =>
                  this.swapTypeService.getSwapProviderType() === S.V.LIMIT_ORDER
                    ? (0, de.$v)(r.fromAsset) || r.toToken
                    : (0, de.$v)(r.fromAsset) && r.toToken
                )
              )),
              (this.fromBlockchainItem$ =
                this.swapFormService.fromBlockchain$.pipe((0, x.U)(un))),
              (this.toBlockchainItem$ = this.swapFormService.toBlockchain$.pipe(
                (0, x.U)(un)
              )),
              (this.swapType$ = this.swapTypeService.swapMode$.pipe(
                (0, x.U)((r) => {
                  if (r)
                    return {
                      [S.V.INSTANT_TRADE]: "Instant Trade",
                      [S.V.CROSS_CHAIN_ROUTING]: "Cross-Chain",
                      [S.V.ONRAMPER]: "Onramper",
                      [S.V.LIMIT_ORDER]: "Limit Order",
                    }[r];
                })
              )),
              (this.isLimitOrder$ = this.swapTypeService.swapMode$.pipe(
                (0, x.U)((r) => r === S.V.LIMIT_ORDER)
              ));
          }
          getFirstBlockchainItem(t, i) {
            return this.swapTypeService.getSwapProviderType() ===
              S.V.LIMIT_ORDER && this.swapFormService.inputValue.toToken
              ? i
              : t;
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(ae.H),
              e.ɵɵdirectiveInject(E.q)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-form-header"]],
            decls: 4,
            vars: 4,
            consts: [
              ["class", "swaps-header", 4, "ngIf", "ngIfElse"],
              ["text", ""],
              [1, "swaps-header"],
              [4, "ngLet"],
              [1, "swaps-header__icons"],
              [1, "swaps-header__icon-wrapper"],
              [1, "swaps-header__name"],
              [4, "ngIf"],
              ["class", "swaps-header__icon-wrapper", 4, "ngIf"],
              [1, "swaps-header__blockchain-from", 3, "src", "alt"],
              [1, "swaps-header__blockchain-to", 3, "src", "alt"],
              [3, "amountOfTokens"],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵtemplate(0, S_, 3, 3, "div", 0),
                  e.ɵɵpipe(1, "async"),
                  e.ɵɵtemplate(
                    2,
                    T_,
                    1,
                    1,
                    "ng-template",
                    null,
                    1,
                    e.ɵɵtemplateRefExtractor
                  )),
                2 & i)
              ) {
                const s = e.ɵɵreference(3);
                e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(1, 2, r.showBlockchains$))(
                  "ngIfElse",
                  s
                );
              }
            },
            dependencies: [m.O5, F.e, h_, m.Ov],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.swaps-header[_ngcontent-%COMP%]{position:relative;display:flex;align-items:center}.swaps-header__icons[_ngcontent-%COMP%]{display:flex}.swaps-header__icons[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:30px;height:30px}.swaps-header__icon-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:35px;height:35px;background:var(--form-background);border-radius:50%}.swaps-header__icon-wrapper[_ngcontent-%COMP%]:nth-child(2){margin-left:-15px}.swaps-header__icon-wrapper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border-radius:50%}.swaps-header__title[_ngcontent-%COMP%]{margin-left:12px;color:var(--primary-text);font-weight:500;font-size:16px}.swaps-header__name[_ngcontent-%COMP%]{color:var(--secondary-text);font-size:14px}.swaps-header__name[_ngcontent-%COMP%]{margin:auto 10px;color:#fff!important}.swaps-header__icons[_ngcontent-%COMP%]{background:#7555EE!important;border-radius:30px}.swaps-header__icon-wrapper[_ngcontent-%COMP%]{margin-right:-3px;margin-left:-3px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      const qi = function (n) {
        return { "slippage__button-auto_active": n };
      };
      function P_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "form", 4)(1, "div", 5)(2, "div", 6)(3, "div", 7)(
            4,
            "label"
          ),
            e.ɵɵtext(5),
            e.ɵɵpipe(6, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelement(7, "div", 8),
            e.ɵɵpipe(8, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "div", 9)(10, "button", 10),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.toggleAutoSlippageTolerance());
            }),
            e.ɵɵtext(11, " Auto "),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(12, "tui-input-number", 11),
            e.ɵɵtext(13, "0.15% "),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(14, "div", 12)(15, "label"),
            e.ɵɵtext(16),
            e.ɵɵpipe(17, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelement(18, "div", 8),
            e.ɵɵpipe(19, "translate"),
            e.ɵɵelement(20, "tui-toggle", 13),
            e.ɵɵelementEnd()()();
        }
        if (2 & n) {
          const t = a.ngLet;
          e.ɵɵproperty("formGroup", t),
            e.ɵɵadvance(5),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(6, 13, "settings.instantTrades.slippageTitle")
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(8, 15, "settings.instantTrades.slippage")
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(21, qi, t.controls.autoSlippageTolerance.value)
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("tuiTextfieldLabelOutside", !0)(
              "tuiTextfieldSize",
              "s"
            )("max", 50)("min", 0.1)("postfix", "%"),
            e.ɵɵadvance(4),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(
                17,
                17,
                "settings.instantTrades.showReceiverAddressTitle"
              )
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(
                19,
                19,
                "settings.instantTrades.showReceiverAddress"
              )
            );
        }
      }
      function w_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵtemplate(1, P_, 21, 23, "form", 3),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1), e.ɵɵproperty("ngLet", t.crossChainForm);
        }
      }
      function k_(n, a) {
        1 & n &&
          (e.ɵɵelementContainerStart(0),
          e.ɵɵelementStart(1, "div", 12)(2, "label"),
          e.ɵɵtext(3),
          e.ɵɵpipe(4, "translate"),
          e.ɵɵelementEnd(),
          e.ɵɵelement(5, "div", 8),
          e.ɵɵpipe(6, "translate"),
          e.ɵɵelement(7, "tui-toggle", 15),
          e.ɵɵelementEnd(),
          e.ɵɵelementStart(8, "div", 12)(9, "label"),
          e.ɵɵtext(10),
          e.ɵɵpipe(11, "translate"),
          e.ɵɵelementEnd(),
          e.ɵɵelement(12, "div", 8),
          e.ɵɵpipe(13, "translate"),
          e.ɵɵelement(14, "tui-toggle", 16),
          e.ɵɵelementEnd(),
          e.ɵɵelementContainerEnd()),
          2 & n &&
            (e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(4, 6, "settings.instantTrades.multihopsTitle")
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(6, 8, "settings.instantTrades.multihops")
            ),
            e.ɵɵadvance(5),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(11, 10, "settings.instantTrades.autoRefreshTitle")
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(13, 12, "settings.instantTrades.autoRefresh")
            ));
      }
      function A_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "form", 4)(1, "div", 5)(2, "div", 6)(3, "div", 7)(
            4,
            "label"
          ),
            e.ɵɵtext(5),
            e.ɵɵpipe(6, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelement(7, "div", 8),
            e.ɵɵpipe(8, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "div", 9)(10, "button", 10),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(2);
              return e.ɵɵresetView(r.toggleAutoSlippageTolerance());
            }),
            e.ɵɵtext(11, " Auto "),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(12, "tui-input-number", 11),
            e.ɵɵtext(13, "0.15% "),
            e.ɵɵelementEnd()()()(),
            e.ɵɵelementStart(14, "div", 5),
            e.ɵɵtemplate(15, k_, 15, 14, "ng-container", 14),
            e.ɵɵelementStart(16, "div", 12)(17, "label"),
            e.ɵɵtext(18),
            e.ɵɵpipe(19, "translate"),
            e.ɵɵelementEnd(),
            e.ɵɵelement(20, "div", 8),
            e.ɵɵpipe(21, "translate"),
            e.ɵɵelement(22, "tui-toggle", 13),
            e.ɵɵelementEnd()()();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵproperty("formGroup", t),
            e.ɵɵadvance(5),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(6, 14, "settings.instantTrades.slippageTitle")
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(8, 16, "settings.instantTrades.slippage")
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(22, qi, t.controls.autoSlippageTolerance.value)
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("tuiTextfieldLabelOutside", !0)(
              "tuiTextfieldSize",
              "s"
            )("max", 50)("min", 0.1)("postfix", "%"),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngIf", !i.isCrossChain),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(
              e.ɵɵpipeBind1(
                19,
                18,
                "settings.instantTrades.showReceiverAddressTitle"
              )
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("inlineSVG", "/assets/images/icons/hint.svg")(
              "tuiHint",
              e.ɵɵpipeBind1(
                21,
                20,
                "settings.instantTrades.showReceiverAddress"
              )
            );
        }
      }
      function M_(n, a) {
        if ((1 & n && e.ɵɵtemplate(0, A_, 23, 24, "form", 3), 2 & n)) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("ngLet", t.onChainForm);
        }
      }
      let E_ = (() => {
        class n {
          constructor(t, i) {
            (this.context = t),
              (this.destroy$ = i),
              (this.settingsService = this.context.content.injector.get(ve)),
              (this.swapService = this.context.content.injector.get(ae.H)),
              (this.cdr = this.context.content.injector.get(
                e.ChangeDetectorRef
              )),
              (this.onChainForm = this.settingsService.instantTrade),
              (this.crossChainForm = this.settingsService.crossChainRouting),
              (this.isCrossChain =
                this.swapService.swapMode === S.V.CROSS_CHAIN_ROUTING),
              (this.autoSlippageTolerance =
                this.form.controls.autoSlippageTolerance.value),
              this.form.controls.slippageTolerance.valueChanges
                .pipe((0, P.R)(this.destroy$))
                .subscribe(() => {
                  this.form.getRawValue().autoSlippageTolerance &&
                    this.form.patchValue({ autoSlippageTolerance: !1 });
                });
          }
          get form() {
            return this.swapService.swapMode === S.V.INSTANT_TRADE
              ? this.onChainForm
              : this.crossChainForm;
          }
          toggleAutoSlippageTolerance() {
            this.form.getRawValue().autoSlippageTolerance
              ? this.form.patchValue({ autoSlippageTolerance: !1 })
              : this.form.patchValue({
                  slippageTolerance: this.isCrossChain
                    ? this.settingsService.defaultCcrSettings.slippageTolerance
                    : this.settingsService.defaultItSettings.slippageTolerance,
                  autoSlippageTolerance: !0,
                }),
              this.cdr.detectChanges();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(L.yf),
              e.ɵɵdirectiveInject(w.a3, 2)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-iframe-settings"]],
            features: [e.ɵɵProvidersFeature([w.a3])],
            decls: 4,
            vars: 2,
            consts: [
              [1, "iframe-settings"],
              [4, "ngIf", "ngIfElse"],
              ["onChain", ""],
              [
                "class",
                "iframe-settings__container",
                3,
                "formGroup",
                4,
                "ngLet",
              ],
              [1, "iframe-settings__container", 3, "formGroup"],
              [1, "iframe-settings__column"],
              [1, "iframe-settings__row", "slippage"],
              [1, "slippage__head"],
              [1, "iframe-settings__hint", 3, "inlineSVG", "tuiHint"],
              [1, "slippage__body"],
              [1, "slippage__button-auto", 3, "ngClass", "click"],
              [
                "id",
                "slippageTolerance",
                "formControlName",
                "slippageTolerance",
                3,
                "tuiTextfieldLabelOutside",
                "tuiTextfieldSize",
                "max",
                "min",
                "postfix",
              ],
              [1, "iframe-settings__row"],
              [
                "id",
                "showReceiverAddress",
                "formControlName",
                "showReceiverAddress",
                1,
                "iframe-settings__toggle",
              ],
              [4, "ngIf"],
              [
                "id",
                "disableMultihops",
                "formControlName",
                "disableMultihops",
                1,
                "iframe-settings__toggle",
              ],
              [
                "id",
                "autoRefresh",
                "formControlName",
                "autoRefresh",
                1,
                "iframe-settings__toggle",
              ],
            ],
            template: function (i, r) {
              if (
                (1 & i &&
                  (e.ɵɵelementStart(0, "section", 0),
                  e.ɵɵtemplate(1, w_, 2, 1, "ng-container", 1),
                  e.ɵɵtemplate(
                    2,
                    M_,
                    1,
                    1,
                    "ng-template",
                    null,
                    2,
                    e.ɵɵtemplateRefExtractor
                  ),
                  e.ɵɵelementEnd()),
                2 & i)
              ) {
                const s = e.ɵɵreference(3);
                e.ɵɵadvance(1),
                  e.ɵɵproperty("ngIf", r.isCrossChain)("ngIfElse", s);
              }
            },
            dependencies: [
              m.mk,
              m.O5,
              F.e,
              v.ɵNgNoValidate,
              v.NgControlStatus,
              v.NgControlStatusGroup,
              v.FormGroupDirective,
              v.FormControlName,
              Xt.ph,
              ie,
              Ye,
              W.xT,
              W.sz,
              G.d$,
              H.D,
              R.X$,
            ],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}.iframe-settings[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;width:100%;height:100vh;margin:0 auto}.iframe-settings__container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:100%;height:180px;padding:20px 30px}html.iframe-vertical[_nghost-%COMP%]   .iframe-settings__container[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .iframe-settings__container[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start;width:350px;height:250px;margin:0 auto;padding-left:55px}html.iframe-vertical[_nghost-%COMP%]   .iframe-settings__container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, html.iframe-vertical   [_nghost-%COMP%]   .iframe-settings__container[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{margin-bottom:15px}.iframe-settings__column[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start;height:100%}.iframe-settings__column[_ngcontent-%COMP%]:not(:last-child){margin-right:40px}.iframe-settings__row[_ngcontent-%COMP%]{display:flex;align-items:center}html.iframe-vertical[_nghost-%COMP%]   .iframe-settings__row[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .iframe-settings__row[_ngcontent-%COMP%]{font-size:18px}.iframe-settings__row[_ngcontent-%COMP%]:not(:last-child){margin-bottom:15px}.iframe-settings__hint[_ngcontent-%COMP%]{height:19px;margin-right:auto;margin-left:6px;cursor:pointer}html.iframe-vertical[_nghost-%COMP%]   .iframe-settings__hint[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .iframe-settings__hint[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:start;margin-left:3px}html.iframe[_nghost-%COMP%]   .iframe-settings__hint[_ngcontent-%COMP%]     svg path, html.iframe   [_nghost-%COMP%]   .iframe-settings__hint[_ngcontent-%COMP%]     svg path{fill:var(--primary-color)}.iframe-settings__toggle[_ngcontent-%COMP%]{margin-left:10px}.slippage[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.slippage[_ngcontent-%COMP%]   tui-input-number[_ngcontent-%COMP%]{width:80px}html.iframe-vertical[_nghost-%COMP%]   .slippage[_ngcontent-%COMP%]     tui-input-number input, html.iframe-vertical   [_nghost-%COMP%]   .slippage[_ngcontent-%COMP%]     tui-input-number input{font-size:18px}.slippage__head[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:4px}.slippage__body[_ngcontent-%COMP%]{display:flex;align-items:center}.slippage__button-auto[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;box-sizing:border-box;height:32px;margin-right:10px;padding:8px 15px;background:none;border:1px solid var(--primary-text);border-radius:20px;cursor:pointer}.slippage__button-auto_active[_ngcontent-%COMP%]{color:#fff;background:var(--primary-color);border-color:var(--primary-color)}.slippage[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{padding-right:5px;color:var(--primary-text);border-radius:100px;box-shadow:none}.slippage[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input{padding-right:22px!important}.slippage[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input, .slippage[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield] input::placeholder{text-align:right}.slippage[_ngcontent-%COMP%]     input+.content .placeholder{text-align:right}.slippage[_ngcontent-%COMP%]     .wrapper{display:flex}.slippage[_ngcontent-%COMP%]     .value-decoration{margin-left:auto}.bridge-address[_ngcontent-%COMP%]{flex-direction:column;align-items:flex-start}.bridge-address__head[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:4px}.bridge-address__body[_ngcontent-%COMP%]{display:flex;align-items:center}.bridge-address[_ngcontent-%COMP%]   tui-input[_ngcontent-%COMP%]{width:100%}.bridge-address[_ngcontent-%COMP%]   tui-input.ng-invalid[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]:after{color:transparent;border-color:#d82122;opacity:.6}.bridge-address[_ngcontent-%COMP%]     tui-wrapper[data-appearance=textfield]{width:256px;padding:10px;color:var(--primary-text);font-size:14px;border-radius:100px;box-shadow:none}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      var I_ = p(89012);
      let N_ = (() => {
        class n {
          constructor(t, i) {
            (this.dialogService = t), (this.injector = i);
          }
          openSettings() {
            this.dialogService
              .open(new L.Al(E_, this.injector), { size: "fullscreen" })
              .subscribe();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(
              e.ɵɵdirectiveInject(De.RO),
              e.ɵɵdirectiveInject(e.Injector)
            );
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-iframe-settings-button"]],
            decls: 3,
            vars: 6,
            consts: [[3, "icon", "inlineSvg", "iconButtonClick"]],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵelementStart(0, "app-icon-button", 0),
                e.ɵɵlistener("iconButtonClick", function () {
                  return r.openSettings();
                }),
                e.ɵɵpipe(1, "async"),
                e.ɵɵpipe(2, "themedIcon"),
                e.ɵɵelementEnd()),
                2 & i &&
                  e.ɵɵproperty(
                    "icon",
                    e.ɵɵpipeBind1(
                      1,
                      2,
                      e.ɵɵpipeBind1(2, 4, "assets/images/icons/header/settings")
                    )
                  )("inlineSvg", !0);
            },
            dependencies: [ln.r, m.Ov, I_.S],
            styles: [
              "[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{position:absolute;top:15px;right:10px;z-index:999;display:block}app-icon-button[_ngcontent-%COMP%]     button{width:40px!important;height:40px!important}html.iframe:not(.dark)[_nghost-%COMP%]   app-icon-button[_ngcontent-%COMP%]     button svg path, html.iframe:not(.dark)   [_nghost-%COMP%]   app-icon-button[_ngcontent-%COMP%]     button svg path{fill:var(--primary-color)}app-icon-button[_ngcontent-%COMP%]     button tui-wrapper{background:var(--primary-background)}app-icon-button[_ngcontent-%COMP%]     button svg{width:19.8px;height:19.8px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function R_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 1)(1, "app-rubic-button", 2),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.navigateToSwaps());
            }),
            e.ɵɵtext(2, "Swaps"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(3, "app-rubic-button", 2),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.navigateToLimitOrder());
            }),
            e.ɵɵtext(4, "Limit Order"),
            e.ɵɵelementEnd()();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty(
              "appearance",
              t !== i.SWAP_PROVIDER_TYPE.LIMIT_ORDER ? "primary" : "secondary"
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "appearance",
              t === i.SWAP_PROVIDER_TYPE.LIMIT_ORDER ? "primary" : "secondary"
            );
        }
      }
      let D_ = (() => {
        class n {
          constructor(t) {
            (this.swapTypeService = t),
              (this.swapType$ = this.swapTypeService.swapMode$),
              (this.SWAP_PROVIDER_TYPE = S.V);
          }
          navigateToSwaps() {
            var t = this;
            return (0, O.Z)(function* () {
              yield t.swapTypeService.navigateToSwaps();
            })();
          }
          navigateToLimitOrder() {
            var t = this;
            return (0, O.Z)(function* () {
              yield t.swapTypeService.navigateToLimitOrder();
            })();
          }
          static #e = (this.ɵfac = function (i) {
            return new (i || n)(e.ɵɵdirectiveInject(ae.H));
          });
          static #t = (this.ɵcmp = e.ɵɵdefineComponent({
            type: n,
            selectors: [["app-form-navigation"]],
            decls: 2,
            vars: 3,
            consts: [
              ["class", "buttons-container", 4, "ngLet"],
              [1, "buttons-container"],
              [3, "appearance", "onClick"],
            ],
            template: function (i, r) {
              1 & i &&
                (e.ɵɵtemplate(0, R_, 5, 2, "div", 0), e.ɵɵpipe(1, "async")),
                2 & i &&
                  e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(1, 1, r.swapType$));
            },
            dependencies: [se.j, F.e, m.Ov],
            styles: [
              ".buttons-container[_ngcontent-%COMP%]{display:flex;grid-gap:8px;justify-content:center}.buttons-container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]{display:block;width:100%;max-width:160px}.buttons-container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]    {--tui-height-l: 36px}.buttons-container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]     .wrapper{padding:0}.buttons-container[_ngcontent-%COMP%]   app-rubic-button[_ngcontent-%COMP%]     .content{font-size:14px}",
            ],
            changeDetection: 0,
          }));
        }
        return n;
      })();
      function F_(n, a) {
        1 & n && e.ɵɵelement(0, "app-iframe-settings-button");
      }
      function B_(n, a) {
        1 & n && e.ɵɵelement(0, "app-form-navigation");
      }
      function H_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 20)(1, "app-back-button", 21),
            e.ɵɵlistener("onClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.closeWidget());
            }),
            e.ɵɵelementEnd()();
        }
      }
      function L_(n, a) {
        1 & n && e.ɵɵelement(0, "app-form-header", 27);
      }
      function $_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-refresh-button", 28),
            e.ɵɵlistener("onRefresh", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(4);
              return e.ɵɵresetView(r.onRefresh());
            }),
            e.ɵɵelementEnd();
        }
        if (2 & n) {
          const t = e.ɵɵnextContext(4);
          e.ɵɵproperty("isRotating$", t.isRefreshRotating$);
        }
      }
      function V_(n, a) {
        1 & n && e.ɵɵelement(0, "app-settings-container", 29);
      }
      function j_(n, a) {
        1 & n && e.ɵɵelement(0, "app-iframe-logout-button");
      }
      function z_(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "header", 22),
            e.ɵɵtemplate(1, L_, 1, 0, "app-form-header", 23),
            e.ɵɵelementStart(2, "div", 24),
            e.ɵɵtemplate(3, $_, 1, 1, "app-refresh-button", 25),
            e.ɵɵtemplate(4, V_, 1, 0, "app-settings-container", 26),
            e.ɵɵtemplate(5, j_, 1, 0, "app-iframe-logout-button", 1),
            e.ɵɵpipe(6, "async"),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngIf",
              (i.isInstantTrade || i.isCrossChainRouting || i.isOnramper) &&
                t &&
                i.allowRefresh
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !i.isOnramper && !i.isLimitOrder),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              e.ɵɵpipeBind1(6, 3, i.hideUnusedUI && i.getCurrentUser$)
            );
        }
      }
      function Y_(n, a) {
        if (
          (1 & n && e.ɵɵelement(0, "app-iframe-asset-type-indicator", 30),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵproperty("assetType", t.getFromBlockchain());
        }
      }
      function U_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-token-amount-input", 31),
            e.ɵɵlistener("amountUpdated", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.onFromAmountUpdate());
            }),
            e.ɵɵelementEnd();
        }
      }
      function W_(n, a) {
        1 & n && e.ɵɵelement(0, "app-vertical-iframe-token-amount-input");
      }
      function G_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-form-switcher", 32),
            e.ɵɵlistener("switcherClick", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext(3);
              return e.ɵɵresetView(r.revert());
            }),
            e.ɵɵelementEnd();
        }
      }
      function K_(n, a) {
        if (
          (1 & n && e.ɵɵelement(0, "app-iframe-asset-type-indicator", 30),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵproperty("assetType", t.toBlockchain);
        }
      }
      function X_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-cross-chain-bottom-form", 33),
            e.ɵɵlistener("tradeStatusChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(3);
              return e.ɵɵresetView((s.tradeStatus = r));
            }),
            e.ɵɵelementEnd();
        }
      }
      function Z_(n, a) {
        1 & n && e.ɵɵelement(0, "app-onramper-bottom-form");
      }
      function Q_(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "app-instant-trade-bottom-form", 34),
            e.ɵɵlistener("allowRefreshChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(3);
              return e.ɵɵresetView((s.allowRefresh = r));
            })("instantTradeInfoChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(3);
              return e.ɵɵresetView((s.currentInstantTradeInfo = r));
            })("tradeStatusChange", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext(3);
              return e.ɵɵresetView((s.tradeStatus = r));
            }),
            e.ɵɵelementEnd();
        }
      }
      function J_(n, a) {
        1 & n && e.ɵɵelement(0, "app-onramper-widget");
      }
      function q_(n, a) {
        if (
          (1 & n && e.ɵɵelement(0, "app-limit-order-bottom-form", 35), 2 & n)
        ) {
          const t = e.ɵɵnextContext(3);
          e.ɵɵproperty("fromAmountUpdated$", t.fromAmountUpdated$);
        }
      }
      const eu = function (n) {
          return { "background-color": n };
        },
        tu = function (n, a) {
          return { "swap-form_extended": n, "swap-form_limit-order": a };
        },
        nu = function (n) {
          return { "swap-form__delimiter_full": n };
        };
      function iu(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 6),
            e.ɵɵtemplate(1, H_, 2, 0, "div", 7),
            e.ɵɵelementStart(2, "div", 8),
            e.ɵɵtemplate(3, z_, 7, 5, "header", 9),
            e.ɵɵelementStart(4, "main", 10)(5, "div", 11),
            e.ɵɵtemplate(6, Y_, 1, 1, "app-iframe-asset-type-indicator", 12),
            e.ɵɵtemplate(7, U_, 1, 0, "app-token-amount-input", 13),
            e.ɵɵtemplate(
              8,
              W_,
              1,
              0,
              "app-vertical-iframe-token-amount-input",
              0
            ),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "div", 14),
            e.ɵɵtemplate(10, G_, 1, 0, "app-form-switcher", 15),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(11, "div", 16),
            e.ɵɵtemplate(12, K_, 1, 1, "app-iframe-asset-type-indicator", 12),
            e.ɵɵtemplate(13, X_, 1, 0, "app-cross-chain-bottom-form", 17),
            e.ɵɵtemplate(14, Z_, 1, 0, "app-onramper-bottom-form", 1),
            e.ɵɵtemplate(15, Q_, 1, 0, "app-instant-trade-bottom-form", 18),
            e.ɵɵelementEnd()(),
            e.ɵɵtemplate(16, J_, 1, 0, "app-onramper-widget", 1),
            e.ɵɵpipe(17, "async"),
            e.ɵɵelementEnd(),
            e.ɵɵtemplate(18, q_, 1, 1, "app-limit-order-bottom-form", 19),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngStyle",
              e.ɵɵpureFunction1(16, eu, i.backgroundColor)
            )("ngClass", e.ɵɵpureFunction2(18, tu, t, i.isLimitOrder)),
            e.ɵɵadvance(4),
            e.ɵɵproperty("onlyFrame", "horizontal"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("noFrame", "vertical"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("onlyFrame", "vertical"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(21, nu, i.isOnramper)),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", !i.isOnramper),
            e.ɵɵadvance(2),
            e.ɵɵproperty("onlyFrame", "horizontal"),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.isCrossChainRouting),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.isOnramper),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.isInstantTrade),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              e.ɵɵpipeBind1(17, 14, i.onramperWidgetOpened$)
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", i.isLimitOrder);
        }
      }
      function ru(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 36),
            e.ɵɵelement(1, "app-swap-info-container", 37),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("swapType", t.swapType)(
              "currentInstantTradeInfo",
              t.currentInstantTradeInfo
            )("tradeStatus", t.tradeStatus);
        }
      }
      function ou(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 3),
            e.ɵɵtemplate(1, iu, 19, 23, "div", 4),
            e.ɵɵpipe(2, "async"),
            e.ɵɵtemplate(3, ru, 2, 3, "div", 5),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngLet,
            i = e.ɵɵnextContext();
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(2, 2, i.onramperWidgetOpened$)),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", t && !i.isOnramper && !i.isLimitOrder);
        }
      }
      function su(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 15)(1, "div", 27)(2, "div", 17),
            e.ɵɵtext(3),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(4, "div", 18),
            e.ɵɵtext(5),
            e.ɵɵelement(6, "button", 47),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(7, "div", 48),
            e.ɵɵelement(8, "img", 49),
            e.ɵɵtext(9),
            e.ɵɵelementEnd()()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(t.trade.extraField.name),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(" ", t.trade.extraField.value, " "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("cdkCopyToClipboard", t.trade.extraField.value),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate2(
              " Please don\u2019t forget to specify the ",
              t.trade.extraField.name,
              " while sending the ",
              t.trade.fromToken.symbol,
              " transaction for the exchange "
            );
        }
      }
      function cu(n, a) {
        1 & n && e.ɵɵelement(0, "div", 50);
      }
      function lu(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 51),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function pu(n, a) {
        1 & n && e.ɵɵelement(0, "div", 53);
      }
      function du(n, a) {
        1 & n && e.ɵɵelement(0, "div", 50);
      }
      function mu(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 51),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function _u(n, a) {
        1 & n && e.ɵɵelement(0, "div", 53);
      }
      function uu(n, a) {
        1 & n && e.ɵɵelement(0, "div", 50);
      }
      function gu(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 51),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      function hu(n, a) {
        1 & n && e.ɵɵelement(0, "div", 53);
      }
      function fu(n, a) {
        1 & n && e.ɵɵelement(0, "div", 50);
      }
      function vu(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 51),
          e.ɵɵelement(1, "img", 52),
          e.ɵɵelementEnd());
      }
      const Bn = function (n, a) {
          return {
            "status-item__line_completed": n,
            "status-item__line_load": a,
          };
        },
        Qt = function (n) {
          return { "status-item__value_completed": n };
        },
        Cu = function (n) {
          return { "recent-trades__link_active": n };
        };
      function xu(n, a) {
        if (1 & n) {
          const t = e.ɵɵgetCurrentView();
          e.ɵɵelementStart(0, "div", 14)(1, "div", 15)(2, "div", 16)(
            3,
            "div",
            17
          ),
            e.ɵɵtext(4, "Amount"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(5, "div", 18)(6, "span", 19),
            e.ɵɵtext(7),
            e.ɵɵpipe(8, "bigNumberFormat"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(9, "img", 20),
            e.ɵɵlistener("error", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onImageError(r));
            }),
            e.ɵɵelementEnd(),
            e.ɵɵtext(10),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(11, "div", 21)(12, "div", 22)(13, "img", 20),
            e.ɵɵlistener("error", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onImageError(r));
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(14, "div", 23)(15, "div", 24),
            e.ɵɵtext(16),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(17, "div", 25),
            e.ɵɵtext(18),
            e.ɵɵelementEnd()()(),
            e.ɵɵelement(19, "img", 26),
            e.ɵɵelementStart(20, "div", 22)(21, "img", 20),
            e.ɵɵlistener("error", function (r) {
              e.ɵɵrestoreView(t);
              const s = e.ɵɵnextContext();
              return e.ɵɵresetView(s.onImageError(r));
            }),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(22, "div", 23)(23, "div", 24),
            e.ɵɵtext(24),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(25, "div", 25),
            e.ɵɵtext(26),
            e.ɵɵelementEnd()()()()(),
            e.ɵɵelementStart(27, "div", 15)(28, "div", 27)(29, "div", 17),
            e.ɵɵtext(30, "To this address"),
            e.ɵɵelementEnd(),
            e.ɵɵelementStart(31, "div", 28),
            e.ɵɵtext(32),
            e.ɵɵelementStart(33, "button", 29),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.copyToClipboard());
            }),
            e.ɵɵelementEnd()()()(),
            e.ɵɵtemplate(34, su, 10, 5, "div", 30),
            e.ɵɵelementStart(35, "div", 31)(36, "div", 32),
            e.ɵɵelement(37, "div", 33),
            e.ɵɵtemplate(38, cu, 1, 0, "div", 34),
            e.ɵɵtemplate(39, lu, 2, 0, "div", 35),
            e.ɵɵelementStart(40, "div", 36),
            e.ɵɵtext(41, " Awaiting deposit "),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(42, "div", 32),
            e.ɵɵtemplate(43, pu, 1, 0, "div", 37),
            e.ɵɵelement(44, "div", 38),
            e.ɵɵtemplate(45, du, 1, 0, "div", 34),
            e.ɵɵtemplate(46, mu, 2, 0, "div", 35),
            e.ɵɵelementStart(47, "div", 36),
            e.ɵɵtext(48, " Confirming "),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(49, "div", 32),
            e.ɵɵtemplate(50, _u, 1, 0, "div", 37),
            e.ɵɵelement(51, "div", 39),
            e.ɵɵtemplate(52, uu, 1, 0, "div", 34),
            e.ɵɵtemplate(53, gu, 2, 0, "div", 35),
            e.ɵɵelementStart(54, "div", 36),
            e.ɵɵtext(55, " Exchanging "),
            e.ɵɵelementEnd()(),
            e.ɵɵelementStart(56, "div", 32),
            e.ɵɵtemplate(57, hu, 1, 0, "div", 37),
            e.ɵɵtemplate(58, fu, 1, 0, "div", 34),
            e.ɵɵtemplate(59, vu, 2, 0, "div", 35),
            e.ɵɵelementStart(60, "div", 36),
            e.ɵɵtext(61, " Sending to you "),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(62, "div", 15)(63, "div", 40),
            e.ɵɵelement(64, "img", 41),
            e.ɵɵtext(65, " Estimated Arrival "),
            e.ɵɵelementStart(66, "span", 42),
            e.ɵɵtext(67, "~10 minutes"),
            e.ɵɵelementEnd()()(),
            e.ɵɵelementStart(68, "div", 43)(69, "div", 44),
            e.ɵɵtext(70, " Transaction status can also be tracked in "),
            e.ɵɵelementStart(71, "a", 45)(72, "button", 46),
            e.ɵɵlistener("click", function () {
              e.ɵɵrestoreView(t);
              const r = e.ɵɵnextContext();
              return e.ɵɵresetView(r.handleButtonClick());
            }),
            e.ɵɵtext(73, "Recent Trades"),
            e.ɵɵelementEnd()()()()();
        }
        if (2 & n) {
          const t = a.ngLet,
            i = e.ɵɵnextContext(),
            r = e.ɵɵreference(30),
            s = e.ɵɵreference(28);
          e.ɵɵadvance(7),
            e.ɵɵtextInterpolate(e.ɵɵpipeBind1(8, 36, i.trade.fromAmount)),
            e.ɵɵadvance(2),
            e.ɵɵproperty(
              "src",
              i.trade.fromToken.image || i.DEFAULT_TOKEN_IMAGE,
              e.ɵɵsanitizeUrl
            ),
            e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(" ", i.trade.fromToken.symbol, " "),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "src",
              i.trade.fromToken.image || i.DEFAULT_TOKEN_IMAGE,
              e.ɵɵsanitizeUrl
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(i.trade.fromToken.symbol),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              i.getBlockchainLabel(i.trade.fromToken.blockchain),
              " "
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "src",
              i.trade.toToken.image || i.DEFAULT_TOKEN_IMAGE,
              e.ɵɵsanitizeUrl
            ),
            e.ɵɵadvance(3),
            e.ɵɵtextInterpolate(i.trade.toToken.symbol),
            e.ɵɵadvance(2),
            e.ɵɵtextInterpolate1(
              " ",
              i.getBlockchainLabel(i.trade.toToken.blockchain),
              " "
            ),
            e.ɵɵadvance(6),
            e.ɵɵtextInterpolate1(" ", i.trade.depositAddress, " "),
            e.ɵɵadvance(1),
            e.ɵɵproperty("cdkCopyToClipboard", i.trade.depositAddress)(
              "tuiManualHint",
              r
            )("tuiManualHintShow", i.hintShown),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", i.trade.extraField),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(38, Bn, "waiting" !== t, "waiting" === t)
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "waiting" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "waiting" !== t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(41, Qt, t)),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngIf", "waiting" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(
                43,
                Bn,
                "exchanging" === t || "sending" === t || "finished" === t,
                "confirming" === t
              )
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "confirming" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngIf",
              "exchanging" === t || "sending" === t || "finished" === t
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(
                46,
                Qt,
                "confirming" === t ||
                  "exchanging" === t ||
                  "sending" === t ||
                  "finished" === t
              )
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty("ngIf", "waiting" === t || "confirming" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction2(
                48,
                Bn,
                "sending" === t || "finished" === t,
                "exchanging" === t
              )
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "exchanging" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "sending" === t || "finished" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(
                51,
                Qt,
                "exchanging" === t || "sending" === t || "finished" === t
              )
            ),
            e.ɵɵadvance(3),
            e.ɵɵproperty(
              "ngIf",
              "waiting" === t || "confirming" === t || "exchanging" === t
            ),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "sending" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", "finished" === t),
            e.ɵɵadvance(1),
            e.ɵɵproperty(
              "ngClass",
              e.ɵɵpureFunction1(53, Qt, "sending" === t || "finished" === t)
            ),
            e.ɵɵadvance(4),
            e.ɵɵproperty("tuiHint", s)("tuiHintShowDelay", 0)(
              "tuiHintMode",
              "onDark"
            ),
            e.ɵɵadvance(7),
            e.ɵɵproperty("ngClass", e.ɵɵpureFunction1(55, Cu, "waiting" !== t));
        }
      }
      function bu(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 54),
          e.ɵɵtext(
            1,
            " If your transaction seems to be taking longer than normal (more than 10 minutes), please contact our Support Team at "
          ),
          e.ɵɵelementStart(2, "span", 42),
          e.ɵɵtext(3, "support@Selenion AI.org"),
          e.ɵɵelementEnd(),
          e.ɵɵtext(4, ". "),
          e.ɵɵelementEnd());
      }
      function yu(n, a) {
        1 & n && e.ɵɵtext(0, "Address copied on clipboard!");
      }
      const Su = [
        {
          path: "",
          component: (() => {
            class n {
              constructor(t, i, r, s, c, l, d, _, g, C, b, k, y) {
                (this.swapTypeService = t),
                  (this.swapFormService = i),
                  (this.settingsService = r),
                  (this.cdr = s),
                  (this.headerStore = c),
                  (this.translateService = l),
                  (this.notificationsService = d),
                  (this.gtmService = _),
                  (this.authService = g),
                  (this.queryParamsService = C),
                  (this.onramperFormService = b),
                  (this.refreshService = k),
                  (this.destroy$ = y),
                  (this.allowRefresh = !0),
                  (this.backgroundColor =
                    this.queryParamsService.backgroundColor),
                  (this.hideUnusedUI = this.queryParamsService.hideUnusedUI),
                  (this.isFormFilled$ = this.swapFormService.isFilled$),
                  (this.getCurrentUser$ = this.authService.currentUser$),
                  (this.onramperWidgetOpened$ =
                    this.onramperFormService.widgetOpened$),
                  (this._fromAmountUpdated$ = new Ce.x()),
                  (this.fromAmountUpdated$ =
                    this._fromAmountUpdated$.asObservable()),
                  (this.isRefreshRotating$ =
                    this.refreshService.isRefreshRotating$);
              }
              get isInstantTrade() {
                return this.swapTypeService.swapMode === S.V.INSTANT_TRADE;
              }
              get isCrossChainRouting() {
                return (
                  this.swapTypeService.swapMode === S.V.CROSS_CHAIN_ROUTING
                );
              }
              get isOnramper() {
                return this.swapTypeService.swapMode === S.V.ONRAMPER;
              }
              get isLimitOrder() {
                return this.swapTypeService.swapMode === S.V.LIMIT_ORDER;
              }
              ngOnInit() {
                this.swapTypeService.swapMode$
                  .pipe((0, ce.x)(), (0, P.R)(this.destroy$))
                  .subscribe((t) => {
                    this.swapType = t;
                  }),
                  this.swapFormService.inputValue$
                    .pipe((0, P.R)(this.destroy$))
                    .subscribe((t) => {
                      this.setFormValues(t);
                    }),
                  this.watchGtmEvents();
              }
              ngOnDestroy() {
                this.settingsService.saveSettingsToLocalStorage();
              }
              setFormValues(t) {
                (this.fromAssetType = t.fromAssetType),
                  (this.toBlockchain = t.toBlockchain);
              }
              revert() {
                var t = this;
                return (0, O.Z)(function* () {
                  const {
                    fromAssetType: i,
                    toBlockchain: r,
                    fromAsset: s,
                    toToken: c,
                    fromAmount: l,
                  } = t.swapFormService.inputValue;
                  if (!o.BlockchainsInfo.isBlockchainName(i) || !(0, de.$v)(s))
                    return;
                  const { toAmount: d } = t.swapFormService.outputValue;
                  t.swapFormService.inputControl.patchValue({
                    fromAssetType: r,
                    fromAsset: c,
                    toToken: s,
                    toBlockchain: i,
                    ...(d?.gt(0) && { fromAmount: d }),
                  }),
                    t.swapFormService.outputControl.patchValue({
                      toAmount:
                        t.swapTypeService.swapMode === S.V.LIMIT_ORDER
                          ? l
                          : new M.Z(NaN),
                    });
                })();
              }
              notifyBeta() {
                const t = this.translateService.instant(
                  "notifications.solanaBeta"
                );
                this.notificationsService.show(t, {
                  status: "warning",
                  autoClose: 1e4,
                });
              }
              watchGtmEvents() {
                this.gtmService.fetchPassedFormSteps(),
                  this.gtmService.startGtmSession(),
                  this.swapFormService.inputValue$
                    .pipe(
                      (0, x.U)((t) => [
                        t?.fromAsset?.symbol || null,
                        t?.toToken?.symbol || null,
                      ]),
                      (0, ce.x)(q.t),
                      (0, yr.M)(this.swapTypeService.swapMode$),
                      (0, P.R)(this.destroy$)
                    )
                    .subscribe(([[t, i], r]) => {
                      r !== S.V.INSTANT_TRADE ||
                        r !== S.V.INSTANT_TRADE ||
                        (this.gtmService.isGtmSessionActive ||
                          this.gtmService.clearPassedFormSteps(),
                        this.gtmService.needTrackFormEventsNow
                          ? (t && this.gtmService.updateFormStep(r, "token1"),
                            i && this.gtmService.updateFormStep(r, "token2"))
                          : (this.gtmService.needTrackFormEventsNow = !0));
                    });
              }
              getFromBlockchain() {
                if ("fiat" === this.fromAssetType)
                  throw new z.q("From asset type is fiat");
                return this.fromAssetType;
              }
              closeWidget() {
                this.onramperFormService.widgetOpened = !1;
              }
              onFromAmountUpdate() {
                this._fromAmountUpdated$.next();
              }
              onRefresh() {
                this.refreshService.onButtonClick();
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || n)(
                  e.ɵɵdirectiveInject(ae.H),
                  e.ɵɵdirectiveInject(E.q),
                  e.ɵɵdirectiveInject(ve),
                  e.ɵɵdirectiveInject(e.ChangeDetectorRef),
                  e.ɵɵdirectiveInject(Mt.N),
                  e.ɵɵdirectiveInject(R.sK),
                  e.ɵɵdirectiveInject(dt.T),
                  e.ɵɵdirectiveInject(Ue.k),
                  e.ɵɵdirectiveInject(U.e),
                  e.ɵɵdirectiveInject(Ae.E),
                  e.ɵɵdirectiveInject(mt),
                  e.ɵɵdirectiveInject(pt),
                  e.ɵɵdirectiveInject(w.a3, 2)
                );
              });
              static #t = (this.ɵcmp = e.ɵɵdefineComponent({
                type: n,
                selectors: [["app-swap-form"]],
                features: [e.ɵɵProvidersFeature([w.a3])],
                decls: 4,
                vars: 4,
                consts: [
                  [4, "onlyFrame"],
                  [4, "ngIf"],
                  ["class", "swap-wrapper", 4, "ngLet"],
                  [1, "swap-wrapper"],
                  ["class", "part-1-swap", 4, "ngLet"],
                  ["class", "part-2-swap", 4, "ngIf"],
                  [1, "part-1-swap"],
                  ["class", "close-widget-button", 4, "ngIf"],
                  [1, "swap-form", 3, "ngStyle", "ngClass"],
                  ["class", "swap-form__header", 4, "noFrame"],
                  [1, "swap-form__content"],
                  [1, "swap-form__block", 2, "margin-bottom", "-20px"],
                  [3, "assetType", 4, "onlyFrame"],
                  [3, "amountUpdated", 4, "noFrame"],
                  [3, "ngClass"],
                  [3, "switcherClick", 4, "ngIf"],
                  [1, "swap-form__block", 2, "margin-top", "-20px"],
                  [3, "tradeStatusChange", 4, "ngIf"],
                  [
                    3,
                    "allowRefreshChange",
                    "instantTradeInfoChange",
                    "tradeStatusChange",
                    4,
                    "ngIf",
                  ],
                  [3, "fromAmountUpdated$", 4, "ngIf"],
                  [1, "close-widget-button"],
                  [3, "onClick"],
                  [1, "swap-form__header"],
                  ["class", "swap-form__blockchains", 4, "noFrame"],
                  [1, "swap-form__settings-wrapper"],
                  [
                    "class",
                    "swap-form__refresh",
                    "mode",
                    "swaps",
                    3,
                    "isRotating$",
                    "onRefresh",
                    4,
                    "ngIf",
                  ],
                  ["class", "swap-form__settings", 4, "ngIf"],
                  [1, "swap-form__blockchains"],
                  [
                    "mode",
                    "swaps",
                    1,
                    "swap-form__refresh",
                    3,
                    "isRotating$",
                    "onRefresh",
                  ],
                  [1, "swap-form__settings"],
                  [3, "assetType"],
                  [3, "amountUpdated"],
                  [3, "switcherClick"],
                  [3, "tradeStatusChange"],
                  [
                    3,
                    "allowRefreshChange",
                    "instantTradeInfoChange",
                    "tradeStatusChange",
                  ],
                  [3, "fromAmountUpdated$"],
                  [1, "part-2-swap"],
                  [3, "swapType", "currentInstantTradeInfo", "tradeStatus"],
                ],
                template: function (i, r) {
                  1 & i &&
                    (e.ɵɵtemplate(0, F_, 1, 0, "app-iframe-settings-button", 0),
                    e.ɵɵtemplate(1, B_, 1, 0, "app-form-navigation", 1),
                    e.ɵɵtemplate(2, ou, 4, 4, "div", 2),
                    e.ɵɵpipe(3, "async")),
                    2 & i &&
                      (e.ɵɵadvance(1),
                      e.ɵɵproperty("ngIf", !r.hideUnusedUI),
                      e.ɵɵadvance(1),
                      e.ɵɵproperty(
                        "ngLet",
                        e.ɵɵpipeBind1(3, 2, r.isFormFilled$)
                      ));
                },
                dependencies: [
                  mi,
                  Aa,
                  m.mk,
                  m.O5,
                  m.PC,
                  F.e,
                  me.a,
                  Me.T,
                  Lt,
                  Ma.d,
                  _n,
                  Da,
                  Dc,
                  ep,
                  op,
                  lp,
                  Lp,
                  Gp,
                  m_,
                  g_,
                  O_,
                  N_,
                  D_,
                  m.Ov,
                ],
                styles: [
                  '[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}[_nghost-%COMP%]{position:relative;display:block;max-width:1600px;margin:0 auto}html.iframe   [_nghost-%COMP%]{width:100%}html.iframe-horizontal   [_nghost-%COMP%]{max-width:unset}body.hide-unused-ui   [_nghost-%COMP%]{display:inline}.swap-form[_ngcontent-%COMP%]{position:relative;min-height:200px;padding:24px;background:var(--form-background);border-radius:19px}html.iframe-horizontal[_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%]{display:flex;align-items:flex-end;min-height:180px;margin-bottom:0;padding:0 20px 55px}html.iframe-vertical[_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%]{width:350px;height:500px;margin-bottom:0;padding:80px 10px 15px}html.iframe:not(.dark)[_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%], html.iframe:not(.dark)   [_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%]{background-color:#fff}body.hide-unused-ui[_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .swap-form[_ngcontent-%COMP%]{margin:0}.swap-form_extended[_ngcontent-%COMP%]{height:660px}.swap-form_limit-order[_ngcontent-%COMP%]{min-height:auto;margin-bottom:0;padding:24px 24px 0;border-bottom:0;border-radius:19px 19px 0 0}.swap-form[_ngcontent-%COMP%] ~ *[_ngcontent-%COMP%]:not(:last-child){display:block;margin-bottom:35px}.swap-form__header[_ngcontent-%COMP%]{display:flex;grid-gap:20px;align-items:center;justify-content:space-between;min-height:40px}.swap-form__title[_ngcontent-%COMP%]{margin:0 10px 0 0;color:var(--primary-text);font-weight:300;font-size:24px;letter-spacing:1.5px}.swap-form__settings-wrapper[_ngcontent-%COMP%]{display:flex}body.hide-unused-ui[_nghost-%COMP%]   .swap-form__settings-wrapper[_ngcontent-%COMP%], body.hide-unused-ui   [_nghost-%COMP%]   .swap-form__settings-wrapper[_ngcontent-%COMP%]{margin:0}.swap-form__settings[_ngcontent-%COMP%]{display:flex;margin-left:10px;cursor:pointer}.swap-form__delimiter[_ngcontent-%COMP%]{position:relative;background-color:var(--primary-background)}html.iframe-horizontal[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]{display:flex;align-items:center;margin:0 5px;background-color:unset}html.iframe-vertical[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]{display:flex;justify-content:center;padding:0;background:transparent}body.hide-unused-ui[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:before, body.hide-unused-ui   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:before{width:100%}body.hide-unused-ui[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:after, body.hide-unused-ui   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:after{width:0}.swap-form__delimiter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%,-50%)}html.iframe-horizontal[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:static;left:unset;transform:unset}html.iframe-vertical[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:static;left:unset;transform:none}.swap-form__delimiter[_ngcontent-%COMP%]:before, .swap-form__delimiter[_ngcontent-%COMP%]:after{position:absolute;top:0;display:block;width:calc(50% - 17px);height:1px;background-color:var(--transparent-line);opacity:.5;content:""}html.iframe-vertical[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:before, html.iframe-vertical   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:before, html.iframe-vertical[_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:after, html.iframe-vertical   [_nghost-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]:after{display:none}.swap-form__delimiter[_ngcontent-%COMP%]:after{right:0}.swap-form__delimiter_full[_ngcontent-%COMP%]:before{width:100%}.swap-form__delimiter_full[_ngcontent-%COMP%]:after{display:none}.swap-form_limit-order[_ngcontent-%COMP%]   .swap-form__delimiter[_ngcontent-%COMP%]{z-index:99999}.swap-form__content[_ngcontent-%COMP%]{margin-top:30px}html.iframe-horizontal[_nghost-%COMP%]   .swap-form__content[_ngcontent-%COMP%], html.iframe-horizontal   [_nghost-%COMP%]   .swap-form__content[_ngcontent-%COMP%]{display:flex;justify-content:space-between;width:100%;height:50px;margin-top:0}html.iframe-vertical[_nghost-%COMP%]   .swap-form__content[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__content[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;height:100%;margin-top:0}html.iframe[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]{display:flex}html.iframe[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-iframe-asset-type-indicator[_ngcontent-%COMP%]{margin-right:10px}html.iframe-vertical[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-instant-trade-bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-instant-trade-bottom-form[_ngcontent-%COMP%], html.iframe-vertical[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-bridge-bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-bridge-bottom-form[_ngcontent-%COMP%], html.iframe-vertical[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-cross-chain-bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-cross-chain-bottom-form[_ngcontent-%COMP%], html.iframe-vertical[_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-onramper-bottom-form[_ngcontent-%COMP%], html.iframe-vertical   [_nghost-%COMP%]   .swap-form__block[_ngcontent-%COMP%]   app-onramper-bottom-form[_ngcontent-%COMP%]{width:100%}.swap-form[_ngcontent-%COMP%]   app-onramper-widget[_ngcontent-%COMP%]{position:absolute;top:-1px;left:-1px;z-index:9999;display:block}app-swap-info-container[_ngcontent-%COMP%], app-analytics-link[_ngcontent-%COMP%]{display:block;padding-top:0;padding-bottom:0}@media (max-width: 900px){app-swap-info-container[_ngcontent-%COMP%], app-analytics-link[_ngcontent-%COMP%]{padding:0 20px 20px}}.close-widget-button[_ngcontent-%COMP%]{display:none;width:42px;margin-bottom:13px}.close-widget-button[_ngcontent-%COMP%]     app-rubic-button tui-wrapper{background:var(--form-background)}@media (max-width: 768px){.close-widget-button[_ngcontent-%COMP%]{display:block}}@media (max-width: 651px){.swap-form[_ngcontent-%COMP%]{position:relative;padding:20px 0;padding-bottom:50px!important}.swap-form__content[_ngcontent-%COMP%]{margin-top:0}.swap-form__header[_ngcontent-%COMP%]{padding:0 20px}.swap-form__title[_ngcontent-%COMP%]{display:none}.swap-form__delimiter[_ngcontent-%COMP%]:before, .swap-form__delimiter[_ngcontent-%COMP%]:after{width:calc(50% - 37px)}.swap-form__delimiter[_ngcontent-%COMP%]:before{left:20px}.swap-form__delimiter[_ngcontent-%COMP%]:after{right:20px}.swap-form__delimiter_full[_ngcontent-%COMP%]:before{width:calc(100% - 40px)}}app-form-navigation[_ngcontent-%COMP%]{display:none}@media (max-width: 1140px){app-form-navigation[_ngcontent-%COMP%]{display:block;margin-bottom:8px}html.iframe[_nghost-%COMP%]   app-form-navigation[_ngcontent-%COMP%], html.iframe   [_nghost-%COMP%]   app-form-navigation[_ngcontent-%COMP%]{display:none}}app-form-header[_ngcontent-%COMP%]{background:#7555EE;padding:2.5px 5px;border-radius:30px}',
                ],
                changeDetection: 0,
              }));
            }
            return n;
          })(),
        },
        {
          path: "changenow-post",
          component: (() => {
            class n {
              constructor(t, i, r, s, c, l, d) {
                (this.router = t),
                  (this.changenowPostTradeService = i),
                  (this.tokensService = r),
                  (this.gtmService = s),
                  (this.cdr = c),
                  (this.window = l),
                  (this.navigator = d),
                  (this.DEFAULT_TOKEN_IMAGE = ut.k),
                  (this.trade = this.changenowPostTradeService.trade),
                  this.trade
                    ? (this.changenowPostTradeService.setupUpdate(),
                      (this.status$ = this.changenowPostTradeService.status$))
                    : this.router.navigate(["/"], {
                        queryParamsHandling: "merge",
                      });
              }
              getBlockchainLabel(t) {
                return ge.h[t];
              }
              onImageError(t) {
                this.tokensService.onTokenImageError(t);
              }
              navigateToSwaps() {
                var t = this;
                return (0, O.Z)(function* () {
                  yield t.router.navigate(["/"], {
                    queryParamsHandling: "merge",
                  });
                })();
              }
              handleButtonClick() {
                this.gtmService.reloadGtmSession(),
                  this.window.open("changenow-recent-trades", "_blank");
              }
              copyToClipboard() {
                this.showHint(),
                  this.navigator.clipboard.writeText(this.trade.depositAddress);
              }
              showHint() {
                (this.hintShown = !0),
                  (0, Fe.H)(1500).subscribe(() => {
                    (this.hintShown = !1), this.cdr.markForCheck();
                  });
              }
              static #e = (this.ɵfac = function (i) {
                return new (i || n)(
                  e.ɵɵdirectiveInject(At.F0),
                  e.ɵɵdirectiveInject(Li.W),
                  e.ɵɵdirectiveInject(Ee.H),
                  e.ɵɵdirectiveInject(Ue.k),
                  e.ɵɵdirectiveInject(e.ChangeDetectorRef),
                  e.ɵɵdirectiveInject(xe.m9),
                  e.ɵɵdirectiveInject(xe.s5)
                );
              });
              static #t = (this.ɵcmp = e.ɵɵdefineComponent({
                type: n,
                selectors: [["app-changenow-post-form"]],
                decls: 31,
                vars: 10,
                consts: [
                  [1, "block-container"],
                  [1, "header__wrapper"],
                  [1, "arrow-back", 3, "click"],
                  [
                    "src",
                    "assets/images/icons/arrow-back.svg",
                    "alt",
                    "go back",
                  ],
                  [1, "header"],
                  ["class", "rows", 4, "ngLet"],
                  [1, "delimiter"],
                  [1, "bottom-row"],
                  [1, "bottom-row__header"],
                  [1, "bottom-row__value"],
                  [
                    "src",
                    "assets/images/icons/copy.svg",
                    "alt",
                    "copy",
                    1,
                    "copy-icon",
                    3,
                    "cdkCopyToClipboard",
                  ],
                  [1, "bottom-row__value", "break-word"],
                  ["contactSupportHint", ""],
                  ["template", ""],
                  [1, "rows"],
                  [1, "row"],
                  [1, "row-item", "row-item_small"],
                  [1, "row-item__header"],
                  [1, "row-item__value"],
                  [1, "break-word"],
                  ["alt", "token", 3, "src", "error"],
                  [1, "tokens-diagram"],
                  [1, "token-diagram"],
                  [1, "token-diagram__meta-text"],
                  [1, "token-diagram__symbol"],
                  [1, "token-diagram__chain"],
                  [
                    "src",
                    "assets/images/icons/arrow-long.svg",
                    "alt",
                    "swap arrow",
                    1,
                    "tokens-diagram__arrow",
                  ],
                  [1, "row-item"],
                  [1, "row-item__value", "break-word"],
                  [
                    "inlineSVG",
                    "assets/images/icons/copy.svg",
                    1,
                    "copy-icon",
                    "copy-icon_green",
                    3,
                    "cdkCopyToClipboard",
                    "tuiManualHint",
                    "tuiManualHintShow",
                    "click",
                  ],
                  ["class", "row", 4, "ngIf"],
                  [1, "row", "row-status"],
                  [1, "row-item", "status-item"],
                  [1, "status-item__line", 3, "ngClass"],
                  ["class", "status-item__spinner", 4, "ngIf"],
                  ["class", "status-item__circle_complete", 4, "ngIf"],
                  [1, "row-item__value", "status-item__value", 3, "ngClass"],
                  ["class", "status-item__circle", 4, "ngIf"],
                  [
                    1,
                    "status-item__line",
                    "status-item__line_confirming",
                    3,
                    "ngClass",
                  ],
                  [
                    1,
                    "status-item__line",
                    "status-item__line_exchanging",
                    3,
                    "ngClass",
                  ],
                  [1, "estimated-time"],
                  [
                    "src",
                    "assets/images/icons/exclamation-grey.svg",
                    "alt",
                    "info",
                    1,
                    "info-icon",
                    3,
                    "tuiHint",
                    "tuiHintShowDelay",
                    "tuiHintMode",
                  ],
                  [1, "primary-text"],
                  [1, "row", "row__recent-trades"],
                  [1, "recent-trades"],
                  [1, "recent-trades__link", 3, "ngClass"],
                  [1, "data-list__option", 3, "click"],
                  [
                    "inlineSVG",
                    "assets/images/icons/copy.svg",
                    1,
                    "copy-icon",
                    "copy-icon_green",
                    3,
                    "cdkCopyToClipboard",
                  ],
                  [1, "additional-info"],
                  [
                    "src",
                    "assets/images/icons/exclamation-grey.svg",
                    "alt",
                    "info",
                    1,
                    "info-icon",
                  ],
                  [1, "status-item__spinner"],
                  [1, "status-item__circle_complete"],
                  [
                    "src",
                    "assets/images/icons/checkmark/checkmark-bold-black.svg",
                    "alt",
                    "",
                    1,
                    "scheme__status-icon",
                  ],
                  [1, "status-item__circle"],
                  [1, "contact-support-hint"],
                ],
                template: function (i, r) {
                  1 & i &&
                    (e.ɵɵelementStart(0, "div", 0)(1, "div", 1)(2, "button", 2),
                    e.ɵɵlistener("click", function () {
                      return r.navigateToSwaps();
                    }),
                    e.ɵɵelement(3, "img", 3),
                    e.ɵɵelementEnd(),
                    e.ɵɵelementStart(4, "div", 4),
                    e.ɵɵtext(
                      5,
                      "Please send the funds you would like to exchange"
                    ),
                    e.ɵɵelementEnd()(),
                    e.ɵɵtemplate(6, xu, 74, 57, "div", 5),
                    e.ɵɵpipe(7, "async"),
                    e.ɵɵelement(8, "hr", 6),
                    e.ɵɵelementStart(9, "div", 7)(10, "div", 8),
                    e.ɵɵtext(11, "Transaction ID"),
                    e.ɵɵelementEnd(),
                    e.ɵɵelementStart(12, "div", 9),
                    e.ɵɵtext(13),
                    e.ɵɵelementStart(14, "button"),
                    e.ɵɵelement(15, "img", 10),
                    e.ɵɵelementEnd()()(),
                    e.ɵɵelementStart(16, "div", 7)(17, "div", 8),
                    e.ɵɵtext(18, "You get"),
                    e.ɵɵelementEnd(),
                    e.ɵɵelementStart(19, "div", 9),
                    e.ɵɵtext(20),
                    e.ɵɵpipe(21, "bigNumberFormat"),
                    e.ɵɵelementEnd()(),
                    e.ɵɵelementStart(22, "div", 7)(23, "div", 8),
                    e.ɵɵtext(24, "Recipient Wallet"),
                    e.ɵɵelementEnd(),
                    e.ɵɵelementStart(25, "div", 11),
                    e.ɵɵtext(26),
                    e.ɵɵelementEnd()()(),
                    e.ɵɵtemplate(
                      27,
                      bu,
                      5,
                      0,
                      "ng-template",
                      null,
                      12,
                      e.ɵɵtemplateRefExtractor
                    ),
                    e.ɵɵtemplate(
                      29,
                      yu,
                      1,
                      0,
                      "ng-template",
                      null,
                      13,
                      e.ɵɵtemplateRefExtractor
                    )),
                    2 & i &&
                      (e.ɵɵadvance(6),
                      e.ɵɵproperty("ngLet", e.ɵɵpipeBind1(7, 6, r.status$)),
                      e.ɵɵadvance(7),
                      e.ɵɵtextInterpolate1(" ", r.trade.id, " "),
                      e.ɵɵadvance(2),
                      e.ɵɵproperty("cdkCopyToClipboard", r.trade.id),
                      e.ɵɵadvance(5),
                      e.ɵɵtextInterpolate2(
                        " ",
                        e.ɵɵpipeBind1(21, 8, r.trade.toAmount),
                        " ",
                        r.trade.toToken.symbol,
                        " "
                      ),
                      e.ɵɵadvance(6),
                      e.ɵɵtextInterpolate(r.trade.receiverAddress));
                },
                dependencies: [
                  m.mk,
                  m.O5,
                  F.e,
                  G.d$,
                  H.D,
                  Ji,
                  Ht.vZ,
                  m.Ov,
                  be.N,
                ],
                styles: [
                  '[_ngcontent-%COMP%]:root{--scroll-size: 0px;--primary-color: rgb(117,85,238);--secondary-color: white;--filter-inversion: invert(1);--accent-color: #9438a6;--transparent-line: rgba(0, 0, 0, .1);--primary-background: rgb(246, 246, 246);--form-background: rgb(255, 255, 255);--form-background-transparent: rgba(255, 255, 255, .9);--solid-background: rgb(255, 255, 255);--secondary-background: rgba(0, 0, 0, .035);--iframe-primary-background: rgb(244, 244, 244);--primary-text: rgb(0, 0, 0);--primary-text-invert: rgb(255, 255, 255);--secondary-text: rgba(0, 0, 0, .5);--tui-primary: rgb(117,85,238);--gradient: #7555EE;--tui-primary-hover: #843DF8;--tui-primary-active: #843DF8;--tui-primary-text: var(--primary-text-invert);--tui-secondary: rgba(255, 255, 255, 1);--tui-secondary-hover: rgba(255, 255, 255, .5);--tui-secondary-active: rgba(255, 255, 255, .5);--tui-secondary-text: var(--primary-text);--tui-link: var(--primary-text);--tui-link-hover: var(--primary-text);--tui-text-02: #3b3a3a;--tui-text-03: var(--tui-text-02);--selection-color: rgb(243 249 243);--error-color: #e9590c;--warning-color: #f2994a}@keyframes _ngcontent-%COMP%_dual-ring{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@keyframes _ngcontent-%COMP%_rotate{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(360deg)}}@keyframes _ngcontent-%COMP%_rotateccw{0%{transform:translate(-50%,-50%) rotate(0)}to{transform:translate(-50%,-50%) rotate(-360deg)}}@keyframes _ngcontent-%COMP%_spin{0%,to{box-shadow:.2em 0 0 0 currentcolor}12%{box-shadow:.2em .2em 0 0 currentcolor}25%{box-shadow:0 .2em 0 0 currentcolor}37%{box-shadow:-.2em .2em 0 0 currentcolor}50%{box-shadow:-.2em 0 0 0 currentcolor}62%{box-shadow:-.2em -.2em 0 0 currentcolor}75%{box-shadow:0 -.2em 0 0 currentcolor}87%{box-shadow:.2em -.2em 0 0 currentcolor}}.block-container[_ngcontent-%COMP%]{max-width:542px;margin:0 auto;padding:30px;color:var(--secondary-text);font-size:14px;line-height:120%;background:var(--form-background);border:1px solid var(--transparent-line);border-radius:19px}.arrow-back[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:42px;height:42px;margin-bottom:20px;background:#303030;border-radius:50%;cursor:pointer}.arrow-back[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:6px}.header[_ngcontent-%COMP%]{margin-bottom:20px;font-size:16px}.header__wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.row[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;margin-top:40px}.row[_ngcontent-%COMP%]:first-of-type{margin-top:0}.row-status[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr 1fr 1fr;justify-items:center}.row__recent-trades[_ngcontent-%COMP%]{margin-top:10px}.row-item_small[_ngcontent-%COMP%]{max-width:40%}.row-item__header[_ngcontent-%COMP%]{margin-bottom:2px;color:var(--primary-color)}.row-item__value[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;height:-moz-fit-content;height:fit-content;min-height:24px;color:var(--primary-text);font-weight:600;font-size:18px}.row-item__value[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-height:24px}.status-item[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;align-items:center;justify-content:space-between;height:60px}.status-item__circle[_ngcontent-%COMP%]{position:relative;width:26px;height:26px;background-color:#9a9a9a;border-radius:50%}.status-item__circle[_ngcontent-%COMP%]:before{position:absolute;top:50%;left:50%;width:23px;height:23px;background-color:var(--form-background);border-radius:50%;transform:translate(-50%,-50%);content:""}.status-item__circle_complete[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:26px;height:26px;background-color:var(--primary-color);border-radius:50%}.status-item__circle_complete[_ngcontent-%COMP%]:before{display:none}.status-item__line[_ngcontent-%COMP%]{position:absolute;top:13px;right:-48px;width:70px;height:2px;background-color:#9a9a9a}.status-item__line_confirming[_ngcontent-%COMP%], .status-item__line_exchanging[_ngcontent-%COMP%]{right:-63px}.status-item__line_completed[_ngcontent-%COMP%]{background-color:var(--primary-color)}.status-item__spinner[_ngcontent-%COMP%]{width:26px;height:26px;color:#fff;border-radius:50%;transform:rotate(45deg);perspective:1000px}.status-item__spinner[_ngcontent-%COMP%]:before, .status-item__spinner[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;display:block;width:inherit;height:inherit;border-radius:50%;transform:rotateX(70deg);animation:1s _ngcontent-%COMP%_spin linear infinite;content:""}.status-item__spinner[_ngcontent-%COMP%]:after{color:var(--primary-color);transform:rotateY(70deg) rotate(180deg)}.status-item__value[_ngcontent-%COMP%]{color:#9a9a9a;font-weight:300;font-size:13px;line-height:120%;white-space:nowrap}.status-item__value_completed[_ngcontent-%COMP%]{color:var(--primary-color)}.tokens-diagram[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;padding:10px;background:#303030;border-radius:12px}.token-diagram[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;white-space:nowrap}.token-diagram[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-width:23px;max-height:23px}.token-diagram__symbol[_ngcontent-%COMP%]{color:var(--primary-text)}.token-diagram__chain[_ngcontent-%COMP%]{font-size:12px}.copy-icon[_ngcontent-%COMP%]{width:18px;height:18px;cursor:pointer}.copy-icon_green[_ngcontent-%COMP%]     svg path{stroke:var(--primary-color)}.additional-info[_ngcontent-%COMP%]{display:flex;grid-gap:16px;align-items:center;max-width:328px}.info-icon[_ngcontent-%COMP%]{width:20px;height:20px}.estimated-time[_ngcontent-%COMP%], .recent-trades[_ngcontent-%COMP%]{display:flex;grid-gap:9px;align-items:center;justify-content:center;width:100%;font-size:12px}.recent-trades[_ngcontent-%COMP%]{grid-gap:3px}.recent-trades__link[_ngcontent-%COMP%]{color:var(--secondary-text);pointer-events:none}.recent-trades__link_active[_ngcontent-%COMP%]{color:var(--primary-color);pointer-events:initial}.primary-text[_ngcontent-%COMP%]{color:var(--primary-text)}.delimiter[_ngcontent-%COMP%]{margin-top:20px;background:#333535}.bottom-row[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;justify-content:space-between;margin-top:14px}.bottom-row[_ngcontent-%COMP%]:first-of-type{height:24px;margin-top:15px}.bottom-row__value[_ngcontent-%COMP%]{display:flex;grid-gap:10px;align-items:center;font-size:12px}.break-word[_ngcontent-%COMP%]{word-break:break-word}button[_ngcontent-%COMP%]{transition:.2s ease-in-out}button[_ngcontent-%COMP%]:active{transform:scale(.9)}.contact-support-hint[_ngcontent-%COMP%]{max-width:384px;color:var(--secondary-text);font-size:14px;line-height:120%;text-align:center}@media (max-width: 560px){.block-container[_ngcontent-%COMP%]{padding:20px}.row[_ngcontent-%COMP%]:first-of-type{flex-direction:column-reverse;grid-gap:20px;align-items:start}.row[_ngcontent-%COMP%]:nth-of-type(3){flex-direction:column;grid-gap:20px;align-items:start}.row-item_small[_ngcontent-%COMP%]{max-width:unset}.header__wrapper[_ngcontent-%COMP%]{display:block}}@media (max-width: 460px){.row-status[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;justify-items:flex-start}.status-item[_ngcontent-%COMP%]{position:relative;flex-direction:row;gap:10px;justify-content:initial;height:auto}.status-item__line[_ngcontent-%COMP%]{position:absolute;top:initial;right:initial;bottom:-20px;left:12px;width:2px;height:20px}.status-item__line_confirming[_ngcontent-%COMP%], .status-item__line_exchanging[_ngcontent-%COMP%]{right:initial}.status-item__line_completed[_ngcontent-%COMP%]{background-color:var(--primary-color)}.status-item__spinner-wrapper[_ngcontent-%COMP%]{width:26px;height:26px}}',
                ],
                changeDetection: 0,
              }));
            }
            return n;
          })(),
        },
      ];
      let Tu = (() => {
        class n {
          static #e = (this.ɵfac = function (i) {
            return new (i || n)();
          });
          static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
          static #n = (this.ɵinj = e.ɵɵdefineInjector({
            imports: [At.Bz.forChild(Su), At.Bz],
          }));
        }
        return n;
      })();
      var Jt = p(87506);
      let Ou = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [Re, Qe, On, Mi, Ii],
              imports: [m.ez, Jt.m],
            }));
          }
          return n;
        })(),
        Ot = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              imports: [
                m.ez,
                Jt.m,
                H.go,
                G.vi,
                Be.Qf,
                W.cn,
                v.ReactiveFormsModule,
                Ou,
                m.ez,
                Jt.m,
              ],
            }));
          }
          return n;
        })(),
        Pu = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [Xe],
              imports: [Ot, G.vi, H.go],
            }));
          }
          return n;
        })();
      var er = p(87738),
        Pt = p(84620),
        ct = (p(2836), p(28634), p(35640)),
        pe = p(46579);
      class Au {
        constructor(a) {
          this.$implicit = a;
        }
      }
      let Mu = (() => {
          let n = class {
            constructor(t, i) {
              (this.viewContainer = t), (this.templateRef = i);
            }
            set tuiRepeatTimesOf(t) {
              const i = Math.floor((0, pe.uZ)(t, 0, 65536)),
                { length: r } = this.viewContainer;
              t < r ? this.removeContainers(r - t) : this.addContainers(i);
            }
            addContainers(t) {
              for (let i = this.viewContainer.length; i < t; i++)
                this.viewContainer.createEmbeddedView(
                  this.templateRef,
                  new Au(i)
                );
            }
            removeContainers(t) {
              for (let i = 0; i < t; i++) this.viewContainer.remove();
            }
          };
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                e.ɵɵdirectiveInject(e.ViewContainerRef),
                e.ɵɵdirectiveInject(e.TemplateRef)
              );
            }),
            (n.ɵdir = e.ɵɵdefineDirective({
              type: n,
              selectors: [["", "tuiRepeatTimes", "", "tuiRepeatTimesOf", ""]],
              inputs: { tuiRepeatTimesOf: "tuiRepeatTimesOf" },
            })),
            (0, u.__decorate)(
              [(0, e.Input)(), (0, I.NH)()],
              n.prototype,
              "tuiRepeatTimesOf",
              null
            ),
            (n = (0, u.__decorate)(
              [
                (0, u.__param)(0, (0, e.Inject)(e.ViewContainerRef)),
                (0, u.__param)(1, (0, e.Inject)(e.TemplateRef)),
              ],
              n
            )),
            n
          );
        })(),
        Eu = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({})),
            n
          );
        })();
      var qt = p(33703),
        en = p(37940),
        tr = p(69582);
      let Iu = (() => {
          let n = class {
            constructor(t) {
              this.numberFormat = t;
            }
            transform(
              t,
              i = null,
              r = this.numberFormat.decimalSeparator,
              s = this.numberFormat.thousandSeparator
            ) {
              return (0, Wt.uf)(t, i, r, s);
            }
          };
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(e.ɵɵdirectiveInject(we.HO, 16));
            }),
            (n.ɵpipe = e.ɵɵdefinePipe({
              name: "tuiFormatNumber",
              type: n,
              pure: !0,
            })),
            (n = (0, u.__decorate)(
              [(0, u.__param)(0, (0, e.Inject)(we.HO))],
              n
            )),
            n
          );
        })(),
        Nu = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({})),
            n
          );
        })();
      function Hn(n) {
        return isFinite(n) && n >= 0;
      }
      var wt = p(72997),
        kt = p(69751),
        ir = p(38421),
        Du = p(25403);
      function Ln(...n) {
        return 1 === (n = Pi(n)).length
          ? (0, ir.Xf)(n[0])
          : new kt.y(
              (function Fu(n) {
                return (a) => {
                  let t = [];
                  for (let i = 0; t && !a.closed && i < n.length; i++)
                    t.push(
                      (0, ir.Xf)(n[i]).subscribe(
                        (0, Du.x)(a, (r) => {
                          if (t) {
                            for (let s = 0; s < t.length; s++)
                              s !== i && t[s].unsubscribe();
                            t = null;
                          }
                          a.next(r);
                        })
                      )
                    );
                };
              })(n)
            );
      }
      const Bu = ["dotLeft"],
        Hu = ["dotRight"],
        rr = { s: 8, m: 16 };
      let $u = (() => {
        let n = class extends Ut.M$ {
          constructor(t, i, r, s) {
            super(t, i),
              (this.documentRef = r),
              (this.fromToTexts$ = s),
              (this.pointerDown$ = new Ce.x()),
              (this.min = 0),
              (this.max = 1 / 0),
              (this.segments = 0),
              (this.steps = 0),
              (this.quantum = 0),
              (this.size = "m"),
              (this.keySteps = null),
              (this.focusVisibleLeft = !1),
              (this.focusVisibleRight = !1),
              (this.pluralizeMap = null);
          }
          set pluralize(t) {
            this.pluralizeMap = Array.isArray(t) ? (0, Wt.KA)(t) : t;
          }
          get segmented() {
            return this.segments > 0;
          }
          get discrete() {
            return this.steps > 0;
          }
          get length() {
            return this.max - this.min;
          }
          get computedStep() {
            return this.steps
              ? 1 / this.steps
              : this.quantum
              ? this.quantum / this.length
              : 0.05;
          }
          get isLeftFocusable() {
            return !this.disabled && this.focusable && 100 !== this.right;
          }
          get isRightFocusable() {
            return !this.disabled && this.focusable && 100 !== this.left;
          }
          ngOnInit() {
            super.ngOnInit();
            const t = (0, je.eh)(this.documentRef, "mousemove"),
              i = (0, je.eh)(this.documentRef, "mouseup"),
              r = (0, je.eh)(this.documentRef, "touchmove"),
              s = (0, je.eh)(this.documentRef, "touchend");
            let c;
            this.pointerDown$
              .pipe(
                (0, x.U)((l) => {
                  const d = l.currentTarget.getBoundingClientRect(),
                    _ =
                      l instanceof MouseEvent
                        ? l.clientX
                        : l.touches[0].clientX,
                    g = (0, pe.uZ)(this.getFractionFromEvents(d, _), 0, 1),
                    b = 100 * g - 100 + this.right;
                  c =
                    Math.abs(100 * g - this.left) > Math.abs(b) ||
                    b > 0 ||
                    (0 === this.left && 100 === this.right);
                  const k = (0, pe.uZ)(
                      this.getCalibratedFractionFromEvents(d, _, c),
                      0,
                      1
                    ),
                    y = this.getValueFromFraction(this.fractionGuard(k));
                  return this.processValue(y, c), this.processFocus(c), d;
                }),
                (0, N.w)((l) =>
                  Ln([r, t]).pipe(
                    (0, x.U)((d) =>
                      this.getCalibratedFractionFromEvents(
                        l,
                        d instanceof MouseEvent
                          ? d.clientX
                          : d.touches[0].clientX,
                        c
                      )
                    ),
                    (0, P.R)(Ln([i, s]))
                  )
                ),
                (0, x.U)((l) => this.fractionGuard(l))
              )
              .subscribe((l) => {
                this.processValue(this.getValueFromFraction(l), c);
              });
          }
          ngOnDestroy() {
            super.ngOnDestroy(), this.pointerDown$.complete();
          }
          onMouseDown(t) {
            this.disabled || (t.preventDefault(), this.pointerDown$.next(t));
          }
          onTouchStart(t) {
            this.disabled || (t.preventDefault(), this.pointerDown$.next(t));
          }
          decrement(t) {
            this.processStep(!1, t);
          }
          increment(t) {
            this.processStep(!0, t);
          }
          getSegmentLabel(t) {
            return (0, pe.NM)(this.getValueFromFraction(t / this.segments), 2);
          }
          getSegmentPrefix(t, i) {
            return 1 !== this.segments ? "" : 0 === t ? `${i[0]} ` : `${i[1]} `;
          }
          onActiveZone(t) {
            this.updateFocused(t);
          }
          onLeftFocusVisible(t) {
            this.focusVisibleLeft = t;
          }
          onRightFocusVisible(t) {
            this.focusVisibleRight = t;
          }
          getFractionFromValue(t) {
            const i = (t - this.min) / this.length;
            return null !== this.keySteps
              ? this.fractionValueKeyStepConverter(t, !1)
              : (0, pe.uZ)(Number.isFinite(i) ? i : 1, 0, 1);
          }
          getValueFromFraction(t) {
            return null !== this.keySteps
              ? this.fractionValueKeyStepConverter(t, !0)
              : (0, pe.NM)(this.fractionGuard(t) * this.length + this.min, 7);
          }
          getCalibratedFractionFromEvents(t, i, r) {
            return this.getFractionFromEvents(t, i);
          }
          valueGuard(t) {
            return (0, pe.uZ)(
              this.quantum
                ? (0, pe.NM)(Math.round(t / this.quantum) * this.quantum, 7)
                : t,
              this.min,
              this.max
            );
          }
          processFocus(t) {
            !this.focusable ||
              !this.dotRight ||
              !this.dotLeft ||
              (0, ct.NY)(
                t ? this.dotRight.nativeElement : this.dotLeft.nativeElement
              );
          }
          fractionValueKeyStepConverter(t, i) {
            const r = [[0, this.min]].concat(this.keySteps, [[100, this.max]]);
            let s = 0,
              c = 100,
              l = this.min,
              d = this.max;
            for (let C = 1; C < r.length; C++)
              if ((i && r[C][0] / 100 > t) || (!i && r[C][1] > t)) {
                (s = r[C - 1][0] || 0),
                  (c = r[C][0]),
                  (l = r[C - 1][1]),
                  (d = r[C][1]);
                break;
              }
            const _ = c - s,
              g = d - l;
            return i
              ? (0, pe.NM)(((100 * t - s) / _) * g + l, 7)
              : (0, pe.uZ)(((t - l) / g) * _ + s, 0, 100) / 100;
          }
          fractionGuard(t) {
            return (0, pe.uZ)(
              this.discrete ? (0, pe.q$)(t, 1 / this.steps) : t,
              0,
              1
            );
          }
          getFractionFromEvents(t, i) {
            return (0, pe.NM)(
              (i - t.left - rr[this.size] / 2) / (t.width - rr[this.size]),
              7
            );
          }
        };
        return (
          (n.ɵfac = function (t) {
            return new (t || n)(
              e.ɵɵdirectiveInject(v.NgControl),
              e.ɵɵdirectiveInject(e.ChangeDetectorRef),
              e.ɵɵdirectiveInject(Document),
              e.ɵɵdirectiveInject(wt.Te)
            );
          }),
          (n.ɵdir = e.ɵɵdefineDirective({
            type: n,
            viewQuery: function (t, i) {
              if (
                (1 & t && (e.ɵɵviewQuery(Bu, 5), e.ɵɵviewQuery(Hu, 5)), 2 & t)
              ) {
                let r;
                e.ɵɵqueryRefresh((r = e.ɵɵloadQuery())) &&
                  (i.dotLeft = r.first),
                  e.ɵɵqueryRefresh((r = e.ɵɵloadQuery())) &&
                    (i.dotRight = r.first);
              }
            },
            hostVars: 3,
            hostBindings: function (t, i) {
              2 & t &&
                (e.ɵɵattribute("data-size", i.size),
                e.ɵɵclassProp("_segmented", i.segmented));
            },
            inputs: {
              min: "min",
              max: "max",
              segments: "segments",
              steps: "steps",
              quantum: "quantum",
              size: "size",
              keySteps: "keySteps",
              pluralize: "pluralize",
            },
            features: [e.ɵɵInheritDefinitionFeature],
          })),
          (0, u.__decorate)(
            [(0, e.ViewChild)("dotLeft")],
            n.prototype,
            "dotLeft",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.ViewChild)("dotRight")],
            n.prototype,
            "dotRight",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "min",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "max",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "segments",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "steps",
            void 0
          ),
          (0, u.__decorate)(
            [
              (0, e.Input)(),
              (0, I.TH)(Hn, "Quantum must be a non-negative number"),
            ],
            n.prototype,
            "quantum",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "pluralize",
            null
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, e.HostBinding)("attr.data-size"), (0, I.TH)()],
            n.prototype,
            "size",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.Input)(), (0, I.TH)()],
            n.prototype,
            "keySteps",
            void 0
          ),
          (0, u.__decorate)(
            [(0, e.HostBinding)("class._segmented")],
            n.prototype,
            "segmented",
            null
          ),
          (n = (0, u.__decorate)([(0, u.__param)(3, (0, e.Inject)(wt.Te))], n)),
          n
        );
      })();
      function ju(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span"),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "i18nPlural"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2).$implicit,
            i = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate1(
              " ",
              e.ɵɵpipeBind2(2, 1, i.getSegmentLabel(t), i.pluralizeMap),
              " "
            );
        }
      }
      function zu(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 12),
            e.ɵɵtext(1),
            e.ɵɵpipe(2, "tuiFormatNumber"),
            e.ɵɵtemplate(3, ju, 3, 4, "span", 13),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = a.ngIf,
            i = e.ɵɵnextContext().$implicit,
            r = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵtextInterpolate2(
              " ",
              r.getSegmentPrefix(i, t),
              " ",
              e.ɵɵpipeBind1(2, 3, r.getSegmentLabel(i)),
              " "
            ),
            e.ɵɵadvance(2),
            e.ɵɵproperty("ngIf", r.pluralizeMap);
        }
      }
      function Yu(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "span", 10),
            e.ɵɵtemplate(1, zu, 4, 5, "span", 11),
            e.ɵɵpipe(2, "async"),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵadvance(1),
            e.ɵɵproperty("ngIf", e.ɵɵpipeBind1(2, 1, t.fromToTexts$));
        }
      }
      function Uu(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "div", 8),
            e.ɵɵtemplate(1, Yu, 3, 3, "span", 9),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(1), e.ɵɵproperty("tuiRepeatTimesOf", t.segments + 1);
        }
      }
      var $n;
      let qe = ($n = class extends $u {
        constructor(a, t, i, r) {
          super(a, t, i, r);
        }
        get nativeFocusableElement() {
          return this.dotRight ? this.dotRight.nativeElement : null;
        }
        get focused() {
          return (0, ct.zV)(this.nativeFocusableElement);
        }
        get left() {
          return 0;
        }
        get right() {
          return 100 - 100 * this.getFractionFromValue(this.value);
        }
        getFallbackValue() {
          return 0;
        }
        processStep(a) {
          const t = this.getFractionFromValue(this.value),
            i = this.computedStep,
            r = this.getValueFromFraction(a ? t + i : t - i);
          this.processValue(r);
        }
        processValue(a) {
          this.updateValue(this.valueGuard(a));
        }
      });
      (qe.ɵfac = function (a) {
        return new (a || qe)(
          e.ɵɵdirectiveInject(v.NgControl, 10),
          e.ɵɵdirectiveInject(e.ChangeDetectorRef),
          e.ɵɵdirectiveInject(m.K0),
          e.ɵɵdirectiveInject(wt.Te)
        );
      }),
        (qe.ɵcmp = e.ɵɵdefineComponent({
          type: qe,
          selectors: [["tui-slider"]],
          features: [
            e.ɵɵProvidersFeature([
              { provide: Te.KZ, useExisting: (0, e.forwardRef)(() => $n) },
            ]),
            e.ɵɵInheritDefinitionFeature,
          ],
          decls: 8,
          vars: 11,
          consts: [
            [
              1,
              "event-catcher",
              3,
              "tuiActiveZoneChange",
              "mousedown",
              "touchstart",
            ],
            [1, "wrapper"],
            ["class", "segments", 4, "ngIf"],
            ["automation-id", "tui-slider__bar", 1, "bar"],
            [
              "automation-id",
              "tui-slider__left",
              1,
              "dot",
              3,
              "tuiFocusable",
              "tuiFocusVisibleChange",
              "keydown.arrowLeft.prevent",
              "keydown.arrowDown.prevent",
              "keydown.arrowRight.prevent",
              "keydown.arrowUp.prevent",
            ],
            ["dotLeft", ""],
            [
              "automation-id",
              "tui-slider__right",
              1,
              "dot",
              3,
              "tuiFocusable",
              "tuiFocusVisibleChange",
              "keydown.arrowLeft.prevent",
              "keydown.arrowDown.prevent",
              "keydown.arrowRight.prevent",
              "keydown.arrowUp.prevent",
            ],
            ["dotRight", ""],
            [1, "segments"],
            [
              "automation-id",
              "tui-slider__segment",
              "class",
              "segment",
              4,
              "tuiRepeatTimes",
              "tuiRepeatTimesOf",
            ],
            ["automation-id", "tui-slider__segment", 1, "segment"],
            ["class", "number", 4, "ngIf"],
            [1, "number"],
            [4, "ngIf"],
          ],
          template: function (a, t) {
            1 & a &&
              (e.ɵɵelementStart(0, "div", 0),
              e.ɵɵlistener("tuiActiveZoneChange", function (r) {
                return t.onActiveZone(r);
              })("mousedown", function (r) {
                return t.onMouseDown(r);
              })("touchstart", function (r) {
                return t.onTouchStart(r);
              }),
              e.ɵɵelementStart(1, "div", 1),
              e.ɵɵtemplate(2, Uu, 2, 1, "div", 2),
              e.ɵɵelementStart(3, "div", 3)(4, "div", 4, 5),
              e.ɵɵlistener("tuiFocusVisibleChange", function (r) {
                return t.onLeftFocusVisible(r);
              })("keydown.arrowLeft.prevent", function () {
                return t.decrement(!1);
              })("keydown.arrowDown.prevent", function () {
                return t.decrement(!1);
              })("keydown.arrowRight.prevent", function () {
                return t.increment(!1);
              })("keydown.arrowUp.prevent", function () {
                return t.increment(!1);
              }),
              e.ɵɵelementEnd(),
              e.ɵɵelementStart(6, "div", 6, 7),
              e.ɵɵlistener("tuiFocusVisibleChange", function (r) {
                return t.onRightFocusVisible(r);
              })("keydown.arrowLeft.prevent", function () {
                return t.decrement(!0);
              })("keydown.arrowDown.prevent", function () {
                return t.decrement(!0);
              })("keydown.arrowRight.prevent", function () {
                return t.increment(!0);
              })("keydown.arrowUp.prevent", function () {
                return t.increment(!0);
              }),
              e.ɵɵelementEnd()()()()),
              2 & a &&
                (e.ɵɵadvance(2),
                e.ɵɵproperty("ngIf", t.segmented),
                e.ɵɵadvance(1),
                e.ɵɵstyleProp("left", t.left, "%")("right", t.right, "%"),
                e.ɵɵadvance(1),
                e.ɵɵclassProp(
                  "dot_focus-visible",
                  t.focusVisibleLeft && t.computedFocused
                ),
                e.ɵɵproperty("tuiFocusable", t.isLeftFocusable),
                e.ɵɵadvance(2),
                e.ɵɵclassProp(
                  "dot_focus-visible",
                  t.focusVisibleRight && t.computedFocused
                ),
                e.ɵɵproperty("tuiFocusable", t.isRightFocusable));
          },
          dependencies: [m.O5, Mu, qt.t, en.q, tr.e, m.Ov, m.Gx, Iu],
          styles: [
            "[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);color:var(--tui-base-03);min-height:.125rem;font-size:1rem}[data-size='s'][_nghost-%COMP%]{min-height:.125rem;font-size:.5rem}._segmented[_nghost-%COMP%]{padding-bottom:1.25rem}._disabled[_nghost-%COMP%]{cursor:default;pointer-events:none;opacity:var(--tui-disabled-opacity)}.event-catcher[_ngcontent-%COMP%]{min-height:inherit;border-radius:inherit;padding:.4375rem 0;cursor:pointer}.wrapper[_ngcontent-%COMP%]{position:relative;min-height:inherit;border-radius:inherit;background-color:currentColor;border:solid transparent;border-width:0 1em}.bar[_ngcontent-%COMP%]{position:absolute;top:0;bottom:0;margin:0 -1em;border-radius:inherit;background-color:var(--tui-primary)}tui-input-slider[_nghost-%COMP%]   .bar[_ngcontent-%COMP%], tui-input-slider   [_nghost-%COMP%]   .bar[_ngcontent-%COMP%]{margin-left:calc(var(--tui-radius-m)/ 2);border-bottom-left-radius:calc(var(--tui-radius-m) * 5) calc(var(--tui-radius-m) * 1.5)}.dot[_ngcontent-%COMP%]{transition-property:background-color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;position:absolute;top:50%;z-index:1;width:1em;height:1em;transform:translate(0,-50%);border-radius:100%;background-color:var(--tui-primary);outline:0;cursor:ew-resize}.dot[_ngcontent-%COMP%]:last-child{right:0;transform:translate(0,-50%)}.dot[_ngcontent-%COMP%]:hover{background-color:var(--tui-primary-hover)}.dot[_ngcontent-%COMP%]:active{background-color:var(--tui-primary-active)}.dot_focus-visible[_ngcontent-%COMP%]{box-shadow:inset 0 0 0 2px var(--tui-focus)}.segments[_ngcontent-%COMP%]{position:relative;z-index:1;display:flex;justify-content:space-between;min-height:inherit;margin:0 -1em}.segments-spacer[_ngcontent-%COMP%]{height:1.625rem}.segment[_ngcontent-%COMP%]{position:relative;height:inherit;width:.25rem;background-color:rgba(0,0,0,.36);pointer-events:none}.segment[_ngcontent-%COMP%]:first-of-type, .segment[_ngcontent-%COMP%]:last-of-type{background-color:transparent}.number[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%,0);top:100%;font:var(--tui-font-text-s);margin-top:.5rem;color:var(--tui-text-02);white-space:nowrap}.segment[_ngcontent-%COMP%]:first-of-type   .number[_ngcontent-%COMP%]{left:-.05em;transform:none}.segment[_ngcontent-%COMP%]:last-of-type   .number[_ngcontent-%COMP%]{left:auto;right:-.05em;transform:none}._disabled[_nghost-%COMP%]   .number[_ngcontent-%COMP%]{color:var(--tui-text-01)}",
            ".dot[_ngcontent-%COMP%]:first-child{display:none}.wrapper[_ngcontent-%COMP%]{border-left:none}.bar[_ngcontent-%COMP%], .segments[_ngcontent-%COMP%]{margin-left:0}",
          ],
          changeDetection: 0,
        })),
        (qe.ctorParameters = () => [
          {
            type: v.NgControl,
            decorators: [
              { type: e.Optional },
              { type: e.Self },
              { type: e.Inject, args: [v.NgControl] },
            ],
          },
          {
            type: e.ChangeDetectorRef,
            decorators: [{ type: e.Inject, args: [e.ChangeDetectorRef] }],
          },
          { type: Document, decorators: [{ type: e.Inject, args: [m.K0] }] },
          { type: kt.y, decorators: [{ type: e.Inject, args: [wt.Te] }] },
        ]),
        (qe = $n =
          (0, u.__decorate)(
            [
              (0, u.__param)(0, (0, e.Optional)()),
              (0, u.__param)(0, (0, e.Self)()),
              (0, u.__param)(0, (0, e.Inject)(v.NgControl)),
              (0, u.__param)(1, (0, e.Inject)(e.ChangeDetectorRef)),
              (0, u.__param)(2, (0, e.Inject)(m.K0)),
              (0, u.__param)(3, (0, e.Inject)(wt.Te)),
            ],
            qe
          ));
      let Wu = (() => {
        let n = class {};
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
          (n.ɵinj = e.ɵɵdefineInjector({
            imports: [m.ez, Eu, qt.u, en.c, tr.A, Nu],
          })),
          n
        );
      })();
      p(14335);
      var or = p(3054),
        ar = p(2141),
        Zu = (p(56451), p(44671), p(69718), p(95385)),
        cr = p(51762),
        Qu = p(33507);
      const Ju = ["wrapper"];
      function qu(n, a) {
        1 & n && e.ɵɵelementContainer(0);
      }
      function eg(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementStart(0, "tui-loader", 4),
            e.ɵɵtemplate(1, qu, 1, 0, "ng-container", 5),
            e.ɵɵelementEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵproperty("overlay", !0)("showLoader", t.loading),
            e.ɵɵadvance(1),
            e.ɵɵproperty("ngTemplateOutlet", t.content);
        }
      }
      function tg(n, a) {
        if (
          (1 & n &&
            (e.ɵɵelementContainerStart(0),
            e.ɵɵprojection(1),
            e.ɵɵtemplate(2, eg, 2, 3, "tui-loader", 3),
            e.ɵɵelementContainerEnd()),
          2 & n)
        ) {
          const t = e.ɵɵnextContext();
          e.ɵɵadvance(2), e.ɵɵproperty("ngIf", t.async)("ngIfElse", t.content);
        }
      }
      const ng = ["*"];
      let Vn = (() => {
        let n = class {};
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵdir = e.ɵɵdefineDirective({
            type: n,
            selectors: [["", "tuiExpandContent", ""]],
          })),
          n
        );
      })();
      var Y = (() => {
        return (
          ((n = Y || (Y = {}))[(n.Idle = 0)] = "Idle"),
          (n[(n.Loading = 1)] = "Loading"),
          (n[(n.Prepared = 2)] = "Prepared"),
          (n[(n.Animated = 3)] = "Animated"),
          Y
        );
        var n;
      })();
      let rg = (() => {
          let n = class {
            constructor(t) {
              (this.changeDetectorRef = t),
                (this.state = Y.Idle),
                (this.async = !1),
                (this.expanded = null);
            }
            set expandedSetter(t) {
              if (null !== this.expanded)
                return this.state !== Y.Idle
                  ? ((this.expanded = t), void (this.state = Y.Animated))
                  : ((this.expanded = t),
                    void this.retrigger(
                      this.async && t ? Y.Loading : Y.Animated
                    ));
              this.expanded = t;
            }
            get overflow() {
              return this.state !== Y.Idle;
            }
            get loading() {
              return !!this.expanded && this.async && this.state === Y.Loading;
            }
            get height() {
              const { expanded: t, state: i, contentWrapper: r } = this;
              return (t && i === Y.Prepared) || (!t && i === Y.Animated)
                ? 0
                : r && ((!t && i === Y.Prepared) || (t && i === Y.Animated))
                ? r.nativeElement.offsetHeight
                : r && t && i === Y.Loading
                ? Math.max(r.nativeElement.offsetHeight, 48)
                : null;
            }
            get contentVisible() {
              return this.expanded || this.state !== Y.Idle;
            }
            onTransitionEnd(t) {
              (0, Qu.Xr)(t) &&
                "opacity" === t.propertyName &&
                this.state === Y.Animated &&
                (this.state = Y.Idle);
            }
            onExpandLoaded(t) {
              t.stopPropagation(),
                this.state === Y.Loading && this.retrigger(Y.Animated);
            }
            retrigger(t) {
              (this.state = Y.Prepared),
                setTimeout(() => {
                  this.state === Y.Prepared &&
                    ((this.state = t), this.changeDetectorRef.markForCheck());
                });
            }
          };
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(e.ɵɵdirectiveInject(e.ChangeDetectorRef));
            }),
            (n.ɵcmp = e.ɵɵdefineComponent({
              type: n,
              selectors: [["tui-expand"]],
              contentQueries: function (t, i, r) {
                if (
                  (1 & t && e.ɵɵcontentQuery(r, Vn, 5, e.TemplateRef), 2 & t)
                ) {
                  let s;
                  e.ɵɵqueryRefresh((s = e.ɵɵloadQuery())) &&
                    (i.content = s.first);
                }
              },
              viewQuery: function (t, i) {
                if ((1 & t && e.ɵɵviewQuery(Ju, 5), 2 & t)) {
                  let r;
                  e.ɵɵqueryRefresh((r = e.ɵɵloadQuery())) &&
                    (i.contentWrapper = r.first);
                }
              },
              hostVars: 9,
              hostBindings: function (t, i) {
                1 & t &&
                  e.ɵɵlistener("transitionend", function (s) {
                    return i.onTransitionEnd(s);
                  })("tui-expand-loaded", function (s) {
                    return i.onExpandLoaded(s);
                  }),
                  2 & t &&
                    (e.ɵɵattribute("aria-expanded", i.expanded),
                    e.ɵɵstyleProp("height", i.height, "px"),
                    e.ɵɵclassProp("_expanded", i.expanded)(
                      "_overflow",
                      i.overflow
                    )("_loading", i.loading));
              },
              inputs: {
                async: "async",
                expandedSetter: ["expanded", "expandedSetter"],
              },
              ngContentSelectors: ng,
              decls: 3,
              vars: 1,
              consts: [
                [1, "wrapper"],
                ["wrapper", ""],
                [4, "ngIf"],
                [
                  "size",
                  "l",
                  3,
                  "overlay",
                  "showLoader",
                  4,
                  "ngIf",
                  "ngIfElse",
                ],
                ["size", "l", 3, "overlay", "showLoader"],
                [4, "ngTemplateOutlet"],
              ],
              template: function (t, i) {
                1 & t &&
                  (e.ɵɵprojectionDef(),
                  e.ɵɵelementStart(0, "div", 0, 1),
                  e.ɵɵtemplate(2, tg, 3, 2, "ng-container", 2),
                  e.ɵɵelementEnd()),
                  2 & t &&
                    (e.ɵɵadvance(2), e.ɵɵproperty("ngIf", i.contentVisible));
              },
              dependencies: [m.O5, m.tP, Le.kM],
              styles: [
                "[_nghost-%COMP%]{display:block;transition-property:opacity,height,visibility;transition-duration:var(--tui-duration,300ms);opacity:0}._overflow[_nghost-%COMP%]{overflow:hidden}._expanded[_nghost-%COMP%]{opacity:1;transform:translate3d(0,0,0)}._loading[_nghost-%COMP%]{opacity:.99}.wrapper[_ngcontent-%COMP%]:after, .wrapper[_ngcontent-%COMP%]:before{content:'';display:table}",
              ],
              changeDetection: 0,
            })),
            (0, u.__decorate)(
              [(0, e.ViewChild)("wrapper")],
              n.prototype,
              "contentWrapper",
              void 0
            ),
            (0, u.__decorate)(
              [(0, e.Input)(), (0, I.TH)()],
              n.prototype,
              "async",
              void 0
            ),
            (0, u.__decorate)(
              [(0, e.Input)("expanded"), (0, I.NH)()],
              n.prototype,
              "expandedSetter",
              null
            ),
            (0, u.__decorate)(
              [(0, e.ContentChild)(Vn, { read: e.TemplateRef })],
              n.prototype,
              "content",
              void 0
            ),
            (0, u.__decorate)(
              [
                (0, e.HostBinding)("class._expanded"),
                (0, e.HostBinding)("attr.aria-expanded"),
              ],
              n.prototype,
              "expanded",
              void 0
            ),
            (0, u.__decorate)(
              [(0, e.HostBinding)("class._overflow")],
              n.prototype,
              "overflow",
              null
            ),
            (0, u.__decorate)(
              [(0, e.HostBinding)("class._loading")],
              n.prototype,
              "loading",
              null
            ),
            (0, u.__decorate)(
              [(0, e.HostBinding)("style.height.px")],
              n.prototype,
              "height",
              null
            ),
            (0, u.__decorate)(
              [(0, e.HostListener)("transitionend", ["$event"])],
              n.prototype,
              "onTransitionEnd",
              null
            ),
            (0, u.__decorate)(
              [(0, e.HostListener)($.P8, ["$event"])],
              n.prototype,
              "onExpandLoaded",
              null
            ),
            (n = (0, u.__decorate)(
              [(0, u.__param)(0, (0, e.Inject)(e.ChangeDetectorRef))],
              n
            )),
            n
          );
        })(),
        og = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({ imports: [m.ez, Le.dS] })),
            n
          );
        })();
      const ag = ["focusableElement"];
      function sg(n, a) {
        if ((1 & n && e.ɵɵelement(0, "tui-svg", 8), 2 & n)) {
          const t = e.ɵɵnextContext();
          e.ɵɵclassProp("icon_open", t.open);
        }
      }
      function cg(n, a) {
        1 & n &&
          (e.ɵɵelementStart(0, "div", 9),
          e.ɵɵprojection(1, 1),
          e.ɵɵelementEnd());
      }
      function lg(n, a) {
        if ((1 & n && e.ɵɵelement(0, "div", 11), 2 & n)) {
          const t = e.ɵɵnextContext(2);
          e.ɵɵproperty("content", t.lazyContent);
        }
      }
      function pg(n, a) {
        if ((1 & n && e.ɵɵtemplate(0, lg, 1, 1, "div", 10), 2 & n)) {
          const t = e.ɵɵnextContext();
          e.ɵɵproperty("ngIf", t.lazyContent);
        }
      }
      const dg = ["*", [["", "tuiAccordionItemContent", ""]]];
      let lr = (() => {
          let n = class extends L.GL {
            constructor(t, i) {
              super(t, i);
            }
          };
          return (
            (n.ɵfac = function (t) {
              return new (t || n)(
                e.ɵɵdirectiveInject(e.TemplateRef, 2),
                e.ɵɵdirectiveInject(e.ChangeDetectorRef)
              );
            }),
            (n.ɵdir = e.ɵɵdefineDirective({
              type: n,
              selectors: [["ng-template", "tuiAccordionItemContent", ""]],
              features: [e.ɵɵInheritDefinitionFeature],
            })),
            (n = (0, u.__decorate)(
              [
                (0, u.__param)(0, (0, e.Inject)(e.TemplateRef)),
                (0, u.__param)(0, (0, e.Self)()),
                (0, u.__param)(1, (0, e.Inject)(e.ChangeDetectorRef)),
              ],
              n
            )),
            n
          );
        })(),
        pr = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵdir = e.ɵɵdefineDirective({
              type: n,
              selectors: [
                ["", "tuiAccordionItemContent", "", 5, "ng-template"],
              ],
            })),
            n
          );
        })();
      var jn;
      let K = (jn = class extends Ut.Xn {
        constructor(a, t) {
          super(),
            (this.changeDetectorRef = a),
            (this.mode$ = t),
            (this.noPadding = !1),
            (this.showArrow = !0),
            (this.borders = "all"),
            (this.size = "m"),
            (this.disabled = !1),
            (this.disableHover = !1),
            (this.open = !1),
            (this.async = !1),
            (this.openChange = new e.EventEmitter());
        }
        get nativeFocusableElement() {
          return this.disabled || !this.focusableElement
            ? null
            : this.focusableElement.nativeElement;
        }
        get focused() {
          return (0, ct.zV)(this.nativeFocusableElement);
        }
        onHovered(a) {
          this.disableHover || this.updateHovered(a);
        }
        onFocused(a) {
          this.updateFocused(a);
        }
        onFocusVisible(a) {
          this.updateFocusVisible(a);
        }
        onRowToggle() {
          this.disabled || this.updateOpen(!this.open);
        }
        onItemKeyDownEsc(a) {
          !this.focused ||
            !this.open ||
            (a.stopPropagation(), this.updateOpen(!1));
        }
        onItemKeyDownSpace(a) {
          this.focused && (a.preventDefault(), this.onRowToggle());
        }
        close() {
          this.updateOpen(!1), this.changeDetectorRef.markForCheck();
        }
        updateOpen(a) {
          this.open !== a && ((this.open = a), this.openChange.emit(a));
        }
      });
      (K.ɵfac = function (a) {
        return new (a || K)(
          e.ɵɵdirectiveInject(e.ChangeDetectorRef),
          e.ɵɵdirectiveInject(we.Au)
        );
      }),
        (K.ɵcmp = e.ɵɵdefineComponent({
          type: K,
          selectors: [["tui-accordion-item"]],
          contentQueries: function (a, t, i) {
            if (
              (1 & a &&
                (e.ɵɵcontentQuery(i, pr, 5), e.ɵɵcontentQuery(i, lr, 5)),
              2 & a)
            ) {
              let r;
              e.ɵɵqueryRefresh((r = e.ɵɵloadQuery())) &&
                (t.eagerContent = r.first),
                e.ɵɵqueryRefresh((r = e.ɵɵloadQuery())) &&
                  (t.lazyContent = r.first);
            }
          },
          viewQuery: function (a, t) {
            if ((1 & a && e.ɵɵviewQuery(ag, 5), 2 & a)) {
              let i;
              e.ɵɵqueryRefresh((i = e.ɵɵloadQuery())) &&
                (t.focusableElement = i.first);
            }
          },
          hostVars: 8,
          hostBindings: function (a, t) {
            1 & a &&
              e.ɵɵlistener("$.data-mode.attr", function () {
                return t.mode$;
              }),
              2 & a &&
                (e.ɵɵattribute("data-tui-host-borders", t.borders)(
                  "data-size",
                  t.size
                ),
                e.ɵɵclassProp("_no-padding", t.noPadding)(
                  "_has-arrow",
                  t.showArrow
                )("_disabled", t.disabled));
          },
          inputs: {
            noPadding: "noPadding",
            showArrow: "showArrow",
            borders: "borders",
            size: "size",
            disabled: "disabled",
            disableHover: "disableHover",
            open: "open",
            async: "async",
          },
          outputs: { openChange: "openChange" },
          features: [
            e.ɵɵProvidersFeature([
              { provide: Te.KZ, useExisting: (0, e.forwardRef)(() => jn) },
              Zu.CV,
            ]),
            e.ɵɵInheritDefinitionFeature,
          ],
          ngContentSelectors: ["*", "[tuiAccordionItemContent]"],
          decls: 9,
          vars: 7,
          consts: [
            [
              "automation-id",
              "tui-accordion__item-wrapper",
              1,
              "wrapper",
              3,
              "tuiFocusable",
              "tuiFocusVisibleChange",
              "tuiFocusedChange",
              "keydown.space",
              "keydown.enter",
              "keydown.esc",
            ],
            ["focusableElement", ""],
            [
              "automation-id",
              "tui-accordion__item-header",
              1,
              "header",
              3,
              "tuiHoveredChange",
              "click",
            ],
            ["automation-id", "tui-accordion__item-title", 1, "title"],
            [
              "automation-id",
              "tui-accordion__item-arrow",
              "src",
              "tuiIconChevronDownLarge",
              "class",
              "icon",
              3,
              "icon_open",
              4,
              "ngIf",
            ],
            [3, "async", "expanded"],
            ["class", "content", 4, "ngIf"],
            ["tuiExpandContent", ""],
            [
              "automation-id",
              "tui-accordion__item-arrow",
              "src",
              "tuiIconChevronDownLarge",
              1,
              "icon",
            ],
            [1, "content"],
            [
              "polymorpheus-outlet",
              "",
              "automation-id",
              "tui-accordion__item-content",
              "class",
              "content",
              3,
              "content",
              4,
              "ngIf",
            ],
            [
              "polymorpheus-outlet",
              "",
              "automation-id",
              "tui-accordion__item-content",
              1,
              "content",
              3,
              "content",
            ],
          ],
          template: function (a, t) {
            1 & a &&
              (e.ɵɵprojectionDef(dg),
              e.ɵɵelementStart(0, "div", 0, 1),
              e.ɵɵlistener("tuiFocusVisibleChange", function (r) {
                return t.onFocusVisible(r);
              })("tuiFocusedChange", function (r) {
                return t.onFocused(r);
              })("keydown.space", function (r) {
                return t.onItemKeyDownSpace(r);
              })("keydown.enter", function (r) {
                return t.onItemKeyDownSpace(r);
              })("keydown.esc", function (r) {
                return t.onItemKeyDownEsc(r);
              }),
              e.ɵɵelementStart(2, "div", 2),
              e.ɵɵlistener("tuiHoveredChange", function (r) {
                return t.onHovered(r);
              })("click", function () {
                return t.onRowToggle();
              }),
              e.ɵɵelementStart(3, "div", 3),
              e.ɵɵprojection(4),
              e.ɵɵelementEnd(),
              e.ɵɵtemplate(5, sg, 1, 2, "tui-svg", 4),
              e.ɵɵelementEnd(),
              e.ɵɵelementStart(6, "tui-expand", 5),
              e.ɵɵtemplate(7, cg, 2, 0, "div", 6),
              e.ɵɵtemplate(8, pg, 1, 1, "ng-template", 7),
              e.ɵɵelementEnd()()),
              2 & a &&
                (e.ɵɵproperty("tuiFocusable", t.computedFocusable),
                e.ɵɵadvance(2),
                e.ɵɵclassProp("header_open", t.open),
                e.ɵɵadvance(3),
                e.ɵɵproperty("ngIf", t.showArrow),
                e.ɵɵadvance(1),
                e.ɵɵproperty("async", t.async)("expanded", t.open),
                e.ɵɵadvance(1),
                e.ɵɵproperty("ngIf", t.eagerContent));
          },
          dependencies: [m.O5, or.U, en.q, qt.t, ar.c, L.r1, Pt.P, rg, Vn],
          styles: [
            "[_nghost-%COMP%]{position:relative;display:block;overflow:hidden;border-radius:var(--tui-radius-l)}[data-tui-host-borders=top-bottom][_nghost-%COMP%]{border-radius:0!important}.wrapper[_ngcontent-%COMP%]{position:relative;border-radius:inherit}.wrapper[_ngcontent-%COMP%]:focus{outline:0}.wrapper[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;width:100%;height:100%;content:'';box-sizing:border-box;border-radius:inherit;border:1px solid var(--tui-base-04);pointer-events:none}[_nghost-%COMP%]:not([data-tui-host-borders])   .wrapper[_ngcontent-%COMP%]:after{border-width:0}[data-tui-host-borders=all][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-width:1px}[data-tui-host-borders=top-bottom][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-left-width:0;border-right-width:0}[data-tui-host-borders=top][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-left-width:0;border-right-width:0;border-bottom-width:0}[data-tui-host-borders=bottom][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-left-width:0;border-right-width:0;border-top-width:0}[data-mode=onDark][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-color:var(--tui-base-03)}[data-mode=onLight][_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border-color:var(--tui-text-01)}._focus-visible[_nghost-%COMP%]   .wrapper[_ngcontent-%COMP%]:after{border:2px solid var(--tui-focus)}[_nghost-%COMP%]:not([data-mode])   .wrapper[_ngcontent-%COMP%]{background:var(--tui-base-01)}.header[_ngcontent-%COMP%]{transition-property:background;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;display:flex;font:var(--tui-font-text-l);align-items:center;box-sizing:border-box;border-bottom:1px solid var(--tui-base-04);min-height:var(--tui-height-l);padding:.75rem 1.25rem;color:var(--tui-text-01);cursor:pointer}[data-mode=onDark][_nghost-%COMP%]   .header[_ngcontent-%COMP%]{color:var(--tui-text-01-night);border-color:var(--tui-base-03)}[data-mode=onLight][_nghost-%COMP%]   .header[_ngcontent-%COMP%]{border-color:var(--tui-text-01)}[_nghost-%COMP%]:not([data-tui-host-borders])   .header[_ngcontent-%COMP%]{border-bottom-width:0;box-shadow:none}._has-arrow[_nghost-%COMP%]   .header[_ngcontent-%COMP%]{padding-right:.75rem}._hovered[_nghost-%COMP%]:not([data-mode])   .header[_ngcontent-%COMP%]{background:var(--tui-base-02)}._hovered[data-mode=onDark][_nghost-%COMP%]   .header[_ngcontent-%COMP%], [data-mode=onDark][_nghost-%COMP%]   .header_open[_ngcontent-%COMP%]{background:var(--tui-clear-inverse)}._hovered[data-mode=onLight][_nghost-%COMP%]   .header[_ngcontent-%COMP%], [data-mode=onLight][_nghost-%COMP%]   .header_open[_ngcontent-%COMP%]{background:var(--tui-clear)}[data-size='s'][_nghost-%COMP%]   .header[_ngcontent-%COMP%]{font:var(--tui-font-text-m);min-height:var(--tui-height-m);padding:.625rem .75rem .625rem 1rem}._no-padding[_nghost-%COMP%]   .header[_ngcontent-%COMP%]{padding-left:0;padding-right:0}._disabled[_nghost-%COMP%]   .header[_ngcontent-%COMP%]{cursor:default}.title[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;margin-right:0;flex-grow:1}._has-arrow[_nghost-%COMP%]   .title[_ngcontent-%COMP%]{margin-right:.5rem}.icon[_ngcontent-%COMP%]{transition-property:transform,color;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out;width:1.5rem;height:1.5rem;margin-left:auto;color:var(--tui-base-06)}.icon_open[_ngcontent-%COMP%]{transform:rotate(180deg)}[data-mode][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{opacity:var(--tui-disabled-opacity)}._hovered[data-mode][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{opacity:.8}[data-mode=onDark][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{color:var(--tui-text-01-night)}[data-mode=onLight][_nghost-%COMP%]   .icon[_ngcontent-%COMP%]{color:var(--tui-text-01)}._hovered[_nghost-%COMP%]:not([data-mode])   .icon[_ngcontent-%COMP%]{color:var(--tui-base-07)}.content[_ngcontent-%COMP%]{font:var(--tui-font-text-m);padding:1.25rem;word-wrap:break-word}[data-size='s'][_nghost-%COMP%]   .content[_ngcontent-%COMP%]{font:var(--tui-font-text-s);padding:1rem}",
          ],
          changeDetection: 0,
        })),
        (K.ctorParameters = () => [
          {
            type: e.ChangeDetectorRef,
            decorators: [{ type: e.Inject, args: [e.ChangeDetectorRef] }],
          },
          { type: kt.y, decorators: [{ type: e.Inject, args: [we.Au] }] },
        ]),
        (0, u.__decorate)(
          [(0, e.ViewChild)("focusableElement")],
          K.prototype,
          "focusableElement",
          void 0
        ),
        (0, u.__decorate)(
          [
            (0, e.Input)(),
            (0, e.HostBinding)("class._no-padding"),
            (0, I.TH)(),
          ],
          K.prototype,
          "noPadding",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, e.HostBinding)("class._has-arrow"), (0, I.TH)()],
          K.prototype,
          "showArrow",
          void 0
        ),
        (0, u.__decorate)(
          [
            (0, e.Input)(),
            (0, e.HostBinding)("attr.data-tui-host-borders"),
            (0, I.TH)(),
          ],
          K.prototype,
          "borders",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, e.HostBinding)("attr.data-size"), (0, I.TH)()],
          K.prototype,
          "size",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, e.HostBinding)("class._disabled"), (0, I.TH)()],
          K.prototype,
          "disabled",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          K.prototype,
          "disableHover",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          K.prototype,
          "open",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.Input)(), (0, I.TH)()],
          K.prototype,
          "async",
          void 0
        ),
        (0, u.__decorate)([(0, e.Output)()], K.prototype, "openChange", void 0),
        (0, u.__decorate)(
          [(0, e.ContentChild)(pr)],
          K.prototype,
          "eagerContent",
          void 0
        ),
        (0, u.__decorate)(
          [(0, e.ContentChild)(lr)],
          K.prototype,
          "lazyContent",
          void 0
        ),
        (K = jn =
          (0, u.__decorate)(
            [
              (0, u.__param)(0, (0, e.Inject)(e.ChangeDetectorRef)),
              (0, u.__param)(1, (0, e.Inject)(we.Au)),
            ],
            K
          ));
      let dr = (() => {
        let n = class {};
        return (
          (n.ɵfac = function (t) {
            return new (t || n)();
          }),
          (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
          (n.ɵinj = e.ɵɵdefineInjector({
            imports: [m.ez, or.F, en.c, qt.u, ar.V, L.wq, Pt.E, cr.n6, og],
          })),
          n
        );
      })();
      var mr = p(46693);
      p(59468);
      let Cg = (() => {
          let n = class {};
          return (
            (n.ɵfac = function (t) {
              return new (t || n)();
            }),
            (n.ɵmod = e.ɵɵdefineNgModule({ type: n })),
            (n.ɵinj = e.ɵɵdefineInjector({})),
            n
          );
        })(),
        xg = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [ci],
              imports: [
                m.ez,
                Jt.m,
                Ie.Jy,
                Be.Qf,
                v.FormsModule,
                W.cn,
                Pt.E,
                mr.fN,
                He.Cl,
                H.go,
                Ht.TH,
                Le.dS,
                G.vi,
                Cg,
              ],
            }));
          }
          return n;
        })(),
        bg = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [ot, Bi],
              imports: [
                Ot,
                v.ReactiveFormsModule,
                W.cn,
                Be.Qf,
                G.vi,
                H.go,
                ji.f,
                Pt.E,
                er.pc,
                St.jh,
                mr.fN,
                Tt.Cu,
                Le.dS,
                dr,
                Ie.Jy,
              ],
            }));
          }
          return n;
        })();
      var yg = p(70930),
        Sg = p(50727),
        zn = p(4707);
      const Tg = {
        url: "",
        deserializer: (n) => JSON.parse(n.data),
        serializer: (n) => JSON.stringify(n),
      };
      class Yn extends Ce.u {
        constructor(a, t) {
          if ((super(), (this._socket = null), a instanceof kt.y))
            (this.destination = t), (this.source = a);
          else {
            const i = (this._config = Object.assign({}, Tg));
            if (((this._output = new Ce.x()), "string" == typeof a)) i.url = a;
            else for (const r in a) a.hasOwnProperty(r) && (i[r] = a[r]);
            if (!i.WebSocketCtor && WebSocket) i.WebSocketCtor = WebSocket;
            else if (!i.WebSocketCtor)
              throw new Error("no WebSocket constructor can be found");
            this.destination = new zn.t();
          }
        }
        lift(a) {
          const t = new Yn(this._config, this.destination);
          return (t.operator = a), (t.source = this), t;
        }
        _resetState() {
          (this._socket = null),
            this.source || (this.destination = new zn.t()),
            (this._output = new Ce.x());
        }
        multiplex(a, t, i) {
          const r = this;
          return new kt.y((s) => {
            try {
              r.next(a());
            } catch (l) {
              s.error(l);
            }
            const c = r.subscribe({
              next: (l) => {
                try {
                  i(l) && s.next(l);
                } catch (d) {
                  s.error(d);
                }
              },
              error: (l) => s.error(l),
              complete: () => s.complete(),
            });
            return () => {
              try {
                r.next(t());
              } catch (l) {
                s.error(l);
              }
              c.unsubscribe();
            };
          });
        }
        _connectSocket() {
          const {
              WebSocketCtor: a,
              protocol: t,
              url: i,
              binaryType: r,
            } = this._config,
            s = this._output;
          let c = null;
          try {
            (c = t ? new a(i, t) : new a(i)),
              (this._socket = c),
              r && (this._socket.binaryType = r);
          } catch (d) {
            return void s.error(d);
          }
          const l = new Sg.w0(() => {
            (this._socket = null), c && 1 === c.readyState && c.close();
          });
          (c.onopen = (d) => {
            const { _socket: _ } = this;
            if (!_) return c.close(), void this._resetState();
            const { openObserver: g } = this._config;
            g && g.next(d);
            const C = this.destination;
            (this.destination = yg.Lv.create(
              (b) => {
                if (1 === c.readyState)
                  try {
                    const { serializer: k } = this._config;
                    c.send(k(b));
                  } catch (k) {
                    this.destination.error(k);
                  }
              },
              (b) => {
                const { closingObserver: k } = this._config;
                k && k.next(void 0),
                  b && b.code
                    ? c.close(b.code, b.reason)
                    : s.error(
                        new TypeError(
                          "WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }"
                        )
                      ),
                  this._resetState();
              },
              () => {
                const { closingObserver: b } = this._config;
                b && b.next(void 0), c.close(), this._resetState();
              }
            )),
              C && C instanceof zn.t && l.add(C.subscribe(this.destination));
          }),
            (c.onerror = (d) => {
              this._resetState(), s.error(d);
            }),
            (c.onclose = (d) => {
              c === this._socket && this._resetState();
              const { closeObserver: _ } = this._config;
              _ && _.next(d), d.wasClean ? s.complete() : s.error(d);
            }),
            (c.onmessage = (d) => {
              try {
                const { deserializer: _ } = this._config;
                s.next(_(d));
              } catch (_) {
                s.error(_);
              }
            });
        }
        _subscribe(a) {
          const { source: t } = this;
          return t
            ? t.subscribe(a)
            : (this._socket || this._connectSocket(),
              this._output.subscribe(a),
              a.add(() => {
                const { _socket: i } = this;
                0 === this._output.observers.length &&
                  (i && (1 === i.readyState || 0 === i.readyState) && i.close(),
                  this._resetState());
              }),
              a);
        }
        unsubscribe() {
          const { _socket: a } = this;
          a && (1 === a.readyState || 0 === a.readyState) && a.close(),
            this._resetState(),
            super.unsubscribe();
        }
      }
      var lt = p(33216),
        wg = p(71290),
        kg = p(13307);
      const Ag = xi.G.websocketBaseUrl;
      let _r = (() => {
          class n {
            constructor(t, i, r, s, c, l, d, _, g) {
              (this.authService = t),
                (this.notificationsService = i),
                (this.onramperFormService = r),
                (this.onramperFormCalculationService = s),
                (this.onramperService = c),
                (this.recentTradesStoreService = l),
                (this.swapFormService = d),
                (this.onramperApiService = _),
                (this.iframeService = g),
                (this.relocateToOnChain = !1),
                this.subscribeOnUserChange(),
                this.subscribeOnForm(),
                this.subscribeOnWidgetOpened();
            }
            checkTradeStatus() {
              var t = this;
              return (0, O.Z)(function* () {
                if (t.iframeService.isIframe) return;
                const i =
                  t.recentTradesStoreService.currentUserRecentTrades.find(
                    (r) =>
                      (0, wg.I)(r) &&
                      r.calculatedStatusFrom === o.TxStatus.PENDING
                  );
                if (i) {
                  const r = yield t.onramperApiService.getTradeData(
                    t.authService.userAddress,
                    i.txId
                  );
                  r.status === lt.v.COMPLETED || r.status === lt.v.FAILED
                    ? t.recentTradesStoreService.updateTrade({
                        ...i,
                        calculatedStatusFrom:
                          r.status === lt.v.COMPLETED
                            ? o.TxStatus.SUCCESS
                            : o.TxStatus.FAIL,
                        nativeAmount: r.out_amount,
                      })
                    : ((t.onramperFormCalculationService.tradeStatus =
                        h.BUY_NATIVE_IN_PROGRESS),
                      t.notifyProgress(),
                      yield t.setupBalanceCheckTimer(
                        i.txId,
                        i.toToken.blockchain,
                        i.nativeAmount
                      ));
                }
              })();
            }
            subscribeOnUserChange() {
              var t = this;
              this.authService.currentUser$
                .pipe(
                  (0, N.w)(
                    (i) => (
                      this.intervalSubscription$?.unsubscribe(),
                      i?.address
                        ? (this.checkTradeStatus(),
                          (function Pg(n) {
                            return new Yn(n);
                          })(`${Ag}/onramp/transactions_receiver/${i.address}`))
                        : (0, V.of)(null)
                    )
                  ),
                  (0, N.w)(
                    (function () {
                      var i = (0, O.Z)(function* (r) {
                        if (r && "message" in r) {
                          const s = JSON.parse(r.message);
                          s?.status && (yield t.parseTransactionInfo(s));
                        }
                      });
                      return function (r) {
                        return i.apply(this, arguments);
                      };
                    })()
                  )
                )
                .subscribe();
            }
            parseTransactionInfo(t) {
              var i = this;
              return (0, O.Z)(function* () {
                if (t?.status === lt.v.PENDING)
                  i.inputForm &&
                    (i.notifyProgress(),
                    (i.onramperFormService.widgetOpened = !1),
                    (i.onramperFormCalculationService.tradeStatus =
                      h.BUY_NATIVE_IN_PROGRESS),
                    (i.currentRecentTrade = {
                      fromFiat: i.inputForm.fromFiat,
                      toToken: i.inputForm.toToken,
                      nativeAmount: t.out_amount,
                      txId: t.transaction_id,
                      timestamp: Date.now(),
                      calculatedStatusFrom: o.TxStatus.PENDING,
                    }),
                    i.iframeService.isIframe ||
                      i.recentTradesStoreService.saveTrade(
                        i.authService.userAddress,
                        i.currentRecentTrade
                      ),
                    yield i.setupBalanceCheckTimer(
                      t.transaction_id,
                      i.inputForm.toToken.blockchain,
                      t.out_amount
                    ));
                else if (t?.status === lt.v.COMPLETED)
                  yield i.handleSuccessfulTrade(t.transaction_id, t.out_amount);
                else if (t?.status === lt.v.FAILED) {
                  const r = i.recentTradesStoreService.getSpecificOnramperTrade(
                    t.transaction_id
                  );
                  i.iframeService.isIframe ||
                    i.recentTradesStoreService.updateTrade({
                      ...r,
                      calculatedStatusFrom: o.TxStatus.FAIL,
                    }),
                    i.progressNotificationSubscription$?.unsubscribe(),
                    i.onramperFormCalculationService.stopBuyNativeInProgress(),
                    i.onramperFormCalculationService.updateRate();
                }
              })();
            }
            setupBalanceCheckTimer(t, i, r) {
              var s = this;
              return (0, O.Z)(function* () {
                const c = s.authService.userAddress,
                  l = new M.Z(r).multipliedBy(0.98),
                  d = o.Injector.web3PublicService.getWeb3Public(i).getBalance;
                let _ = yield d(c);
                s.intervalSubscription$ = (0, vt.F)(2e4)
                  .pipe(
                    (0, N.w)(
                      (0, O.Z)(function* () {
                        const g = yield d(c),
                          C = o.Web3Pure.fromWei(g.minus(_));
                        return l.lte(C)
                          ? (yield s.handleSuccessfulTrade(t, C.toFixed()), !0)
                          : ((_ = g), !1);
                      })
                    ),
                    (0, zt.o)((g) => !g)
                  )
                  .subscribe();
              })();
            }
            handleSuccessfulTrade(t, i) {
              var r = this;
              return (0, O.Z)(function* () {
                const s = r.iframeService.isIframe
                  ? r.currentRecentTrade
                  : r.recentTradesStoreService.getSpecificOnramperTrade(t);
                if (
                  !s ||
                  s.txId !== t ||
                  s.calculatedStatusFrom === o.TxStatus.SUCCESS
                )
                  return;
                const c = {
                  ...s,
                  calculatedStatusFrom: o.TxStatus.SUCCESS,
                  nativeAmount: i,
                };
                r.iframeService.isIframe
                  ? (r.currentRecentTrade = c)
                  : r.recentTradesStoreService.updateTrade(c),
                  r.progressNotificationSubscription$?.unsubscribe(),
                  r.notificationsService.show(new L.Al(vi.U), {
                    status: "success",
                    autoClose: 15e3,
                    data: { type: "on-chain", withRecentTrades: !0 },
                  }),
                  r.onramperFormCalculationService.stopBuyNativeInProgress(),
                  r.onramperFormCalculationService.updateRate(),
                  (r.iframeService.isIframe || r.relocateToOnChain) &&
                    !o.EvmWeb3Pure.isNativeAddress(
                      r.inputForm.toToken.address
                    ) &&
                    (yield r.onramperService.updateSwapFormByRecentTrade(t));
              })();
            }
            notifyProgress() {
              this.progressNotificationSubscription$ =
                this.notificationsService.show(new L.Al(hi.d), {
                  status: "info",
                  autoClose: !1,
                  data: { withRecentTrades: !0 },
                });
            }
            subscribeOnForm() {
              this.swapFormService.inputValueDistinct$.subscribe(() => {
                this.relocateToOnChain = !1;
              });
            }
            subscribeOnWidgetOpened() {
              this.onramperFormService.widgetOpened$.subscribe((t) => {
                t &&
                  ((this.relocateToOnChain = !0),
                  (this.inputForm =
                    this.onramperFormCalculationService.inputValue));
              });
            }
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(
                e.ɵɵinject(U.e),
                e.ɵɵinject(dt.T),
                e.ɵɵinject(mt),
                e.ɵɵinject(Rn),
                e.ɵɵinject(qn.i),
                e.ɵɵinject(Vt.o),
                e.ɵɵinject(E.q),
                e.ɵɵinject(kg.L),
                e.ɵɵinject(Q.b)
              );
            });
            static #t = (this.ɵprov = e.ɵɵdefineInjectable({
              token: n,
              factory: n.ɵfac,
            }));
          }
          return n;
        })(),
        Mg = (() => {
          class n {
            constructor(t) {}
            static #e = (this.ɵfac = function (i) {
              return new (i || n)(e.ɵɵinject(_r));
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [_r, Rn, mt, Rt, zi],
              imports: [Ot],
            }));
          }
          return n;
        })(),
        Eg = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [Ki, ft, yt],
              imports: [
                Ot,
                v.ReactiveFormsModule,
                Gi,
                W.cn,
                St.jh,
                Tt.Cu,
                H.go,
                G.vi,
              ],
            }));
          }
          return n;
        })(),
        Ig = (() => {
          class n {
            static #e = (this.ɵfac = function (i) {
              return new (i || n)();
            });
            static #t = (this.ɵmod = e.ɵɵdefineNgModule({ type: n }));
            static #n = (this.ɵinj = e.ɵɵdefineInjector({
              providers: [ve, pt, Je, Oe],
              imports: [
                Tu,
                Ot,
                Pu,
                bg,
                Mg,
                Eg,
                St.jh,
                er.pc,
                Pt.E,
                Tt.Cu,
                v.ReactiveFormsModule,
                Be.Qf,
                Wu,
                Xt.YM,
                Gi,
                W.cn,
                G.vi,
                H.go,
                xg,
                v.FormsModule,
                Le.dS,
                fd,
                dr,
                Ht.TH,
              ],
            }));
          }
          return n;
        })();
    },
  },
]);
